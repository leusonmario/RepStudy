import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        boolean boolean12 = explodedArchive10.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap13);
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter3 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter3.deserializeObjectExplodedArchive11();
        java.io.File file5 = serializedObjectSupporter3.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive(file5);
        java.io.File file7 = explodedArchive6.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest9 = serializedObjectSupporter8.deserializeObjectManifest1();
        explodedArchive6.manifest = manifest9;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.io.File file15 = explodedArchive14.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive14.entries;
        explodedArchive6.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter46.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter46.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter46.deserializeObjectExplodedArchive7();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive6.new FileEntry(asciiBytes31, file51);
        java.util.jar.Manifest manifest53 = explodedArchive6.getManifest();
        java.lang.String str54 = explodedArchive6.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap55);
        boolean boolean57 = explodedArchive56.filtered;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(manifest53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str54, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        long long30 = fileNotFoundURLConnection17.getIfModifiedSince();
        int int31 = fileNotFoundURLConnection17.getConnectTimeout();
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.setConnectTimeout((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: timeout can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        java.net.URL uRL22 = fileNotFoundURLConnection17.getURL();
        java.lang.String str23 = fileNotFoundURLConnection17.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream24 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRL22);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str23, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        long long31 = fileNotFoundURLConnection17.getExpiration();
        java.lang.String str33 = fileNotFoundURLConnection17.getHeaderFieldKey((int) '#');
        long long34 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setConnectTimeout((int) (short) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile5();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        java.util.jar.Manifest manifest9 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(manifest9);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        int int23 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long26 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean27 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getProtocol();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.util.Set<java.lang.String> strSet11 = explodedArchive10.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        java.lang.String str15 = uRL13.getUserInfo();
        java.lang.String str16 = uRL13.getHost();
        java.net.URL uRL18 = new java.net.URL(uRL13, "hi!");
        java.lang.String str19 = uRL18.getQuery();
        java.lang.String str20 = uRL18.getHost();
        java.net.URL uRL22 = new java.net.URL(uRL18, "hi!:100");
        boolean boolean23 = uRL1.sameFile(uRL18);
        java.lang.Class<?> wildcardClass24 = uRL18.getClass();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals(uRL13.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.net.URL uRL18 = new java.net.URL(uRL15, "");
        java.lang.String str19 = uRL18.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/://hi!:100", "file:/tmp/junit3853753617501372040/junit897402010941125298", (int) (short) 0, "/hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.util.Set<java.lang.String> strSet11 = explodedArchive10.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = null;
        explodedArchive10.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive18.new FileEntry(asciiBytes20, file25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file28 = serializedObjectSupporter27.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter27.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter27.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter27.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest32 = serializedObjectSupporter27.deserializeObjectManifest1();
        java.io.File file33 = serializedObjectSupporter27.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive10.new FileEntry(asciiBytes20, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry34.serializedObjectSupporter = serializedObjectSupporter35;
        java.io.File file37 = fileEntry34.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes38 = fileEntry34.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = fileEntry34.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter40.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter40.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter40.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter40.deserializeObjectExplodedArchive16();
        java.io.File file46 = serializedObjectSupporter40.deserializeObjectFile6();
        java.io.File file47 = serializedObjectSupporter40.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive3.new FileEntry(asciiBytes39, file47);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes49 = fileEntry48.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file51 = serializedObjectSupporter50.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter50.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter50.deserializeObjectExplodedArchive15();
        fileEntry48.serializedObjectSupporter = serializedObjectSupporter50;
        boolean boolean55 = fileEntry48.isDirectory();
        java.io.File file56 = fileEntry48.getFile();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(asciiBytes20);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(manifest32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes38);
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getQuery();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.util.Set<java.lang.String> strSet49 = explodedArchive48.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.util.Set<java.lang.String> strSet56 = explodedArchive55.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive55.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = null;
        explodedArchive55.entries = asciiBytesMap58;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter60.deserializeObjectExplodedArchive11();
        java.io.File file62 = serializedObjectSupporter60.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file62);
        java.util.Set<java.lang.String> strSet64 = explodedArchive63.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes65 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter66.deserializeObjectExplodedArchive11();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file68);
        java.io.File file70 = explodedArchive69.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = explodedArchive63.new FileEntry(asciiBytes65, file70);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter72 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file73 = serializedObjectSupporter72.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter72.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter72.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter72.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest77 = serializedObjectSupporter72.deserializeObjectManifest1();
        java.io.File file78 = serializedObjectSupporter72.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive55.new FileEntry(asciiBytes65, file78);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry79.serializedObjectSupporter = serializedObjectSupporter80;
        java.io.File file82 = fileEntry79.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = fileEntry79.serializedObjectSupporter;
        filteredURLStreamHandler50.serializedObjectSupporter = serializedObjectSupporter83;
        java.net.URL uRL85 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        boolean boolean86 = uRL10.sameFile(uRL85);
        java.lang.String str87 = uRL85.toExternalForm();
        int int88 = uRL85.getPort();
        java.net.URLConnection uRLConnection89 = uRL85.openConnection();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals(uRL51.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(asciiBytes65);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(manifest77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter83);
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str87, "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(uRLConnection89);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setDoInput(true);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile14();
        java.io.File file34 = serializedObjectSupporter31.deserializeObjectFile11();
        java.io.File file35 = serializedObjectSupporter31.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter31;
        java.net.URL uRL39 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str40 = uRL39.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL39, "://hi!:100");
        fileNotFoundURLConnection42.setUseCaches(true);
        java.lang.String str45 = fileNotFoundURLConnection42.name;
        java.net.URL uRL46 = fileNotFoundURLConnection42.getURL();
        java.net.URL uRL48 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str49 = uRL48.getProtocol();
        java.lang.Class[] classArray50 = new java.lang.Class[] {};
        java.lang.Object obj51 = uRL48.getContent(classArray50);
        java.lang.Object obj52 = uRL46.getContent(classArray50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = fileNotFoundURLConnection17.getContent(classArray50);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str40, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "://hi!:100" + "'", str45, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL46);
        org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "file" + "'", str49, "file");
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        long long28 = fileNotFoundURLConnection17.getExpiration();
        java.security.Permission permission29 = fileNotFoundURLConnection17.getPermission();
        long long30 = fileNotFoundURLConnection17.getIfModifiedSince();
        long long31 = fileNotFoundURLConnection17.getIfModifiedSince();
        fileNotFoundURLConnection17.setUseCaches(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(permission29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getAuthority();
        java.lang.String str52 = uRL22.getProtocol();
        int int53 = uRL22.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = uRL22.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:100" + "'", str51, "hi!:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file10 = serializedObjectSupporter9.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive8();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter9;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter14.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter14.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter14.deserializeObjectExplodedArchive7();
        java.io.File file19 = serializedObjectSupporter14.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter14.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter14.deserializeObjectExplodedArchive6();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter14;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(asciiBytes8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file19.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNull(explodedArchive21);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        java.lang.String str31 = fileNotFoundURLConnection17.getContentType();
        java.net.URL uRL32 = fileNotFoundURLConnection17.getURL();
        int int33 = uRL32.getDefaultPort();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(uRL32);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        java.lang.String str31 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = fileEntry27.serializedObjectSupporter;
        java.io.File file34 = serializedObjectSupporter33.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter33.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter33.deserializeObjectExplodedArchive5();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file34.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.util.jar.Manifest manifest11 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(manifest11);
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "src/test/resources/root");
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile1();
        java.io.File file37 = serializedObjectSupporter34.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter34.deserializeObjectExplodedArchive12();
        java.io.File file39 = serializedObjectSupporter34.deserializeObjectFile15();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter34;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file36.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file39.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        boolean boolean9 = fileNotFoundURLConnection4.getAllowUserInteraction();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getRequestProperties();
        long long21 = fileNotFoundURLConnection17.getLastModified();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive25.entries;
        java.io.File file28 = explodedArchive25.getroot();
        java.util.jar.Manifest manifest29 = explodedArchive25.getManifest();
        java.net.URL uRL30 = explodedArchive25.getUrl();
        java.net.URL uRL32 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str33 = uRL32.getProtocol();
        java.lang.Class[] classArray34 = new java.lang.Class[] {};
        java.lang.Object obj35 = uRL32.getContent(classArray34);
        java.lang.Object obj36 = uRL30.getContent(classArray34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = fileNotFoundURLConnection17.getContent(classArray34);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(uRL30);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "file" + "'", str33, "file");
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!:100", "hi!:100", 35, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        long long10 = fileNotFoundURLConnection4.getHeaderFieldLong("hi!", (long) '#');
        int int11 = fileNotFoundURLConnection4.getReadTimeout();
        fileNotFoundURLConnection4.setAllowUserInteraction(false);
        java.lang.String str14 = fileNotFoundURLConnection4.getname();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 35L + "'", long10 == 35L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "://hi!:100" + "'", str14, "://hi!:100");
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.name;
        java.lang.String str24 = fileNotFoundURLConnection17.getContentType();
        boolean boolean25 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str26 = fileNotFoundURLConnection17.getContentEncoding();
        fileNotFoundURLConnection17.setIfModifiedSince(52L);
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        java.security.Permission permission30 = fileNotFoundURLConnection17.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(permission30);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        int int22 = fileNotFoundURLConnection17.getReadTimeout();
        fileNotFoundURLConnection17.setDoInput(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setIfModifiedSince(0L);
        java.lang.String str28 = fileNotFoundURLConnection17.getHeaderField(100);
        boolean boolean29 = fileNotFoundURLConnection17.getUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = explodedArchive11.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest27 = serializedObjectSupporter26.deserializeObjectManifest1();
        explodedArchive24.manifest = manifest27;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive32.entries;
        explodedArchive24.entries = asciiBytesMap34;
        explodedArchive11.entries = asciiBytesMap34;
        explodedArchive3.entries = asciiBytesMap34;
        explodedArchive3.filtered = false;
        java.io.File file40 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter42.deserializeObjectExplodedArchive11();
        java.io.File file44 = serializedObjectSupporter42.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file44);
        java.util.Set<java.lang.String> strSet46 = explodedArchive45.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive45.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = null;
        explodedArchive45.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes55 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive11();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
        java.io.File file60 = explodedArchive59.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive53.new FileEntry(asciiBytes55, file60);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file63 = serializedObjectSupporter62.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter62.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter62.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter62.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest67 = serializedObjectSupporter62.deserializeObjectManifest1();
        java.io.File file68 = serializedObjectSupporter62.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry69 = explodedArchive45.new FileEntry(asciiBytes55, file68);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter70 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry69.serializedObjectSupporter = serializedObjectSupporter70;
        java.io.File file72 = fileEntry69.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes73 = fileEntry69.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter74 = fileEntry69.serializedObjectSupporter;
        filteredURLStreamHandler41.serializedObjectSupporter = serializedObjectSupporter74;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes20);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest27);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(asciiBytes55);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertNotNull(manifest67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes73);
        org.junit.Assert.assertNotNull(serializedObjectSupporter74);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = filteredURLStreamHandler17.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter53.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter53.deserializeObjectExplodedArchive14();
        java.io.File file57 = serializedObjectSupporter53.deserializeObjectFile9();
        java.io.File file58 = serializedObjectSupporter53.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter53.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter53;
        java.net.URL uRL61 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL62 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = filteredURLStreamHandler17.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter68.deserializeObjectExplodedArchive11();
        java.io.File file70 = serializedObjectSupporter68.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file70);
        java.util.Set<java.lang.String> strSet72 = explodedArchive71.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str75 = uRL74.getPath();
        java.lang.String str76 = uRL74.getUserInfo();
        java.net.URL uRL78 = new java.net.URL(uRL74, "file");
        java.lang.String str79 = uRL74.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection80 = filteredURLStreamHandler17.openConnection(uRL74);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertEquals(uRL61.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL62.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertNotNull(serializedObjectSupporter63);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertEquals(uRL74.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals(uRL78.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        boolean boolean15 = explodedArchive3.filtered;
        java.net.URL uRL16 = explodedArchive3.getUrl();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(uRL16);
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        java.lang.String str31 = fileNotFoundURLConnection17.getRequestProperty("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        java.util.HashSet hashSet8 = serializedObjectSupporter0.deserializeObjectSet1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(hashSet8);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        long long29 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getPath();
        java.lang.String str44 = uRL42.getUserInfo();
        java.lang.String str45 = uRL42.getHost();
        java.net.URL uRL47 = new java.net.URL(uRL42, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL42, "hi!");
        fileNotFoundURLConnection49.setDefaultUseCaches(false);
        java.lang.String str52 = fileNotFoundURLConnection49.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        java.io.File file55 = serializedObjectSupporter53.deserializeObjectFile15();
        java.io.File file56 = serializedObjectSupporter53.deserializeObjectFile13();
        fileNotFoundURLConnection49.serializedObjectSupporter = serializedObjectSupporter53;
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter53.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter53.deserializeObjectExplodedArchive3();
        java.util.jar.Manifest manifest61 = serializedObjectSupporter53.deserializeObjectManifest1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals(uRL42.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file55.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(manifest61);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.io.File file8 = explodedArchive3.root;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes9);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getRef();
        java.net.URL uRL38 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        fileNotFoundURLConnection17.setConnectTimeout((int) '#');
        int int34 = fileNotFoundURLConnection17.getHeaderFieldInt("/hi!", (int) '#');
        java.lang.String str35 = fileNotFoundURLConnection17.name;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 35 + "'", int34 == 35);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = filteredURLStreamHandler9.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter44.deserializeObjectExplodedArchive7();
        java.io.File file46 = serializedObjectSupporter44.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter44.deserializeObjectExplodedArchive10();
        java.io.File file48 = serializedObjectSupporter44.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter44.deserializeObjectExplodedArchive9();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file46.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive49);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        boolean boolean4 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.util.Set<java.lang.String> strSet9 = explodedArchive8.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = null;
        explodedArchive8.entries = asciiBytesMap11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.util.Set<java.lang.String> strSet17 = explodedArchive16.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.io.File file23 = explodedArchive22.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = explodedArchive16.new FileEntry(asciiBytes18, file23);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file26 = serializedObjectSupporter25.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter25.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter25.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter25.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest30 = serializedObjectSupporter25.deserializeObjectManifest1();
        java.io.File file31 = serializedObjectSupporter25.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive8.new FileEntry(asciiBytes18, file31);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry32.serializedObjectSupporter = serializedObjectSupporter33;
        java.io.File file35 = fileEntry32.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile6();
        fileEntry32.serializedObjectSupporter = serializedObjectSupporter36;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes40 = fileEntry32.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes41 = fileEntry32.name;
        java.io.File file42 = fileEntry32.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes43 = fileEntry32.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file45 = serializedObjectSupporter44.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter44.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter44.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter44.deserializeObjectExplodedArchive12();
        java.io.File file49 = serializedObjectSupporter44.deserializeObjectFile6();
        java.io.File file50 = serializedObjectSupporter44.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry51 = explodedArchive3.new FileEntry(asciiBytes43, file50);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes52 = fileEntry51.getName();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(asciiBytes18);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(manifest30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes40);
        org.junit.Assert.assertNotNull(asciiBytes41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes52);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setIfModifiedSince((long) (short) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = explodedArchive3.serializedObjectSupporter;
        java.lang.String str63 = explodedArchive3.toString();
        boolean boolean64 = explodedArchive3.filtered;
        java.io.File file65 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str63, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive11();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
        java.util.Set<java.lang.String> strSet60 = explodedArchive59.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = null;
        explodedArchive66.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter71.deserializeObjectExplodedArchive11();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file73);
        java.util.Set<java.lang.String> strSet75 = explodedArchive74.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes76 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.io.File file81 = explodedArchive80.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry82 = explodedArchive74.new FileEntry(asciiBytes76, file81);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file84 = serializedObjectSupporter83.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter83.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = serializedObjectSupporter83.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = serializedObjectSupporter83.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest88 = serializedObjectSupporter83.deserializeObjectManifest1();
        java.io.File file89 = serializedObjectSupporter83.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry90 = explodedArchive66.new FileEntry(asciiBytes76, file89);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter91 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry90.serializedObjectSupporter = serializedObjectSupporter91;
        java.io.File file93 = fileEntry90.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter94 = fileEntry90.serializedObjectSupporter;
        filteredURLStreamHandler61.serializedObjectSupporter = serializedObjectSupporter94;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter96 = filteredURLStreamHandler61.serializedObjectSupporter;
        java.net.URL uRL97 = new java.net.URL(uRL22, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        int int98 = uRL97.getPort();
        java.lang.String str99 = uRL97.getAuthority();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals(uRL62.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(asciiBytes76);
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file81.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNull(explodedArchive87);
        org.junit.Assert.assertNotNull(manifest88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter94);
        org.junit.Assert.assertNotNull(serializedObjectSupporter96);
        org.junit.Assert.assertEquals(uRL97.toString(), "://hi!:100/://hi!:100");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 100 + "'", int98 == 100);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "hi!:100" + "'", str99, "hi!:100");
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile11();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL35.getRef();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile14();
        java.io.File file40 = serializedObjectSupporter37.deserializeObjectFile8();
        boolean boolean41 = uRL35.equals((java.lang.Object) file40);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile2();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile9();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL(uRL10, "[hi!:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL10.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals(uRL21.toString(), "://hi!:100/[hi!:100]:0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "://hi!:100" + "'", str22, "://hi!:100");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.Object obj7 = uRL6.getContent();
        java.lang.String str8 = uRL6.getRef();
        java.net.Proxy proxy9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection10 = uRL6.openConnection(proxy9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive3.getEntries();
        java.net.URL uRL62 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive3.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(uRL62);
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest8 = explodedArchive3.manifest;
        java.io.File file9 = explodedArchive3.getroot();
        java.util.jar.Manifest manifest10 = explodedArchive3.manifest;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest10);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getRequestProperties();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        java.net.URL uRL49 = new java.net.URL("", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 0, "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str50 = uRL49.getAuthority();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals(uRL49.toString(), "://[file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0" + "'", str50, "[file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0");
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet31 = explodedArchive3.getSKIPPED_NAMES();
        java.net.URL uRL32 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL32, "/://hi!:100");
        java.lang.String str35 = fileNotFoundURLConnection34.getname();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(uRL32);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/://hi!:100" + "'", str35, "/://hi!:100");
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter21.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter21.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter21.deserializeObjectExplodedArchive13();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNull(explodedArchive28);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter1 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter1.deserializeObjectExplodedArchive11();
        java.io.File file3 = serializedObjectSupporter1.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive(file3);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.io.File file9 = explodedArchive8.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest11 = serializedObjectSupporter10.deserializeObjectManifest1();
        explodedArchive8.manifest = manifest11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.util.Set<java.lang.String> strSet17 = explodedArchive16.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive16.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = null;
        explodedArchive16.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.util.Set<java.lang.String> strSet25 = explodedArchive24.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.io.File file31 = explodedArchive30.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive24.new FileEntry(asciiBytes26, file31);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file34 = serializedObjectSupporter33.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter33.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter33.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter33.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter33.deserializeObjectManifest1();
        java.io.File file39 = serializedObjectSupporter33.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive16.new FileEntry(asciiBytes26, file39);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file42 = serializedObjectSupporter41.deserializeObjectFile8();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile15();
        java.io.File file44 = serializedObjectSupporter41.deserializeObjectFile13();
        java.io.File file45 = serializedObjectSupporter41.deserializeObjectFile9();
        java.io.File file46 = serializedObjectSupporter41.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive8.new FileEntry(asciiBytes26, file46);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file49 = serializedObjectSupporter48.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive4.new FileEntry(asciiBytes26, file49);
        java.net.URL uRL51 = explodedArchive4.getUrl();
        boolean boolean52 = explodedArchive4.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap53);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(asciiBytes26);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file43.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file46.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL51);
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        int int7 = fileNotFoundURLConnection4.getReadTimeout();
        java.lang.String str8 = fileNotFoundURLConnection4.getContentEncoding();
        long long9 = fileNotFoundURLConnection4.getDate();
        int int10 = fileNotFoundURLConnection4.getReadTimeout();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter3 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter3.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter3.deserializeObjectExplodedArchive2();
        java.io.File file6 = serializedObjectSupporter3.deserializeObjectFile3();
        java.io.File file7 = serializedObjectSupporter3.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.io.File file20 = explodedArchive19.getroot();
        java.lang.String str21 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest32 = serializedObjectSupporter31.deserializeObjectManifest1();
        explodedArchive29.manifest = manifest32;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.util.Set<java.lang.String> strSet38 = explodedArchive37.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive37.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = null;
        explodedArchive37.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter42.deserializeObjectExplodedArchive11();
        java.io.File file44 = serializedObjectSupporter42.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file44);
        java.util.Set<java.lang.String> strSet46 = explodedArchive45.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes47 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter48.deserializeObjectExplodedArchive11();
        java.io.File file50 = serializedObjectSupporter48.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file50);
        java.io.File file52 = explodedArchive51.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive45.new FileEntry(asciiBytes47, file52);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file55 = serializedObjectSupporter54.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter54.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter54.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter54.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest59 = serializedObjectSupporter54.deserializeObjectManifest1();
        java.io.File file60 = serializedObjectSupporter54.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive37.new FileEntry(asciiBytes47, file60);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file63 = serializedObjectSupporter62.deserializeObjectFile8();
        java.io.File file64 = serializedObjectSupporter62.deserializeObjectFile15();
        java.io.File file65 = serializedObjectSupporter62.deserializeObjectFile13();
        java.io.File file66 = serializedObjectSupporter62.deserializeObjectFile9();
        java.io.File file67 = serializedObjectSupporter62.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry68 = explodedArchive29.new FileEntry(asciiBytes47, file67);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = explodedArchive25.new FileEntry(asciiBytes47, file70);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter72 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter72.deserializeObjectExplodedArchive12();
        java.io.File file74 = serializedObjectSupporter72.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive19.new FileEntry(asciiBytes47, file74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive19.entries;
        explodedArchive11.entries = asciiBytesMap76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap76);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str21, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest32);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(asciiBytes47);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(manifest59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file64.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file67.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap76);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = fileNotFoundURLConnection4.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = fileNotFoundURLConnection4.serializedObjectSupporter;
        fileNotFoundURLConnection4.addRequestProperty("[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        java.io.File file45 = serializedObjectSupporter42.deserializeObjectFile9();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setIfModifiedSince((long) 0);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file12 = serializedObjectSupporter11.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter11.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter11.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter11.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter11.deserializeObjectManifest1();
        java.io.File file17 = serializedObjectSupporter11.deserializeObjectFile14();
        java.io.File file18 = serializedObjectSupporter11.deserializeObjectFile10();
        java.io.File file19 = serializedObjectSupporter11.deserializeObjectFile6();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter11;
        java.lang.String str22 = fileNotFoundURLConnection4.getHeaderField("://hi!:100");
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        java.net.URL uRL4 = new java.net.URL("file", "", 97, "/file");
        org.junit.Assert.assertEquals(uRL4.toString(), "file://:97/file");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("://hi!:100", "://hi!:100/hi!", (int) (short) 1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getPath();
        java.lang.String str14 = uRL11.getFile();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL11.toString(), "://hi!:100://[://hi!:100/hi!]:1hi!:100");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:100" + "'", str13, "hi!:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:100" + "'", str14, "hi!:100");
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest1 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile16();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNotNull(manifest1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.name;
        java.lang.String str24 = fileNotFoundURLConnection17.getContentType();
        boolean boolean25 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str26 = fileNotFoundURLConnection17.getContentEncoding();
        fileNotFoundURLConnection17.setConnectTimeout(100);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        fileNotFoundURLConnection4.setDoOutput(false);
        long long12 = fileNotFoundURLConnection4.getHeaderFieldDate("", (long) '4');
        boolean boolean13 = fileNotFoundURLConnection4.getAllowUserInteraction();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = fileNotFoundURLConnection4.serializedObjectSupporter;
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 52L + "'", long12 == 52L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        boolean boolean26 = fileNotFoundURLConnection17.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive23.new FileEntry(asciiBytes25, file30);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter32.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter32.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest37 = serializedObjectSupporter32.deserializeObjectManifest1();
        java.io.File file38 = serializedObjectSupporter32.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive15.new FileEntry(asciiBytes25, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile15();
        java.io.File file43 = serializedObjectSupporter40.deserializeObjectFile13();
        java.io.File file44 = serializedObjectSupporter40.deserializeObjectFile9();
        java.io.File file45 = serializedObjectSupporter40.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive7.new FileEntry(asciiBytes25, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes25, file48);
        java.net.URL uRL50 = explodedArchive3.getUrl();
        boolean boolean51 = explodedArchive3.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive3.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(asciiBytes25);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(manifest37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file42.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL50);
        org.junit.Assert.assertEquals(uRL50.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean25 = fileNotFoundURLConnection17.getDoInput();
        int int28 = fileNotFoundURLConnection17.getHeaderFieldInt("hi!", 32);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter57.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter57.deserializeObjectExplodedArchive14();
        java.io.File file61 = serializedObjectSupporter57.deserializeObjectFile9();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter57.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter57;
        java.net.URL uRL65 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL66 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL67 = new java.net.URL(uRL1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter68.deserializeObjectExplodedArchive3();
        java.io.File file70 = serializedObjectSupporter68.deserializeObjectFile3();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file70, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit3853753617501372040/junit897402010941125298");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertEquals(uRL65.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL66.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertNotNull(serializedObjectSupporter68);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "");
        int int52 = fileNotFoundURLConnection51.getReadTimeout();
        long long53 = fileNotFoundURLConnection51.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.io.File file9 = explodedArchive8.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest11 = serializedObjectSupporter10.deserializeObjectManifest1();
        explodedArchive8.manifest = manifest11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.util.Set<java.lang.String> strSet17 = explodedArchive16.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive16.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = null;
        explodedArchive16.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.util.Set<java.lang.String> strSet25 = explodedArchive24.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.io.File file31 = explodedArchive30.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive24.new FileEntry(asciiBytes26, file31);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file34 = serializedObjectSupporter33.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter33.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter33.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter33.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter33.deserializeObjectManifest1();
        java.io.File file39 = serializedObjectSupporter33.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive16.new FileEntry(asciiBytes26, file39);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file42 = serializedObjectSupporter41.deserializeObjectFile8();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile15();
        java.io.File file44 = serializedObjectSupporter41.deserializeObjectFile13();
        java.io.File file45 = serializedObjectSupporter41.deserializeObjectFile9();
        java.io.File file46 = serializedObjectSupporter41.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive8.new FileEntry(asciiBytes26, file46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap48);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(asciiBytes26);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file43.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file46.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap48);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getQuery();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.util.Set<java.lang.String> strSet49 = explodedArchive48.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.util.Set<java.lang.String> strSet56 = explodedArchive55.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive55.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = null;
        explodedArchive55.entries = asciiBytesMap58;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter60.deserializeObjectExplodedArchive11();
        java.io.File file62 = serializedObjectSupporter60.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file62);
        java.util.Set<java.lang.String> strSet64 = explodedArchive63.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes65 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter66.deserializeObjectExplodedArchive11();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file68);
        java.io.File file70 = explodedArchive69.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = explodedArchive63.new FileEntry(asciiBytes65, file70);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter72 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file73 = serializedObjectSupporter72.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter72.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter72.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter72.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest77 = serializedObjectSupporter72.deserializeObjectManifest1();
        java.io.File file78 = serializedObjectSupporter72.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive55.new FileEntry(asciiBytes65, file78);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry79.serializedObjectSupporter = serializedObjectSupporter80;
        java.io.File file82 = fileEntry79.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = fileEntry79.serializedObjectSupporter;
        filteredURLStreamHandler50.serializedObjectSupporter = serializedObjectSupporter83;
        java.net.URL uRL85 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        boolean boolean86 = uRL10.sameFile(uRL85);
        java.net.Proxy proxy87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection88 = uRL85.openConnection(proxy87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals(uRL51.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(asciiBytes65);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(manifest77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter83);
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderFieldKey(0);
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) '#');
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long33 = fileNotFoundURLConnection17.getLastModified();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream34 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        java.net.URL uRL52 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL53 = new java.net.URL("file", "/hi!:100", (-1), "/file", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL55 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str56 = uRL55.getProtocol();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
        java.util.Set<java.lang.String> strSet65 = explodedArchive64.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str68 = uRL67.getPath();
        java.lang.String str69 = uRL67.getUserInfo();
        java.lang.String str70 = uRL67.getHost();
        java.net.URL uRL72 = new java.net.URL(uRL67, "hi!");
        java.lang.String str73 = uRL72.getQuery();
        java.lang.String str74 = uRL72.getHost();
        java.net.URL uRL76 = new java.net.URL(uRL72, "hi!:100");
        boolean boolean77 = uRL55.sameFile(uRL72);
        java.lang.String str78 = uRL72.getRef();
        int int79 = uRL72.getDefaultPort();
        boolean boolean80 = uRL53.sameFile(uRL72);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter81 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = serializedObjectSupporter81.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter81.deserializeObjectExplodedArchive2();
        java.io.File file84 = serializedObjectSupporter81.deserializeObjectFile3();
        java.io.File file85 = serializedObjectSupporter81.deserializeObjectFile12();
        boolean boolean86 = uRL72.equals((java.lang.Object) file85);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL53.toString(), "file://[/hi!:100]/file");
        org.junit.Assert.assertEquals(uRL55.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "file" + "'", str56, "file");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertEquals(uRL67.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals(uRL72.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals(uRL76.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(explodedArchive82);
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file84.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive30.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = null;
        explodedArchive30.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.util.Set<java.lang.String> strSet39 = explodedArchive38.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes40 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.io.File file45 = explodedArchive44.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive38.new FileEntry(asciiBytes40, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter47.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter47.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter47.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest52 = serializedObjectSupporter47.deserializeObjectManifest1();
        java.io.File file53 = serializedObjectSupporter47.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive30.new FileEntry(asciiBytes40, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry54.serializedObjectSupporter = serializedObjectSupporter55;
        java.io.File file57 = fileEntry54.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = fileEntry54.serializedObjectSupporter;
        filteredURLStreamHandler25.serializedObjectSupporter = serializedObjectSupporter58;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = filteredURLStreamHandler25.serializedObjectSupporter;
        java.net.URL uRL61 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL62 = new java.net.URL(uRL10, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = filteredURLStreamHandler25.serializedObjectSupporter;
        java.util.HashSet hashSet64 = serializedObjectSupporter63.deserializeObjectSet1();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(asciiBytes40);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(manifest52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter58);
        org.junit.Assert.assertNotNull(serializedObjectSupporter60);
        org.junit.Assert.assertEquals(uRL61.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNotNull(serializedObjectSupporter63);
        org.junit.Assert.assertNotNull(hashSet64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.io.File file61 = explodedArchive3.root;
        java.io.File file62 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        fileNotFoundURLConnection17.setUseCaches(true);
        java.lang.String str28 = fileNotFoundURLConnection17.getRequestProperty("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        long long29 = fileNotFoundURLConnection17.getContentLengthLong();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap30 = fileNotFoundURLConnection17.getRequestProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream31 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        java.util.Set<java.lang.String> strSet41 = explodedArchive3.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest42 = explodedArchive3.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive3.getEntries();
        java.net.URL uRL44 = explodedArchive3.getUrl();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes45 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes58 = explodedArchive49.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter59.deserializeObjectExplodedArchive11();
        java.io.File file61 = serializedObjectSupporter59.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file61);
        java.io.File file63 = explodedArchive62.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter64 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest65 = serializedObjectSupporter64.deserializeObjectManifest1();
        explodedArchive62.manifest = manifest65;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter67 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter67.deserializeObjectExplodedArchive11();
        java.io.File file69 = serializedObjectSupporter67.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file69);
        java.io.File file71 = explodedArchive70.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive70.entries;
        explodedArchive62.entries = asciiBytesMap72;
        explodedArchive49.entries = asciiBytesMap72;
        java.util.jar.Manifest manifest75 = explodedArchive49.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive49.entries;
        java.util.jar.Manifest manifest77 = explodedArchive49.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter78 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = serializedObjectSupporter78.deserializeObjectExplodedArchive11();
        java.io.File file80 = serializedObjectSupporter78.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive(file80);
        java.io.File file82 = explodedArchive81.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest84 = serializedObjectSupporter83.deserializeObjectManifest1();
        explodedArchive81.manifest = manifest84;
        explodedArchive49.manifest = manifest84;
        explodedArchive3.manifest = manifest84;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(manifest42);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNotNull(uRL44);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(asciiBytes45);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes58);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest65);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap72);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertNull(manifest77);
        org.junit.Assert.assertNull(explodedArchive79);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file80.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file82.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest84);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive7();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter8.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter8.deserializeObjectExplodedArchive6();
        java.io.File file16 = serializedObjectSupporter8.deserializeObjectFile11();
        java.io.File file17 = serializedObjectSupporter8.deserializeObjectFile12();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter8;
        java.io.File file19 = serializedObjectSupporter8.deserializeObjectFile2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter8.deserializeObjectExplodedArchive13();
        java.io.File file21 = serializedObjectSupporter8.deserializeObjectFile15();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file21.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        long long25 = fileNotFoundURLConnection17.getContentLengthLong();
        long long26 = fileNotFoundURLConnection17.getIfModifiedSince();
        long long27 = fileNotFoundURLConnection17.getLastModified();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter28.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter28.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter28.deserializeObjectExplodedArchive10();
        java.io.File file36 = serializedObjectSupporter28.deserializeObjectFile9();
        java.io.File file37 = serializedObjectSupporter28.deserializeObjectFile15();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter28;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file37.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        explodedArchive3.filtered = true;
        boolean boolean17 = explodedArchive3.filtered;
        java.util.jar.Manifest manifest18 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file20 = serializedObjectSupporter19.deserializeObjectFile8();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter19;
        java.io.File file24 = explodedArchive3.getroot();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter57.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter57.deserializeObjectExplodedArchive14();
        java.io.File file61 = serializedObjectSupporter57.deserializeObjectFile9();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter57.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter57;
        java.net.URL uRL65 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL66 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL67 = new java.net.URL(uRL1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertEquals(uRL65.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL66.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertNotNull(serializedObjectSupporter68);
        org.junit.Assert.assertNotNull(serializedObjectSupporter69);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        int int5 = fileNotFoundURLConnection4.getContentLength();
        java.lang.String str7 = fileNotFoundURLConnection4.getHeaderFieldKey((int) (byte) 100);
        fileNotFoundURLConnection4.setDoOutput(false);
        long long10 = fileNotFoundURLConnection4.getDate();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        java.util.HashSet hashSet9 = serializedObjectSupporter0.deserializeObjectSet1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(hashSet9);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL25 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str26 = uRL25.getAuthority();
        boolean boolean27 = uRL23.sameFile(uRL25);
        java.lang.String str28 = uRL25.getAuthority();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setConnectTimeout((int) (byte) 10);
        fileNotFoundURLConnection17.setIfModifiedSince(1L);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.util.HashSet hashSet6 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile13();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(hashSet6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        java.lang.String str29 = fileNotFoundURLConnection17.getContentEncoding();
        long long30 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean31 = fileNotFoundURLConnection17.getUseCaches();
        int int34 = fileNotFoundURLConnection17.getHeaderFieldInt("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", (int) (byte) -1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        java.lang.String str18 = uRL10.getUserInfo();
        java.lang.String str19 = uRL10.getRef();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive18.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = null;
        explodedArchive25.entries = asciiBytesMap28;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.io.File file40 = explodedArchive39.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive33.new FileEntry(asciiBytes35, file40);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest47 = serializedObjectSupporter42.deserializeObjectManifest1();
        java.io.File file48 = serializedObjectSupporter42.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive25.new FileEntry(asciiBytes35, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        java.io.File file52 = fileEntry49.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes53 = fileEntry49.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes54 = fileEntry49.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter55.deserializeObjectExplodedArchive16();
        java.io.File file61 = serializedObjectSupporter55.deserializeObjectFile6();
        java.io.File file62 = serializedObjectSupporter55.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive18.new FileEntry(asciiBytes54, file62);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = fileEntry63.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        java.io.File file69 = serializedObjectSupporter65.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry70 = explodedArchive3.new FileEntry(asciiBytes64, file69);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file72 = serializedObjectSupporter71.deserializeObjectFile8();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile15();
        java.io.File file74 = serializedObjectSupporter71.deserializeObjectFile13();
        java.io.File file75 = serializedObjectSupporter71.deserializeObjectFile9();
        java.io.File file76 = serializedObjectSupporter71.deserializeObjectFile15();
        java.util.jar.Manifest manifest77 = serializedObjectSupporter71.deserializeObjectManifest1();
        fileEntry70.serializedObjectSupporter = serializedObjectSupporter71;
        boolean boolean79 = fileEntry70.isDirectory();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file81 = serializedObjectSupporter80.deserializeObjectFile8();
        java.io.File file82 = serializedObjectSupporter80.deserializeObjectFile15();
        java.io.File file83 = serializedObjectSupporter80.deserializeObjectFile14();
        fileEntry70.serializedObjectSupporter = serializedObjectSupporter80;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(manifest47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes53);
        org.junit.Assert.assertNotNull(asciiBytes54);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file73.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file76.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file82.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        fileNotFoundURLConnection17.setUseCaches(true);
        fileNotFoundURLConnection17.setDoOutput(true);
        int int29 = fileNotFoundURLConnection17.getContentLength();
        int int30 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str31 = fileNotFoundURLConnection17.getname();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.io.File file9 = explodedArchive8.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = explodedArchive11.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile5();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile4();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile8();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.util.Set<java.lang.String> strSet11 = explodedArchive10.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = null;
        explodedArchive10.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive18.new FileEntry(asciiBytes20, file25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file28 = serializedObjectSupporter27.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter27.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter27.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter27.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest32 = serializedObjectSupporter27.deserializeObjectManifest1();
        java.io.File file33 = serializedObjectSupporter27.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive10.new FileEntry(asciiBytes20, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry34.serializedObjectSupporter = serializedObjectSupporter35;
        java.io.File file37 = fileEntry34.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes38 = fileEntry34.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = fileEntry34.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter40.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter40.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter40.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter40.deserializeObjectExplodedArchive16();
        java.io.File file46 = serializedObjectSupporter40.deserializeObjectFile6();
        java.io.File file47 = serializedObjectSupporter40.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive3.new FileEntry(asciiBytes39, file47);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes49 = fileEntry48.getName();
        java.io.File file50 = fileEntry48.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.io.File file55 = explodedArchive54.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive54.entries;
        java.io.File file57 = explodedArchive54.getroot();
        boolean boolean58 = explodedArchive54.filtered;
        java.net.URL uRL59 = explodedArchive54.getUrl();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive54.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(asciiBytes20);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(manifest32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes38);
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(uRL59);
        org.junit.Assert.assertEquals(uRL59.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderFieldKey(0);
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) '#');
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        java.lang.String str33 = fileNotFoundURLConnection17.getname();
        boolean boolean34 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = fileEntry27.serializedObjectSupporter;
        java.io.File file34 = serializedObjectSupporter33.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter33.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter33.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file34.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.lang.String str24 = uRL23.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL23, "");
        boolean boolean27 = fileNotFoundURLConnection26.getDoInput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        java.io.File file28 = fileEntry27.getFile();
        boolean boolean29 = fileEntry27.isDirectory();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = fileEntry27.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getAuthority();
        java.lang.String str52 = uRL22.getProtocol();
        java.lang.String str53 = uRL22.getPath();
        int int54 = uRL22.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "/://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter57.deserializeObjectExplodedArchive11();
        java.io.File file59 = serializedObjectSupporter57.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file59);
        java.io.File file61 = explodedArchive60.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive60.entries;
        java.io.File file63 = explodedArchive60.getroot();
        java.util.jar.Manifest manifest64 = explodedArchive60.getManifest();
        java.net.URL uRL65 = explodedArchive60.getUrl();
        java.net.URL uRL67 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str68 = uRL67.getProtocol();
        java.lang.Class[] classArray69 = new java.lang.Class[] {};
        java.lang.Object obj70 = uRL67.getContent(classArray69);
        java.lang.Object obj71 = uRL65.getContent(classArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = uRL22.getContent(classArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:100" + "'", str51, "hi!:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertNotNull(uRL65);
        org.junit.Assert.assertEquals(uRL65.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "file" + "'", str68, "file");
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream22 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getAuthority();
        int int3 = uRL1.getDefaultPort();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderFieldKey(0);
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) '#');
        boolean boolean31 = fileNotFoundURLConnection17.getDoInput();
        int int32 = fileNotFoundURLConnection17.getReadTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        java.io.File file53 = serializedObjectSupporter49.deserializeObjectFile9();
        java.io.File file54 = serializedObjectSupporter49.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter49.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter49;
        java.net.URL uRL57 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        java.io.File file62 = serializedObjectSupporter58.deserializeObjectFile9();
        java.io.File file63 = serializedObjectSupporter58.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter58.deserializeObjectExplodedArchive5();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter58;
        java.io.File file66 = serializedObjectSupporter58.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertEquals(uRL57.toString(), "file://hi!:100file");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive67);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        java.lang.String str32 = uRL30.toExternalForm();
        boolean boolean33 = uRL15.sameFile(uRL30);
        java.net.URL uRL35 = new java.net.URL(uRL30, "hi!:100");
        java.lang.String str36 = uRL35.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = uRL35.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals(uRL35.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!:100" + "'", str36, "/hi!:100");
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        fileNotFoundURLConnection17.setUseCaches(false);
        boolean boolean26 = fileNotFoundURLConnection17.getDoOutput();
        boolean boolean27 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap28 = fileNotFoundURLConnection17.getHeaderFields();
        fileNotFoundURLConnection17.setIfModifiedSince((long) (-1));
        java.net.URL uRL32 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str33 = uRL32.getRef();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.io.File file38 = explodedArchive37.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive37.entries;
        java.io.File file40 = explodedArchive37.getroot();
        java.util.jar.Manifest manifest41 = explodedArchive37.getManifest();
        java.net.URL uRL42 = explodedArchive37.getUrl();
        java.net.URL uRL44 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str45 = uRL44.getProtocol();
        java.lang.Class[] classArray46 = new java.lang.Class[] {};
        java.lang.Object obj47 = uRL44.getContent(classArray46);
        java.lang.Object obj48 = uRL42.getContent(classArray46);
        java.lang.Object obj49 = uRL32.getContent(classArray46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = fileNotFoundURLConnection17.getContent(classArray46);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertNotNull(uRL42);
        org.junit.Assert.assertEquals(uRL42.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "file" + "'", str45, "file");
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        java.net.URL uRL8 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.util.Set<java.lang.String> strSet17 = explodedArchive16.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getPath();
        java.lang.String str21 = uRL19.getUserInfo();
        java.lang.String str22 = uRL19.getHost();
        java.net.URL uRL24 = new java.net.URL(uRL19, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL19, "hi!");
        fileNotFoundURLConnection26.setDefaultUseCaches(false);
        java.lang.String str30 = fileNotFoundURLConnection26.getHeaderField("hi!");
        boolean boolean31 = fileNotFoundURLConnection26.getAllowUserInteraction();
        java.net.URL uRL32 = fileNotFoundURLConnection26.getURL();
        java.net.URL uRL34 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str35 = uRL34.getAuthority();
        boolean boolean36 = uRL32.sameFile(uRL34);
        java.net.URL uRL38 = new java.net.URL(uRL32, "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        boolean boolean39 = uRL8.sameFile(uRL32);
        java.lang.String str40 = uRL32.toExternalForm();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(uRL32);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL34.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals(uRL38.toString(), "://hi!:100/hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "://hi!:100" + "'", str40, "://hi!:100");
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str26 = fileNotFoundURLConnection17.getContentType();
        long long27 = fileNotFoundURLConnection17.getLastModified();
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getLastModified();
        int int31 = fileNotFoundURLConnection17.getContentLength();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.name;
        java.lang.String str24 = fileNotFoundURLConnection17.getContentType();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap25 = fileNotFoundURLConnection17.getRequestProperties();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        int int26 = fileNotFoundURLConnection17.getReadTimeout();
        long long27 = fileNotFoundURLConnection17.getIfModifiedSince();
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.util.jar.Manifest manifest2 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(manifest2);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        long long31 = fileNotFoundURLConnection17.getExpiration();
        java.lang.String str33 = fileNotFoundURLConnection17.getHeaderFieldKey((int) '#');
        boolean boolean34 = fileNotFoundURLConnection17.getUseCaches();
        java.net.URL uRL35 = fileNotFoundURLConnection17.getURL();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(uRL35);
        org.junit.Assert.assertEquals(uRL35.toString(), "://hi!:100");
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileNotFoundURLConnection17.serializedObjectSupporter;
        long long34 = fileNotFoundURLConnection17.getHeaderFieldLong("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) 32);
        boolean boolean35 = fileNotFoundURLConnection17.getDoInput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 32L + "'", long34 == 32L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        java.lang.String str18 = uRL15.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.util.Set<java.lang.String> strSet38 = explodedArchive37.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive37.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = null;
        explodedArchive37.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter42.deserializeObjectExplodedArchive11();
        java.io.File file44 = serializedObjectSupporter42.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file44);
        java.util.Set<java.lang.String> strSet46 = explodedArchive45.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes47 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter48.deserializeObjectExplodedArchive11();
        java.io.File file50 = serializedObjectSupporter48.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file50);
        java.io.File file52 = explodedArchive51.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive45.new FileEntry(asciiBytes47, file52);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file55 = serializedObjectSupporter54.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter54.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter54.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter54.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest59 = serializedObjectSupporter54.deserializeObjectManifest1();
        java.io.File file60 = serializedObjectSupporter54.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive37.new FileEntry(asciiBytes47, file60);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry61.serializedObjectSupporter = serializedObjectSupporter62;
        java.io.File file64 = fileEntry61.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = fileEntry61.serializedObjectSupporter;
        filteredURLStreamHandler32.serializedObjectSupporter = serializedObjectSupporter65;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter67 = filteredURLStreamHandler32.serializedObjectSupporter;
        java.net.URL uRL68 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str69 = uRL68.getUserInfo();
        java.lang.String str70 = uRL68.getUserInfo();
        java.lang.String str71 = uRL68.getPath();
        boolean boolean72 = uRL15.sameFile(uRL68);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL68, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        int int77 = fileNotFoundURLConnection74.getHeaderFieldInt("://hi!:100/hi!", 10);
        java.lang.String str78 = fileNotFoundURLConnection74.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals(uRL33.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(asciiBytes47);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(manifest59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(serializedObjectSupporter67);
        org.junit.Assert.assertEquals(uRL68.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "://hi!:100" + "'", str71, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100" + "'", str78, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet7 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive9 = explodedArchive3.getFilteredArchive(entryRenameFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        java.util.jar.Manifest manifest84 = explodedArchive83.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap85 = explodedArchive83.entries;
        java.net.URL uRL86 = explodedArchive83.getUrl();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file88 = serializedObjectSupporter87.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = serializedObjectSupporter87.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = serializedObjectSupporter87.deserializeObjectExplodedArchive14();
        java.io.File file91 = serializedObjectSupporter87.deserializeObjectFile9();
        java.io.File file92 = serializedObjectSupporter87.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive93 = serializedObjectSupporter87.deserializeObjectExplodedArchive5();
        java.io.File file94 = serializedObjectSupporter87.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive95 = serializedObjectSupporter87.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive96 = serializedObjectSupporter87.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive97 = serializedObjectSupporter87.deserializeObjectExplodedArchive5();
        java.io.File file98 = serializedObjectSupporter87.deserializeObjectFile7();
        explodedArchive83.serializedObjectSupporter = serializedObjectSupporter87;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest84);
        org.junit.Assert.assertNotNull(asciiBytesMap85);
        org.junit.Assert.assertNotNull(uRL86);
// flaky:         org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semanticConflicts/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_2/src/test/resources/root");
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive89);
        org.junit.Assert.assertNull(explodedArchive90);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file91.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive93);
        org.junit.Assert.assertNotNull(file94);
        org.junit.Assert.assertEquals(file94.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file94.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive95);
        org.junit.Assert.assertNull(explodedArchive96);
        org.junit.Assert.assertNull(explodedArchive97);
        org.junit.Assert.assertNotNull(file98);
        org.junit.Assert.assertEquals(file98.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file98.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str7 = explodedArchive3.toString();
        java.net.URL uRL8 = explodedArchive3.getUrl();
        java.util.Set<java.lang.String> strSet9 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive11 = explodedArchive3.getFilteredArchive(entryRenameFilter10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int36 = uRL35.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream37 = uRL35.openStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter5.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter5.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter5.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter5.deserializeObjectExplodedArchive16();
        java.io.File file11 = serializedObjectSupporter5.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest18 = serializedObjectSupporter17.deserializeObjectManifest1();
        explodedArchive15.manifest = manifest18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = null;
        explodedArchive23.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.io.File file38 = explodedArchive37.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive31.new FileEntry(asciiBytes33, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter40.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter40.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter40.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest45 = serializedObjectSupporter40.deserializeObjectManifest1();
        java.io.File file46 = serializedObjectSupporter40.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive23.new FileEntry(asciiBytes33, file46);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file49 = serializedObjectSupporter48.deserializeObjectFile8();
        java.io.File file50 = serializedObjectSupporter48.deserializeObjectFile15();
        java.io.File file51 = serializedObjectSupporter48.deserializeObjectFile13();
        java.io.File file52 = serializedObjectSupporter48.deserializeObjectFile9();
        java.io.File file53 = serializedObjectSupporter48.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive15.new FileEntry(asciiBytes33, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        java.io.File file57 = serializedObjectSupporter55.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file57);
        java.io.File file59 = explodedArchive58.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive58.entries;
        explodedArchive15.entries = asciiBytesMap60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap60);
        explodedArchive3.entries = asciiBytesMap60;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file11.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(manifest45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file50.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file53.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        fileNotFoundURLConnection50.setDefaultUseCaches(true);
        fileNotFoundURLConnection50.setDoOutput(true);
        boolean boolean55 = fileNotFoundURLConnection50.getDoInput();
        fileNotFoundURLConnection50.setRequestProperty("", "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str59 = fileNotFoundURLConnection50.getContentEncoding();
        boolean boolean60 = fileNotFoundURLConnection50.getAllowUserInteraction();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        int int10 = fileNotFoundURLConnection4.getHeaderFieldInt("[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]", 10);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        java.io.File file28 = fileEntry27.getFile();
        boolean boolean29 = fileEntry27.isDirectory();
        java.io.File file30 = fileEntry27.file;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        boolean boolean24 = fileNotFoundURLConnection17.getDoInput();
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        int int27 = fileNotFoundURLConnection17.getContentLength();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setRequestProperty("/hi!", "://hi!:100/hi!");
        long long28 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile13();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "src/test/resources/root");
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile11();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive4);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        long long28 = fileNotFoundURLConnection17.getLastModified();
        long long29 = fileNotFoundURLConnection17.getDate();
        boolean boolean30 = fileNotFoundURLConnection17.getDefaultUseCaches();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        explodedArchive3.filtered = true;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter17.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter17.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter17.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter17.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter17.deserializeObjectExplodedArchive16();
        java.io.File file23 = serializedObjectSupporter17.deserializeObjectFile3();
        java.io.File file24 = serializedObjectSupporter17.deserializeObjectFile9();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter17.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest25;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file23.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest25);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("://://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: ://://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setIfModifiedSince(0L);
        long long29 = fileNotFoundURLConnection17.getHeaderFieldDate("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) ' ');
        java.lang.String str30 = fileNotFoundURLConnection17.toString();
        long long31 = fileNotFoundURLConnection17.getIfModifiedSince();
        long long32 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 32L + "'", long29 == 32L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str30, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        java.lang.String str32 = uRL31.getRef();
        java.lang.String str33 = uRL31.getFile();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        java.util.jar.Manifest manifest7 = explodedArchive3.getManifest();
        java.net.URL uRL8 = explodedArchive3.getUrl();
        java.util.jar.Manifest manifest9 = explodedArchive3.manifest;
        java.io.File file10 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.Archive.Entry entry11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive12 = explodedArchive3.getNestedArchive(entry11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        explodedArchive3.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = explodedArchive3.serializedObjectSupporter;
        java.util.Set<java.lang.String> strSet11 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file13 = serializedObjectSupporter12.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter12.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter12.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter12.deserializeObjectExplodedArchive4();
        java.io.File file18 = serializedObjectSupporter12.deserializeObjectFile16();
        java.io.File file19 = serializedObjectSupporter12.deserializeObjectFile3();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter12.deserializeObjectExplodedArchive13();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file19.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive21);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int25 = fileNotFoundURLConnection17.getHeaderFieldInt("://hi!:100", 0);
        int int28 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (int) (byte) 1);
        java.lang.String str29 = fileNotFoundURLConnection17.getContentEncoding();
        fileNotFoundURLConnection17.addRequestProperty("[://hi!:100/hi!]", "");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile6();
        java.util.jar.Manifest manifest9 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(manifest9);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile15();
        java.io.File file46 = serializedObjectSupporter43.deserializeObjectFile13();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile9();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive10.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive53.entries;
        explodedArchive10.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        boolean boolean58 = explodedArchive57.filtered;
        java.util.jar.Manifest manifest59 = explodedArchive57.getManifest();
        java.util.jar.Manifest manifest60 = explodedArchive57.getManifest();
        java.io.File file61 = explodedArchive57.getroot();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes62 = explodedArchive57.getMANIFEST_ENTRY_NAME();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file61.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(asciiBytes62);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.name;
        java.lang.String str24 = fileNotFoundURLConnection17.getContentType();
        boolean boolean25 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.Class<?> wildcardClass26 = fileNotFoundURLConnection17.getClass();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter21.deserializeObjectExplodedArchive13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter21.deserializeObjectExplodedArchive16();
        filteredURLStreamHandler19.serializedObjectSupporter = serializedObjectSupporter21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.util.Set<java.lang.String> strSet36 = explodedArchive35.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getPath();
        java.lang.String str40 = uRL38.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getPath();
        java.lang.String str54 = uRL52.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive11();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
        java.util.Set<java.lang.String> strSet60 = explodedArchive59.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL(uRL52, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL38, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        int int64 = uRL63.getPort();
        java.net.URLStreamHandler uRLStreamHandler66 = null;
        java.net.URL uRL67 = new java.net.URL(uRL63, "hi!:100", uRLStreamHandler66);
        java.net.URLConnection uRLConnection68 = filteredURLStreamHandler19.openConnection(uRL67);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals(uRL38.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:100" + "'", str40, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals(uRL52.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals(uRL62.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertNotNull(uRLConnection68);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setConnectTimeout((int) (byte) 10);
        int int27 = fileNotFoundURLConnection17.getReadTimeout();
        fileNotFoundURLConnection17.setConnectTimeout((int) (short) 10);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        fileNotFoundURLConnection4.setIfModifiedSince((-1L));
        long long9 = fileNotFoundURLConnection4.getContentLengthLong();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        int int26 = fileNotFoundURLConnection17.getContentLength();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getHeaderFields();
        java.security.Permission permission28 = fileNotFoundURLConnection17.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(permission28);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive3.getNestedArchives(entryFilter32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile16();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive12();
        java.io.File file45 = serializedObjectSupporter42.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive9();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive46);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        java.util.jar.Manifest manifest84 = explodedArchive83.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap85 = explodedArchive83.entries;
        java.net.URL uRL86 = explodedArchive83.getUrl();
        java.lang.String str87 = uRL86.getRef();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest84);
        org.junit.Assert.assertNotNull(asciiBytesMap85);
        org.junit.Assert.assertNotNull(uRL86);
// flaky:         org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semanticConflicts/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_2/src/test/resources/root");
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        java.lang.String str6 = explodedArchive3.toString();
        java.io.File file7 = explodedArchive3.getroot();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str6, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str7 = explodedArchive3.toString();
        java.io.File file8 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive3.getNestedArchives(entryFilter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", 100L);
        fileNotFoundURLConnection17.setConnectTimeout((int) ' ');
        int int32 = fileNotFoundURLConnection17.getContentLength();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = null;
        explodedArchive34.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.util.Set<java.lang.String> strSet43 = explodedArchive42.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes44 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.io.File file49 = explodedArchive48.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive42.new FileEntry(asciiBytes44, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file52 = serializedObjectSupporter51.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter51.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter51.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter51.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest56 = serializedObjectSupporter51.deserializeObjectManifest1();
        java.io.File file57 = serializedObjectSupporter51.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive34.new FileEntry(asciiBytes44, file57);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry58.serializedObjectSupporter = serializedObjectSupporter59;
        java.io.File file61 = fileEntry58.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = fileEntry58.serializedObjectSupporter;
        filteredURLStreamHandler29.serializedObjectSupporter = serializedObjectSupporter62;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter64 = filteredURLStreamHandler29.serializedObjectSupporter;
        java.net.URL uRL65 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL66 = new java.net.URL(uRL14, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter67 = filteredURLStreamHandler29.serializedObjectSupporter;
        java.net.URL uRL68 = new java.net.URL("[hi!:100]:0", "/hi!", (int) (byte) 10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = filteredURLStreamHandler29.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(asciiBytes44);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(manifest56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter62);
        org.junit.Assert.assertNotNull(serializedObjectSupporter64);
        org.junit.Assert.assertEquals(uRL65.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNotNull(serializedObjectSupporter67);
        org.junit.Assert.assertEquals(uRL68.toString(), "[hi!:100]:0:///hi!:10hi!");
        org.junit.Assert.assertNotNull(serializedObjectSupporter69);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("://hi!:100/hi!", "://hi!:100/hi!", 1, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL11, "/://hi!:100");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL11.toString(), "://hi!:100/hi!://[://hi!:100/hi!]:1://hi!:100");
        org.junit.Assert.assertEquals(uRL13.toString(), "://hi!:100/hi!://[://hi!:100/hi!]:1/://hi!:100");
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = fileEntry27.serializedObjectSupporter;
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive3();
        java.io.File file35 = serializedObjectSupporter32.deserializeObjectFile7();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file35.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        java.io.File file31 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = fileEntry27.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setIfModifiedSince((long) '4');
        java.lang.String str23 = fileNotFoundURLConnection17.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str23, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getUserInfo();
        java.lang.String str25 = uRL22.getHost();
        java.net.URL uRL27 = new java.net.URL(uRL22, "hi!");
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL27, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getPath();
        java.lang.String str44 = uRL42.toExternalForm();
        boolean boolean45 = uRL27.sameFile(uRL42);
        boolean boolean46 = uRL10.sameFile(uRL27);
        int int47 = uRL10.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream48 = uRL10.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals(uRL27.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals(uRL42.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "://hi!:100" + "'", str44, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile7();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        long long28 = fileNotFoundURLConnection17.getLastModified();
        long long29 = fileNotFoundURLConnection17.getDate();
        long long32 = fileNotFoundURLConnection17.getHeaderFieldDate("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) ' ');
        long long35 = fileNotFoundURLConnection17.getHeaderFieldLong("[://hi!:100/hi!]", (long) 10);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 32L + "'", long32 == 32L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10L + "'", long35 == 10L);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", "[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]", "file:/tmp/junit3853753617501372040/junit897402010941125298");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: org.springframework.boot.loader.archive.explodedarchive$filenotfoundurlconnection:://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        java.lang.String str2 = uRL1.getPath();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive3.getEntries();
        java.util.Set<java.lang.String> strSet5 = explodedArchive3.getSKIPPED_NAMES();
        boolean boolean6 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry35.serializedObjectSupporter = serializedObjectSupporter36;
        java.io.File file38 = fileEntry35.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = fileEntry35.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter44.deserializeObjectExplodedArchive11();
        java.io.File file46 = serializedObjectSupporter44.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file46);
        java.util.Set<java.lang.String> strSet48 = explodedArchive47.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getPath();
        java.lang.String str52 = uRL50.getUserInfo();
        java.lang.String str53 = uRL50.getHost();
        java.net.URL uRL55 = new java.net.URL(uRL50, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL50, "hi!");
        fileNotFoundURLConnection57.setDefaultUseCaches(false);
        java.lang.String str60 = fileNotFoundURLConnection57.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file62 = serializedObjectSupporter61.deserializeObjectFile8();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile15();
        java.io.File file64 = serializedObjectSupporter61.deserializeObjectFile13();
        fileNotFoundURLConnection57.serializedObjectSupporter = serializedObjectSupporter61;
        fileEntry35.serializedObjectSupporter = serializedObjectSupporter61;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter61.deserializeObjectExplodedArchive10();
        java.io.File file68 = serializedObjectSupporter61.deserializeObjectFile5();
        filteredURLStreamHandler7.serializedObjectSupporter = serializedObjectSupporter61;
        java.io.File file70 = serializedObjectSupporter61.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals(uRL50.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals(uRL55.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file63.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file68.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getRef();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter17.deserializeObjectExplodedArchive11();
        java.io.File file19 = serializedObjectSupporter17.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
        java.io.File file21 = explodedArchive20.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive20.entries;
        java.io.File file23 = explodedArchive20.getroot();
        java.util.jar.Manifest manifest24 = explodedArchive20.getManifest();
        java.net.URL uRL25 = explodedArchive20.getUrl();
        java.net.URL uRL27 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str28 = uRL27.getProtocol();
        java.lang.Class[] classArray29 = new java.lang.Class[] {};
        java.lang.Object obj30 = uRL27.getContent(classArray29);
        java.lang.Object obj31 = uRL25.getContent(classArray29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = uRL15.getContent(classArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(uRL25);
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getProtocol();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        java.lang.String str15 = fileNotFoundURLConnection14.name;
        boolean boolean16 = fileNotFoundURLConnection14.getUseCaches();
        fileNotFoundURLConnection14.setRequestProperty("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", "/file");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        java.net.URL uRL29 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL31 = new java.net.URL(uRL29, "file");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(uRL29);
        org.junit.Assert.assertEquals(uRL29.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/file");
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setIfModifiedSince((long) 0);
        int int13 = fileNotFoundURLConnection4.getHeaderFieldInt("/file", 97);
        java.lang.String str14 = fileNotFoundURLConnection4.getname();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "://hi!:100" + "'", str14, "://hi!:100");
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        int int23 = fileNotFoundURLConnection17.getConnectTimeout();
        int int24 = fileNotFoundURLConnection17.getContentLength();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long22 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean23 = fileNotFoundURLConnection17.getDoOutput();
        fileNotFoundURLConnection17.setRequestProperty("[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0", "/file");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter57.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter57.deserializeObjectExplodedArchive14();
        java.io.File file61 = serializedObjectSupporter57.deserializeObjectFile9();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter57.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter57;
        java.net.URL uRL65 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL66 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL67 = new java.net.URL(uRL1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter68.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter68.deserializeObjectExplodedArchive9();
        java.io.File file71 = serializedObjectSupporter68.deserializeObjectFile8();
        java.io.File file72 = serializedObjectSupporter68.deserializeObjectFile14();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertEquals(uRL65.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL66.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertNotNull(serializedObjectSupporter68);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str33 = fileNotFoundURLConnection17.getHeaderFieldKey((-1));
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        fileNotFoundURLConnection17.addRequestProperty("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", "://hi!:100");
        boolean boolean28 = fileNotFoundURLConnection17.getUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection4.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ://hi!:100");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        int int24 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        long long29 = fileNotFoundURLConnection17.getHeaderFieldDate("file:/tmp/junit3853753617501372040/junit897402010941125298", (long) '#');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 35L + "'", long29 == 35L);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        explodedArchive3.filtered = true;
        boolean boolean17 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet18 = explodedArchive3.getSKIPPED_NAMES();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        fileNotFoundURLConnection50.setAllowUserInteraction(false);
        boolean boolean53 = fileNotFoundURLConnection50.getUseCaches();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream54 = fileNotFoundURLConnection50.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        java.security.Permission permission21 = fileNotFoundURLConnection17.getPermission();
        fileNotFoundURLConnection17.setUseCaches(false);
        long long26 = fileNotFoundURLConnection17.getHeaderFieldDate("/file", 97L);
        java.lang.String str27 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setReadTimeout(100);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(permission21);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 97L + "'", long26 == 97L);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile2();
        java.util.HashSet hashSet9 = serializedObjectSupporter0.deserializeObjectSet1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(hashSet9);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = fileEntry27.serializedObjectSupporter;
        java.io.File file34 = serializedObjectSupporter33.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter33.deserializeObjectExplodedArchive12();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file34.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive35);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        fileNotFoundURLConnection17.setUseCaches(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean25 = fileNotFoundURLConnection17.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive3.getEntries();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(entryCollection60);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = null;
        explodedArchive25.entries = asciiBytesMap28;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.io.File file40 = explodedArchive39.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive33.new FileEntry(asciiBytes35, file40);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest47 = serializedObjectSupporter42.deserializeObjectManifest1();
        java.io.File file48 = serializedObjectSupporter42.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive25.new FileEntry(asciiBytes35, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        java.io.File file52 = fileEntry49.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = fileEntry49.serializedObjectSupporter;
        filteredURLStreamHandler20.serializedObjectSupporter = serializedObjectSupporter53;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = filteredURLStreamHandler20.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file57 = serializedObjectSupporter56.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter56.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter56.deserializeObjectExplodedArchive14();
        java.io.File file60 = serializedObjectSupporter56.deserializeObjectFile9();
        java.io.File file61 = serializedObjectSupporter56.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter56.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler20.serializedObjectSupporter = serializedObjectSupporter56;
        java.net.URL uRL64 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive14();
        java.io.File file69 = serializedObjectSupporter65.deserializeObjectFile9();
        java.io.File file70 = serializedObjectSupporter65.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter65.deserializeObjectExplodedArchive5();
        filteredURLStreamHandler20.serializedObjectSupporter = serializedObjectSupporter65;
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter65.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals(uRL21.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(manifest47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter53);
        org.junit.Assert.assertNotNull(serializedObjectSupporter55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertEquals(uRL64.toString(), "file://hi!:100file");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive74);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        int int21 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setUseCaches(true);
        fileNotFoundURLConnection17.setUseCaches(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        fileNotFoundURLConnection17.setUseCaches(false);
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = fileNotFoundURLConnection17.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        java.lang.String str7 = fileNotFoundURLConnection4.getname();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile6();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter8;
        boolean boolean12 = fileNotFoundURLConnection4.getDefaultUseCaches();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        int int7 = fileNotFoundURLConnection4.getReadTimeout();
        java.lang.String str9 = fileNotFoundURLConnection4.getHeaderFieldKey((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection4.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ://hi!:100");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        java.util.jar.Manifest manifest84 = explodedArchive83.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler85 = explodedArchive83.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter86 = explodedArchive83.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest84);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile9();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        int int7 = fileNotFoundURLConnection4.getContentLength();
        long long10 = fileNotFoundURLConnection4.getHeaderFieldDate("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", (long) (short) -1);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file37 = serializedObjectSupporter36.deserializeObjectFile8();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file39 = serializedObjectSupporter36.deserializeObjectFile13();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile9();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive3.new FileEntry(asciiBytes21, file41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive3.entries;
        explodedArchive3.filtered = true;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap43);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = uRL10.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL25 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str26 = uRL25.getAuthority();
        boolean boolean27 = uRL23.sameFile(uRL25);
        java.lang.String str28 = uRL23.getHost();
        int int29 = uRL23.getDefaultPort();
        java.lang.String str30 = uRL23.getRef();
        java.lang.String str31 = uRL23.getQuery();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setIfModifiedSince(0L);
        long long29 = fileNotFoundURLConnection17.getHeaderFieldDate("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) ' ');
        java.lang.String str30 = fileNotFoundURLConnection17.toString();
        fileNotFoundURLConnection17.setConnectTimeout(10);
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 32L + "'", long29 == 32L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str30, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter57.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter57.deserializeObjectExplodedArchive14();
        java.io.File file61 = serializedObjectSupporter57.deserializeObjectFile9();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter57.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter57;
        java.net.URL uRL65 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL66 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL67 = new java.net.URL(uRL1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str68 = uRL67.getUserInfo();
        int int69 = uRL67.getPort();
        java.net.URLConnection uRLConnection70 = uRL67.openConnection();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertEquals(uRL65.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL66.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection70);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.io.File file6 = explodedArchive3.getroot();
        java.util.Set<java.lang.String> strSet7 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.lang.String str13 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.io.File file22 = explodedArchive21.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest24 = serializedObjectSupporter23.deserializeObjectManifest1();
        explodedArchive21.manifest = manifest24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = null;
        explodedArchive29.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.util.Set<java.lang.String> strSet38 = explodedArchive37.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.io.File file44 = explodedArchive43.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive37.new FileEntry(asciiBytes39, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter46.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter46.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter46.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest51 = serializedObjectSupporter46.deserializeObjectManifest1();
        java.io.File file52 = serializedObjectSupporter46.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive29.new FileEntry(asciiBytes39, file52);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file55 = serializedObjectSupporter54.deserializeObjectFile8();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile15();
        java.io.File file57 = serializedObjectSupporter54.deserializeObjectFile13();
        java.io.File file58 = serializedObjectSupporter54.deserializeObjectFile9();
        java.io.File file59 = serializedObjectSupporter54.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive21.new FileEntry(asciiBytes39, file59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file62 = serializedObjectSupporter61.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive17.new FileEntry(asciiBytes39, file62);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter64 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter64.deserializeObjectExplodedArchive12();
        java.io.File file66 = serializedObjectSupporter64.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = explodedArchive11.new FileEntry(asciiBytes39, file66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive11.entries;
        java.lang.String str69 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter70 = explodedArchive11.serializedObjectSupporter;
        java.lang.String str71 = explodedArchive11.toString();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes72 = explodedArchive11.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile7();
        java.io.File file75 = serializedObjectSupporter73.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry76 = explodedArchive3.new FileEntry(asciiBytes72, file75);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes77 = fileEntry76.getName();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str13, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest24);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(manifest51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file56.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file59.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str69, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str71, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(asciiBytes72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes77);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = filteredURLStreamHandler9.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter44.deserializeObjectExplodedArchive7();
        java.io.File file46 = serializedObjectSupporter44.deserializeObjectFile10();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile15();
        java.io.File file46 = serializedObjectSupporter43.deserializeObjectFile13();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile9();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive10.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive53.entries;
        explodedArchive10.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        boolean boolean58 = explodedArchive57.filtered;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file60 = serializedObjectSupporter59.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter59.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter59.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter59.deserializeObjectExplodedArchive12();
        java.io.File file64 = serializedObjectSupporter59.deserializeObjectFile5();
        explodedArchive57.serializedObjectSupporter = serializedObjectSupporter59;
        java.lang.String str66 = explodedArchive57.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive57.entries;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file64.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "file:/tmp/junit3853753617501372040/junit897402010941125298" + "'", str66, "file:/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(asciiBytesMap67);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile9();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", 100L);
        boolean boolean30 = fileNotFoundURLConnection17.getDefaultUseCaches();
        fileNotFoundURLConnection17.setReadTimeout((int) 'a');
        long long33 = fileNotFoundURLConnection17.getIfModifiedSince();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter54.deserializeObjectExplodedArchive11();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter54.deserializeObjectExplodedArchive1();
        java.io.File file58 = serializedObjectSupporter54.deserializeObjectFile1();
        fileNotFoundURLConnection53.serializedObjectSupporter = serializedObjectSupporter54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter54.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive60);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes60 = fileEntry59.getName();
        boolean boolean61 = fileEntry59.isDirectory();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = fileEntry59.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytes60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(serializedObjectSupporter62);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: [hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file8 = serializedObjectSupporter7.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter7.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter7.deserializeObjectExplodedArchive12();
        java.io.File file12 = serializedObjectSupporter7.deserializeObjectFile6();
        java.io.File file13 = serializedObjectSupporter7.deserializeObjectFile16();
        java.io.File file14 = serializedObjectSupporter7.deserializeObjectFile6();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive3.entries;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytesMap16);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.lang.String str6 = fileNotFoundURLConnection4.getHeaderField("hi!:100");
        long long7 = fileNotFoundURLConnection4.getDate();
        long long10 = fileNotFoundURLConnection4.getHeaderFieldDate("", (long) 10);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.util.Set<java.lang.String> strSet13 = explodedArchive12.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.lang.String str16 = uRL15.getPath();
        java.lang.String str17 = uRL15.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL(uRL15, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.util.Set<java.lang.String> strSet49 = explodedArchive48.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getPath();
        java.lang.String str53 = uRL51.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        java.io.File file57 = serializedObjectSupporter55.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file57);
        java.util.Set<java.lang.String> strSet59 = explodedArchive58.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL37, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL25, "file", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str64 = uRL25.getProtocol();
        java.lang.String str65 = uRL25.toExternalForm();
        boolean boolean66 = uRL1.sameFile(uRL25);
        java.net.URL uRL68 = new java.net.URL(uRL25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str69 = uRL25.getHost();
        java.lang.Class[] classArray70 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = uRL25.getContent(classArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals(uRL25.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals(uRL37.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:100" + "'", str39, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals(uRL51.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertEquals(uRL61.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL63.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "://hi!:100/hi!" + "'", str65, "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals(uRL68.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(classArray70);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.HashSet hashSet4 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(hashSet4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        java.net.URLConnection.setDefaultRequestProperty("[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        boolean boolean4 = explodedArchive3.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile14();
        java.io.File file13 = serializedObjectSupporter10.deserializeObjectFile11();
        java.io.File file14 = serializedObjectSupporter10.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive3.new FileEntry(asciiBytes9, file14);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile10();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.lang.String str19 = uRL18.getPath();
        java.lang.String str20 = uRL18.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL18, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = filteredURLStreamHandler41.serializedObjectSupporter;
        java.net.URL uRL45 = new java.net.URL("hi!:100", "file", (int) (byte) 1, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.io.File file50 = explodedArchive49.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive49.entries;
        java.io.File file52 = explodedArchive49.getroot();
        explodedArchive49.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive49.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = explodedArchive49.serializedObjectSupporter;
        java.util.Set<java.lang.String> strSet57 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter58.deserializeObjectExplodedArchive4();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile16();
        java.io.File file65 = serializedObjectSupporter58.deserializeObjectFile3();
        explodedArchive49.serializedObjectSupporter = serializedObjectSupporter58;
        filteredURLStreamHandler41.serializedObjectSupporter = serializedObjectSupporter58;
        java.net.URL uRL68 = new java.net.URL("[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0", "[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0", (int) (short) 100, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:100" + "'", str20, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals(uRL42.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter44);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!:100://file:1file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file65.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertEquals(uRL68.toString(), "[hi!:100://[hi!:100]:0file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0://[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0:100/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        java.io.File file53 = serializedObjectSupporter49.deserializeObjectFile9();
        java.io.File file54 = serializedObjectSupporter49.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter49.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter49;
        java.net.URL uRL57 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        java.io.File file62 = serializedObjectSupporter58.deserializeObjectFile9();
        java.io.File file63 = serializedObjectSupporter58.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter58.deserializeObjectExplodedArchive5();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter58;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter66.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter66.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter66.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter66.deserializeObjectExplodedArchive7();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter66.deserializeObjectExplodedArchive12();
        java.util.jar.Manifest manifest73 = serializedObjectSupporter66.deserializeObjectManifest1();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter66;
        java.io.File file75 = serializedObjectSupporter66.deserializeObjectFile15();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertEquals(uRL57.toString(), "file://hi!:100file");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(manifest73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file75.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.lang.Object obj24 = null;
        boolean boolean25 = uRL23.equals(obj24);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        fileNotFoundURLConnection17.setConnectTimeout(1);
        java.lang.String str35 = fileNotFoundURLConnection17.getHeaderField("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = fileNotFoundURLConnection17.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(serializedObjectSupporter36);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = null;
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        fileNotFoundURLConnection17.setUseCaches(true);
        long long25 = fileNotFoundURLConnection17.getContentLengthLong();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.String str7 = uRL6.getPath();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getProtocol();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        java.lang.String str15 = fileNotFoundURLConnection14.name;
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap16 = fileNotFoundURLConnection14.getRequestProperties();
        int int17 = fileNotFoundURLConnection14.getReadTimeout();
        java.lang.String str18 = fileNotFoundURLConnection14.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str18, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = explodedArchive3.serializedObjectSupporter;
        java.lang.String str63 = explodedArchive3.toString();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest65 = explodedArchive3.getManifest();
        java.lang.String str66 = explodedArchive3.toString();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str63, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str66, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getQuery();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.util.Set<java.lang.String> strSet49 = explodedArchive48.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.util.Set<java.lang.String> strSet56 = explodedArchive55.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive55.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = null;
        explodedArchive55.entries = asciiBytesMap58;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter60.deserializeObjectExplodedArchive11();
        java.io.File file62 = serializedObjectSupporter60.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file62);
        java.util.Set<java.lang.String> strSet64 = explodedArchive63.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes65 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter66.deserializeObjectExplodedArchive11();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file68);
        java.io.File file70 = explodedArchive69.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = explodedArchive63.new FileEntry(asciiBytes65, file70);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter72 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file73 = serializedObjectSupporter72.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter72.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter72.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter72.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest77 = serializedObjectSupporter72.deserializeObjectManifest1();
        java.io.File file78 = serializedObjectSupporter72.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive55.new FileEntry(asciiBytes65, file78);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry79.serializedObjectSupporter = serializedObjectSupporter80;
        java.io.File file82 = fileEntry79.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = fileEntry79.serializedObjectSupporter;
        filteredURLStreamHandler50.serializedObjectSupporter = serializedObjectSupporter83;
        java.net.URL uRL85 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        boolean boolean86 = uRL10.sameFile(uRL85);
        int int87 = uRL85.getPort();
        java.net.URL uRL89 = new java.net.URL(uRL85, "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection91 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL85, "");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals(uRL51.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(asciiBytes65);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(manifest77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter83);
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!:100://[hi!:100]:0/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        java.io.File file34 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry27.name;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = fileEntry27.serializedObjectSupporter;
        java.io.File file38 = serializedObjectSupporter37.deserializeObjectFile16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNotNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        fileNotFoundURLConnection17.setConnectTimeout((int) '#');
        int int34 = fileNotFoundURLConnection17.getHeaderFieldInt("/hi!", (int) '#');
        java.lang.String str36 = fileNotFoundURLConnection17.getRequestProperty("/hi!:100");
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap37 = fileNotFoundURLConnection17.getRequestProperties();
        java.lang.String str38 = fileNotFoundURLConnection17.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 35 + "'", int34 == 35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str38, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile10();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.net.URL uRL6 = new java.net.URL(uRL1, "file");
        java.lang.String str7 = uRL1.getFile();
        java.lang.String str8 = uRL1.getFile();
        java.lang.Object obj9 = uRL1.getContent();
        java.net.URL uRL11 = new java.net.URL(uRL1, "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str8, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100/hi!");
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.io.File file61 = explodedArchive3.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection62 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive3.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection62);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getPath();
        java.lang.String str44 = uRL42.getUserInfo();
        java.lang.String str45 = uRL42.getHost();
        java.net.URL uRL47 = new java.net.URL(uRL42, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL42, "hi!");
        fileNotFoundURLConnection49.setDefaultUseCaches(false);
        java.lang.String str52 = fileNotFoundURLConnection49.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        java.io.File file55 = serializedObjectSupporter53.deserializeObjectFile15();
        java.io.File file56 = serializedObjectSupporter53.deserializeObjectFile13();
        fileNotFoundURLConnection49.serializedObjectSupporter = serializedObjectSupporter53;
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter53.deserializeObjectExplodedArchive10();
        java.io.File file60 = serializedObjectSupporter53.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter53.deserializeObjectExplodedArchive4();
        java.io.File file62 = serializedObjectSupporter53.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter53.deserializeObjectExplodedArchive9();
        java.io.File file64 = serializedObjectSupporter53.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals(uRL42.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file55.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.HashSet hashSet4 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile13();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.util.Set<java.lang.String> strSet10 = explodedArchive9.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive9.new FileEntry(asciiBytes11, file16);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = explodedArchive9.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.io.File file23 = explodedArchive22.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter24.deserializeObjectManifest1();
        explodedArchive22.manifest = manifest25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.io.File file31 = explodedArchive30.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive30.entries;
        explodedArchive22.entries = asciiBytesMap32;
        explodedArchive9.entries = asciiBytesMap32;
        java.util.jar.Manifest manifest35 = explodedArchive9.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive9.entries;
        java.util.Set<java.lang.String> strSet37 = explodedArchive9.getSKIPPED_NAMES();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive39.getNestedArchives(entryFilter40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(hashSet4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(asciiBytes11);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes18);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile14();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getAuthority();
        java.net.URLConnection uRLConnection3 = uRL1.openConnection();
        java.lang.Object obj4 = uRLConnection3.getContent();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(uRLConnection3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile7();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile5();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile13();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = filteredURLStreamHandler9.serializedObjectSupporter;
        java.io.File file45 = serializedObjectSupporter44.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter44.deserializeObjectExplodedArchive6();
        java.io.File file47 = serializedObjectSupporter44.deserializeObjectFile16();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getProtocol();
        java.lang.Class[] classArray3 = new java.lang.Class[] {};
        java.lang.Object obj4 = uRL1.getContent(classArray3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        java.lang.String str7 = uRL1.getUserInfo();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertNotNull(classArray3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = fileNotFoundURLConnection4.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = fileNotFoundURLConnection4.serializedObjectSupporter;
        java.net.URL uRL9 = fileNotFoundURLConnection4.getURL();
        java.io.InputStream inputStream10 = uRL9.openStream();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(uRL9);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(inputStream10);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream37 = uRL10.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        java.lang.String str18 = uRL15.getAuthority();
        java.lang.String str19 = uRL15.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:100" + "'", str18, "hi!:100");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        boolean boolean25 = fileNotFoundURLConnection17.getDefaultUseCaches();
        java.lang.String str26 = fileNotFoundURLConnection17.getContentEncoding();
        fileNotFoundURLConnection17.setDoOutput(false);
        fileNotFoundURLConnection17.addRequestProperty("hi!", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str32 = fileNotFoundURLConnection17.name;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        java.net.URL uRL22 = fileNotFoundURLConnection17.getURL();
        java.lang.String str23 = fileNotFoundURLConnection17.toString();
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = fileNotFoundURLConnection17.serializedObjectSupporter;
        int int27 = fileNotFoundURLConnection17.getConnectTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRL22);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str23, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        fileNotFoundURLConnection17.setDoOutput(false);
        boolean boolean28 = fileNotFoundURLConnection17.getDoInput();
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile2();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile12();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        fileNotFoundURLConnection50.setDefaultUseCaches(true);
        fileNotFoundURLConnection50.setDoOutput(true);
        boolean boolean55 = fileNotFoundURLConnection50.getDoInput();
        fileNotFoundURLConnection50.setRequestProperty("", "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str59 = fileNotFoundURLConnection50.getContentEncoding();
        java.net.URL uRL60 = fileNotFoundURLConnection50.getURL();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(uRL60);
        org.junit.Assert.assertEquals(uRL60.toString(), "://hi!:100");
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.lang.String str19 = uRL18.getPath();
        java.lang.String str20 = uRL18.getUserInfo();
        java.lang.String str21 = uRL18.getHost();
        java.net.URL uRL23 = new java.net.URL(uRL18, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL18, "hi!");
        fileNotFoundURLConnection25.setDefaultUseCaches(false);
        java.lang.String str29 = fileNotFoundURLConnection25.getHeaderField("hi!");
        int int30 = fileNotFoundURLConnection25.getContentLength();
        java.lang.String str31 = fileNotFoundURLConnection25.getContentType();
        boolean boolean32 = fileNotFoundURLConnection25.getAllowUserInteraction();
        fileNotFoundURLConnection25.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap35 = fileNotFoundURLConnection25.getRequestProperties();
        long long36 = fileNotFoundURLConnection25.getExpiration();
        java.security.Permission permission37 = fileNotFoundURLConnection25.getPermission();
        long long38 = fileNotFoundURLConnection25.getIfModifiedSince();
        long long39 = fileNotFoundURLConnection25.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter40.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter40.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter40.deserializeObjectExplodedArchive7();
        java.io.File file45 = serializedObjectSupporter40.deserializeObjectFile3();
        java.io.File file46 = serializedObjectSupporter40.deserializeObjectFile1();
        java.io.File file47 = serializedObjectSupporter40.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter40.deserializeObjectExplodedArchive10();
        java.io.File file49 = serializedObjectSupporter40.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter40.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter40.deserializeObjectExplodedArchive6();
        fileNotFoundURLConnection25.serializedObjectSupporter = serializedObjectSupporter40;
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter40;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(permission37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file45.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNull(explodedArchive51);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.util.Set<java.lang.String> strSet37 = explodedArchive36.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive36.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = null;
        explodedArchive36.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes46 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter47.deserializeObjectExplodedArchive11();
        java.io.File file49 = serializedObjectSupporter47.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file49);
        java.io.File file51 = explodedArchive50.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive44.new FileEntry(asciiBytes46, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter53.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter53.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter53.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest58 = serializedObjectSupporter53.deserializeObjectManifest1();
        java.io.File file59 = serializedObjectSupporter53.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive36.new FileEntry(asciiBytes46, file59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry60.serializedObjectSupporter = serializedObjectSupporter61;
        java.io.File file63 = fileEntry60.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter64 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter64.deserializeObjectExplodedArchive11();
        java.io.File file66 = serializedObjectSupporter64.deserializeObjectFile6();
        fileEntry60.serializedObjectSupporter = serializedObjectSupporter64;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes68 = fileEntry60.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter69.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter69.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest74 = serializedObjectSupporter69.deserializeObjectManifest1();
        java.util.jar.Manifest manifest75 = serializedObjectSupporter69.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter69.deserializeObjectExplodedArchive5();
        java.io.File file77 = serializedObjectSupporter69.deserializeObjectFile6();
        fileEntry60.serializedObjectSupporter = serializedObjectSupporter69;
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter69;
        java.io.File file80 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes81 = fileEntry27.name;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(asciiBytes46);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(manifest58);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNotNull(manifest74);
        org.junit.Assert.assertNotNull(manifest75);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes81);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        java.util.Set<java.lang.String> strSet41 = explodedArchive3.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest42 = explodedArchive3.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive3.getEntries();
        java.net.URL uRL44 = explodedArchive3.getUrl();
        java.lang.Object obj45 = uRL44.getContent();
        java.lang.String str46 = uRL44.getAuthority();
        java.lang.String str47 = uRL44.getHost();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(manifest42);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNotNull(uRL44);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldDate("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", 100L);
        boolean boolean28 = fileNotFoundURLConnection17.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 100L + "'", long27 == 100L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        java.net.URL uRL0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL0, "file");
        fileNotFoundURLConnection2.addRequestProperty("://hi!:100", "file");
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile16();
        java.util.jar.Manifest manifest11 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(manifest11);
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        java.lang.String str32 = uRL30.toExternalForm();
        boolean boolean33 = uRL15.sameFile(uRL30);
        java.net.URL uRL35 = new java.net.URL(uRL30, "hi!:100");
        java.lang.String str36 = uRL35.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes43 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter44.deserializeObjectExplodedArchive11();
        java.io.File file46 = serializedObjectSupporter44.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file46);
        java.io.File file48 = explodedArchive47.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive41.new FileEntry(asciiBytes43, file48);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes50 = explodedArchive41.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.io.File file55 = explodedArchive54.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest57 = serializedObjectSupporter56.deserializeObjectManifest1();
        explodedArchive54.manifest = manifest57;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter59.deserializeObjectExplodedArchive11();
        java.io.File file61 = serializedObjectSupporter59.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file61);
        java.io.File file63 = explodedArchive62.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive62.entries;
        explodedArchive54.entries = asciiBytesMap64;
        explodedArchive41.entries = asciiBytesMap64;
        java.util.jar.Manifest manifest67 = explodedArchive41.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive41.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive41.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL71 = new java.net.URL(uRL35, "file", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals(uRL35.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!:100" + "'", str36, "/hi!:100");
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(asciiBytes43);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes50);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest57);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertEquals(uRL71.toString(), "://hi!:100/file");
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file10 = serializedObjectSupporter9.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive8();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter9.deserializeObjectExplodedArchive2();
        java.io.File file15 = serializedObjectSupporter9.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(asciiBytes8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile3();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream8 = fileNotFoundURLConnection4.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter36.deserializeObjectExplodedArchive1();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter36.deserializeObjectExplodedArchive5();
        filteredURLStreamHandler33.serializedObjectSupporter = serializedObjectSupporter36;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file40.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive42);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive3.entries;
        java.net.URL uRL8 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL21 = new java.net.URL(uRL8, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        int int22 = uRL21.getDefaultPort();
        java.net.URL uRL24 = new java.net.URL(uRL21, "/file");
        java.net.Proxy proxy25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection26 = uRL21.openConnection(proxy25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/file");
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        java.security.Permission permission21 = fileNotFoundURLConnection17.getPermission();
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setDoInput(false);
        java.lang.String str25 = fileNotFoundURLConnection17.getContentEncoding();
        int int26 = fileNotFoundURLConnection17.getContentLength();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(permission21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.io.File file31 = explodedArchive30.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive30.entries;
        java.io.File file33 = explodedArchive30.getroot();
        java.util.jar.Manifest manifest34 = explodedArchive30.getManifest();
        java.net.URL uRL35 = explodedArchive30.getUrl();
        java.net.URL uRL37 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str38 = uRL37.getProtocol();
        java.lang.Class[] classArray39 = new java.lang.Class[] {};
        java.lang.Object obj40 = uRL37.getContent(classArray39);
        java.lang.Object obj41 = uRL35.getContent(classArray39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = fileNotFoundURLConnection17.getContent(classArray39);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNotNull(uRL35);
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file" + "'", str38, "file");
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        int int26 = fileNotFoundURLConnection17.getReadTimeout();
        java.lang.String str27 = fileNotFoundURLConnection17.name;
        fileNotFoundURLConnection17.setDoOutput(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setReadTimeout((int) (short) 1);
        int int27 = fileNotFoundURLConnection17.getConnectTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        fileNotFoundURLConnection17.addRequestProperty("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", "://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.io.File file32 = explodedArchive31.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive31.entries;
        java.io.File file34 = explodedArchive31.getroot();
        java.util.jar.Manifest manifest35 = explodedArchive31.getManifest();
        java.net.URL uRL36 = explodedArchive31.getUrl();
        java.net.URL uRL38 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str39 = uRL38.getProtocol();
        java.lang.Class[] classArray40 = new java.lang.Class[] {};
        java.lang.Object obj41 = uRL38.getContent(classArray40);
        java.lang.Object obj42 = uRL36.getContent(classArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = fileNotFoundURLConnection17.getContent(classArray40);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertNotNull(uRL36);
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file" + "'", str39, "file");
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        explodedArchive3.filtered = true;
        boolean boolean17 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive21.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.util.Set<java.lang.String> strSet29 = explodedArchive28.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive28.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = null;
        explodedArchive28.entries = asciiBytesMap31;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.util.Set<java.lang.String> strSet37 = explodedArchive36.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes38 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.io.File file43 = explodedArchive42.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry44 = explodedArchive36.new FileEntry(asciiBytes38, file43);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file46 = serializedObjectSupporter45.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter45.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter45.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter45.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest50 = serializedObjectSupporter45.deserializeObjectManifest1();
        java.io.File file51 = serializedObjectSupporter45.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive28.new FileEntry(asciiBytes38, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry52.serializedObjectSupporter = serializedObjectSupporter53;
        java.io.File file55 = fileEntry52.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes56 = fileEntry52.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes57 = fileEntry52.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter58.deserializeObjectExplodedArchive16();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile6();
        java.io.File file65 = serializedObjectSupporter58.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry66 = explodedArchive21.new FileEntry(asciiBytes57, file65);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes67 = fileEntry66.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes68 = fileEntry66.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive69 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(asciiBytes38);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNotNull(manifest50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes56);
        org.junit.Assert.assertNotNull(asciiBytes57);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes67);
        org.junit.Assert.assertNotNull(asciiBytes68);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.net.URL uRL4 = explodedArchive3.getUrl();
        java.io.InputStream inputStream5 = uRL4.openStream();
        java.lang.String str6 = uRL4.getFile();
        java.io.InputStream inputStream7 = uRL4.openStream();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(uRL4);
        org.junit.Assert.assertEquals(uRL4.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(inputStream5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str6, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(inputStream7);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = explodedArchive3.serializedObjectSupporter;
        java.lang.String str63 = explodedArchive3.toString();
        java.util.jar.Manifest manifest64 = explodedArchive3.getManifest();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str63, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(manifest64);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive7.new FileEntry(asciiBytes9, file14);
        explodedArchive7.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive7.entries;
        java.util.Set<java.lang.String> strSet19 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = explodedArchive7.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive8();
        explodedArchive7.serializedObjectSupporter = serializedObjectSupporter21;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap25);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = explodedArchive26.getMANIFEST_ENTRY_NAME();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(asciiBytes9);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytes27);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile6();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter31;
        java.io.File file35 = fileEntry27.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry27.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes37 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter38.deserializeObjectFile7();
        java.io.File file46 = serializedObjectSupporter38.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter38.deserializeObjectExplodedArchive9();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter38;
        boolean boolean49 = fileEntry27.isDirectory();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry27.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNotNull(asciiBytes37);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file45.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.name;
        java.lang.String str24 = fileNotFoundURLConnection17.getContentType();
        boolean boolean25 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str26 = fileNotFoundURLConnection17.getContentEncoding();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        long long32 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = fileEntry27.serializedObjectSupporter;
        java.io.File file35 = fileEntry27.file;
        boolean boolean36 = fileEntry27.isDirectory();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes37 = fileEntry27.getName();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(asciiBytes37);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        boolean boolean14 = fileNotFoundURLConnection13.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        java.lang.String str26 = fileNotFoundURLConnection17.getHeaderField("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str27 = fileNotFoundURLConnection17.toString();
        int int28 = fileNotFoundURLConnection17.getReadTimeout();
        java.lang.String str30 = fileNotFoundURLConnection17.getHeaderFieldKey(10);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str27, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        java.security.Permission permission21 = fileNotFoundURLConnection17.getPermission();
        fileNotFoundURLConnection17.setUseCaches(false);
        boolean boolean24 = fileNotFoundURLConnection17.getDefaultUseCaches();
        java.lang.String str25 = fileNotFoundURLConnection17.getContentEncoding();
        java.lang.String str27 = fileNotFoundURLConnection17.getRequestProperty("file");
        boolean boolean28 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(permission21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = filteredURLStreamHandler17.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter53.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter53.deserializeObjectExplodedArchive14();
        java.io.File file57 = serializedObjectSupporter53.deserializeObjectFile9();
        java.io.File file58 = serializedObjectSupporter53.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter53.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter53;
        java.net.URL uRL61 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL62 = new java.net.URL("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (int) (byte) 10, "file", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.lang.String str63 = uRL62.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection64 = uRL62.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertEquals(uRL61.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!:100://[hi!:100]:0file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://:10file");
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "");
        fileNotFoundURLConnection51.setReadTimeout(0);
        boolean boolean54 = fileNotFoundURLConnection51.getUseCaches();
        long long55 = fileNotFoundURLConnection51.getLastModified();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        boolean boolean7 = explodedArchive3.filtered;
        java.net.URL uRL8 = explodedArchive3.getUrl();
        boolean boolean9 = explodedArchive3.filtered;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter21.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter21.deserializeObjectExplodedArchive3();
        java.io.File file28 = serializedObjectSupporter21.deserializeObjectFile1();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file28.toString(), "src/test/resources/root");
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        explodedArchive3.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = explodedArchive3.serializedObjectSupporter;
        java.util.Set<java.lang.String> strSet11 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        boolean boolean16 = explodedArchive15.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter19.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter19.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter19.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter19.deserializeObjectExplodedArchive16();
        java.io.File file25 = serializedObjectSupporter19.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest32 = serializedObjectSupporter31.deserializeObjectManifest1();
        explodedArchive29.manifest = manifest32;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.util.Set<java.lang.String> strSet38 = explodedArchive37.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive37.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = null;
        explodedArchive37.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter42.deserializeObjectExplodedArchive11();
        java.io.File file44 = serializedObjectSupporter42.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file44);
        java.util.Set<java.lang.String> strSet46 = explodedArchive45.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes47 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter48.deserializeObjectExplodedArchive11();
        java.io.File file50 = serializedObjectSupporter48.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file50);
        java.io.File file52 = explodedArchive51.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive45.new FileEntry(asciiBytes47, file52);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file55 = serializedObjectSupporter54.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter54.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter54.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter54.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest59 = serializedObjectSupporter54.deserializeObjectManifest1();
        java.io.File file60 = serializedObjectSupporter54.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive37.new FileEntry(asciiBytes47, file60);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file63 = serializedObjectSupporter62.deserializeObjectFile8();
        java.io.File file64 = serializedObjectSupporter62.deserializeObjectFile15();
        java.io.File file65 = serializedObjectSupporter62.deserializeObjectFile13();
        java.io.File file66 = serializedObjectSupporter62.deserializeObjectFile9();
        java.io.File file67 = serializedObjectSupporter62.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry68 = explodedArchive29.new FileEntry(asciiBytes47, file67);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive11();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file71);
        java.io.File file73 = explodedArchive72.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive72.entries;
        explodedArchive29.entries = asciiBytesMap74;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap74);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry77 = explodedArchive3.new FileEntry(asciiBytes18, file25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter78 = fileEntry77.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter79 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file80 = serializedObjectSupporter79.deserializeObjectFile8();
        java.io.File file81 = serializedObjectSupporter79.deserializeObjectFile15();
        java.io.File file82 = serializedObjectSupporter79.deserializeObjectFile13();
        java.util.jar.Manifest manifest83 = serializedObjectSupporter79.deserializeObjectManifest1();
        java.io.File file84 = serializedObjectSupporter79.deserializeObjectFile7();
        java.io.File file85 = serializedObjectSupporter79.deserializeObjectFile6();
        fileEntry77.serializedObjectSupporter = serializedObjectSupporter79;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asciiBytes17);
        org.junit.Assert.assertNotNull(asciiBytes18);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file25.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest32);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(asciiBytes47);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(manifest59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file64.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file67.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap74);
        org.junit.Assert.assertNull(serializedObjectSupporter78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file81.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file82.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(manifest83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file84.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = fileEntry27.serializedObjectSupporter;
        java.io.File file33 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes34 = fileEntry27.name;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive13();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes34);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(explodedArchive36);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive12();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile8();
        java.io.File file18 = serializedObjectSupporter15.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter15.deserializeObjectExplodedArchive13();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter15.deserializeObjectExplodedArchive16();
        java.io.File file22 = serializedObjectSupporter15.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/://hi!:100", "[://hi!:100/hi!]", 35, "[hi!:100]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        fileNotFoundURLConnection50.setDefaultUseCaches(true);
        fileNotFoundURLConnection50.setDoOutput(true);
        java.lang.String str56 = fileNotFoundURLConnection50.getHeaderFieldKey((int) (short) -1);
        int int59 = fileNotFoundURLConnection50.getHeaderFieldInt("[://hi!:100/hi!]", (int) (short) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        fileNotFoundURLConnection17.setReadTimeout(0);
        java.lang.String str34 = fileNotFoundURLConnection17.getContentEncoding();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.io.File file7 = explodedArchive3.getroot();
        java.io.File file8 = explodedArchive3.getroot();
        java.net.URL uRL9 = explodedArchive3.getUrl();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(uRL9);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(asciiBytes10);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        java.net.URLConnection.setDefaultRequestProperty("://hi!:100/hi!", "/file");
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        java.lang.String str30 = fileNotFoundURLConnection17.toString();
        java.lang.String str32 = fileNotFoundURLConnection17.getHeaderFieldKey((int) '#');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str30, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive23.new FileEntry(asciiBytes25, file30);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter32.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter32.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest37 = serializedObjectSupporter32.deserializeObjectManifest1();
        java.io.File file38 = serializedObjectSupporter32.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive15.new FileEntry(asciiBytes25, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile15();
        java.io.File file43 = serializedObjectSupporter40.deserializeObjectFile13();
        java.io.File file44 = serializedObjectSupporter40.deserializeObjectFile9();
        java.io.File file45 = serializedObjectSupporter40.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive7.new FileEntry(asciiBytes25, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes25, file48);
        java.net.URL uRL50 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL50, "hi!");
        java.lang.String str53 = uRL50.getProtocol();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(asciiBytes25);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(manifest37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file42.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL50);
        org.junit.Assert.assertEquals(uRL50.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "file" + "'", str53, "file");
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.net.URL uRL14 = new java.net.URL(uRL10, "file");
        java.net.URL uRL16 = new java.net.URL(uRL10, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        java.lang.String str17 = uRL10.toExternalForm();
        java.lang.String str18 = uRL10.toExternalForm();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL16.toString(), "://hi!:100/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "://hi!:100" + "'", str17, "://hi!:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "://hi!:100" + "'", str18, "://hi!:100");
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile2();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet15 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file18 = serializedObjectSupporter17.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter17.deserializeObjectExplodedArchive8();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter17.deserializeObjectExplodedArchive3();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file18.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(explodedArchive21);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        java.io.File file34 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry27.name;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = fileEntry27.serializedObjectSupporter;
        java.io.File file38 = serializedObjectSupporter37.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNotNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        long long27 = fileNotFoundURLConnection17.getDate();
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) (byte) -1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = explodedArchive3.serializedObjectSupporter;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet64 = explodedArchive3.getSKIPPED_NAMES();
        explodedArchive3.filtered = false;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(strSet64);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        explodedArchive3.filtered = false;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = explodedArchive11.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest27 = serializedObjectSupporter26.deserializeObjectManifest1();
        explodedArchive24.manifest = manifest27;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive32.entries;
        explodedArchive24.entries = asciiBytesMap34;
        explodedArchive11.entries = asciiBytesMap34;
        explodedArchive3.entries = asciiBytesMap34;
        java.io.File file38 = explodedArchive3.getroot();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes20);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest27);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream18 = uRL17.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        fileNotFoundURLConnection4.setDoOutput(false);
        java.lang.String str10 = fileNotFoundURLConnection4.getname();
        boolean boolean11 = fileNotFoundURLConnection4.getDefaultUseCaches();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap12 = fileNotFoundURLConnection4.getRequestProperties();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "://hi!:100" + "'", str10, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = explodedArchive3.serializedObjectSupporter;
        java.lang.String str63 = explodedArchive3.toString();
        boolean boolean64 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter66.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter66.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter66.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter66.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter66.deserializeObjectExplodedArchive13();
        java.util.jar.Manifest manifest72 = serializedObjectSupporter66.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest72;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive75 = explodedArchive3.getFilteredArchive(entryRenameFilter74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str63, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNotNull(manifest72);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        java.io.File file34 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = fileEntry27.serializedObjectSupporter;
        java.io.File file36 = fileEntry27.getFile();
        java.io.File file37 = fileEntry27.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes38 = fileEntry27.getName();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes38);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        java.net.URL uRL8 = fileNotFoundURLConnection4.getURL();
        java.net.Proxy proxy9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection10 = uRL8.openConnection(proxy9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setIfModifiedSince((long) 0);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file12 = serializedObjectSupporter11.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter11.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter11.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter11.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter11.deserializeObjectManifest1();
        java.io.File file17 = serializedObjectSupporter11.deserializeObjectFile14();
        java.io.File file18 = serializedObjectSupporter11.deserializeObjectFile10();
        java.io.File file19 = serializedObjectSupporter11.deserializeObjectFile6();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter11.deserializeObjectExplodedArchive9();
        java.io.File file22 = serializedObjectSupporter11.deserializeObjectFile13();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        java.net.URL uRL22 = fileNotFoundURLConnection17.getURL();
        java.lang.String str23 = fileNotFoundURLConnection17.toString();
        fileNotFoundURLConnection17.setIfModifiedSince((long) 'a');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRL22);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str23, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str25 = fileNotFoundURLConnection17.name;
        long long26 = fileNotFoundURLConnection17.getLastModified();
        java.net.URL uRL28 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str29 = uRL28.getProtocol();
        java.lang.Class[] classArray30 = new java.lang.Class[] {};
        java.lang.Object obj31 = uRL28.getContent(classArray30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = fileNotFoundURLConnection17.getContent(classArray30);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "file" + "'", str29, "file");
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        java.lang.String str54 = uRL22.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "://hi!:100" + "'", str54, "://hi!:100");
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive7.new FileEntry(asciiBytes9, file14);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = explodedArchive7.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter17.deserializeObjectExplodedArchive11();
        java.io.File file19 = serializedObjectSupporter17.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
        java.io.File file21 = explodedArchive20.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest23 = serializedObjectSupporter22.deserializeObjectManifest1();
        explodedArchive20.manifest = manifest23;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive28.entries;
        explodedArchive20.entries = asciiBytesMap30;
        explodedArchive7.entries = asciiBytesMap30;
        java.util.jar.Manifest manifest33 = explodedArchive7.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive7.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("", "://hi!:100/hi!", (int) (byte) 1, "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(asciiBytes9);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes16);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest23);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertEquals(uRL37.toString(), "://[://hi!:100/hi!]:1hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", 100L);
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean32 = fileNotFoundURLConnection17.getDoInput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        java.lang.String str18 = fileNotFoundURLConnection17.toString();
        fileNotFoundURLConnection17.setReadTimeout((int) (byte) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str18, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive7();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter8.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter8.deserializeObjectExplodedArchive6();
        java.io.File file16 = serializedObjectSupporter8.deserializeObjectFile11();
        java.io.File file17 = serializedObjectSupporter8.deserializeObjectFile12();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter8;
        java.io.File file19 = serializedObjectSupporter8.deserializeObjectFile2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter8.deserializeObjectExplodedArchive1();
        java.io.File file21 = serializedObjectSupporter8.deserializeObjectFile13();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.io.File file19 = explodedArchive18.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive18.entries;
        explodedArchive10.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap20);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive3.entries;
        java.net.URL uRL8 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL21 = new java.net.URL(uRL8, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        int int22 = uRL21.getDefaultPort();
        java.lang.String str23 = uRL21.toString();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100" + "'", str23, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        boolean boolean8 = fileNotFoundURLConnection4.getDoInput();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap9 = fileNotFoundURLConnection4.getHeaderFields();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL25 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str26 = uRL25.getAuthority();
        boolean boolean27 = uRL23.sameFile(uRL25);
        java.net.URL uRL29 = new java.net.URL(uRL23, "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str30 = uRL29.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals(uRL29.toString(), "://hi!:100/hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL32, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL20, "file", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL20, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        boolean boolean61 = fileNotFoundURLConnection60.getDoInput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:100" + "'", str34, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL58.toString(), "://hi!:100/file");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long25 = fileNotFoundURLConnection17.getExpiration();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = fileNotFoundURLConnection17.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive3.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile6();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile5();
        java.util.HashSet hashSet6 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(hashSet6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getQuery();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.util.Set<java.lang.String> strSet49 = explodedArchive48.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.util.Set<java.lang.String> strSet56 = explodedArchive55.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive55.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = null;
        explodedArchive55.entries = asciiBytesMap58;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter60.deserializeObjectExplodedArchive11();
        java.io.File file62 = serializedObjectSupporter60.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file62);
        java.util.Set<java.lang.String> strSet64 = explodedArchive63.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes65 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter66.deserializeObjectExplodedArchive11();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file68);
        java.io.File file70 = explodedArchive69.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = explodedArchive63.new FileEntry(asciiBytes65, file70);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter72 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file73 = serializedObjectSupporter72.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter72.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter72.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter72.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest77 = serializedObjectSupporter72.deserializeObjectManifest1();
        java.io.File file78 = serializedObjectSupporter72.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive55.new FileEntry(asciiBytes65, file78);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry79.serializedObjectSupporter = serializedObjectSupporter80;
        java.io.File file82 = fileEntry79.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = fileEntry79.serializedObjectSupporter;
        filteredURLStreamHandler50.serializedObjectSupporter = serializedObjectSupporter83;
        java.net.URL uRL85 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        boolean boolean86 = uRL10.sameFile(uRL85);
        java.lang.String str87 = uRL85.toExternalForm();
        java.net.URLConnection uRLConnection88 = uRL85.openConnection();
        uRLConnection88.setAllowUserInteraction(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals(uRL51.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(asciiBytes65);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(manifest77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter83);
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str87, "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRLConnection88);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        java.lang.String str18 = fileNotFoundURLConnection17.toString();
        java.lang.String str19 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        int int24 = fileNotFoundURLConnection17.getHeaderFieldInt("file", (int) (short) -1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str18, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        fileNotFoundURLConnection17.setUseCaches(false);
        boolean boolean26 = fileNotFoundURLConnection17.getDoOutput();
        boolean boolean27 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap28 = fileNotFoundURLConnection17.getHeaderFields();
        int int29 = fileNotFoundURLConnection17.getReadTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile15();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        java.io.File file34 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry27.name;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive9();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNotNull(serializedObjectSupporter37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("://hi!:100/hi!", "://hi!:100/hi!", 1, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        java.lang.String str14 = uRL13.getUserInfo();
        java.net.URLConnection uRLConnection15 = filteredURLStreamHandler10.openConnection(uRL13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.io.File file20 = explodedArchive19.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive19.entries;
        java.io.File file22 = explodedArchive19.getroot();
        java.util.jar.Manifest manifest23 = explodedArchive19.getManifest();
        java.net.URL uRL24 = explodedArchive19.getUrl();
        java.net.URL uRL26 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str27 = uRL26.getProtocol();
        java.lang.Class[] classArray28 = new java.lang.Class[] {};
        java.lang.Object obj29 = uRL26.getContent(classArray28);
        java.lang.Object obj30 = uRL24.getContent(classArray28);
        java.net.URLConnection uRLConnection31 = filteredURLStreamHandler10.openConnection(uRL24);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL11.toString(), "://hi!:100/hi!://[://hi!:100/hi!]:1://hi!:100");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNotNull(uRL24);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL26.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "file" + "'", str27, "file");
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(uRLConnection31);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getProtocol();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        java.lang.String str15 = fileNotFoundURLConnection14.name;
        boolean boolean16 = fileNotFoundURLConnection14.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        java.net.URL uRL22 = fileNotFoundURLConnection17.getURL();
        java.lang.String str23 = fileNotFoundURLConnection17.name;
        fileNotFoundURLConnection17.setIfModifiedSince((long) (byte) 100);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRL22);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getPath();
        java.lang.String str23 = uRL21.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.util.Set<java.lang.String> strSet33 = explodedArchive32.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getPath();
        java.lang.String str37 = uRL35.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.util.Set<java.lang.String> strSet43 = explodedArchive42.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.net.URL uRL46 = new java.net.URL(uRL21, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str47 = uRL21.getQuery();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive11();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
        java.util.Set<java.lang.String> strSet60 = explodedArchive59.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = null;
        explodedArchive66.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter71.deserializeObjectExplodedArchive11();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file73);
        java.util.Set<java.lang.String> strSet75 = explodedArchive74.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes76 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.io.File file81 = explodedArchive80.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry82 = explodedArchive74.new FileEntry(asciiBytes76, file81);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file84 = serializedObjectSupporter83.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter83.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = serializedObjectSupporter83.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = serializedObjectSupporter83.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest88 = serializedObjectSupporter83.deserializeObjectManifest1();
        java.io.File file89 = serializedObjectSupporter83.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry90 = explodedArchive66.new FileEntry(asciiBytes76, file89);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter91 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry90.serializedObjectSupporter = serializedObjectSupporter91;
        java.io.File file93 = fileEntry90.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter94 = fileEntry90.serializedObjectSupporter;
        filteredURLStreamHandler61.serializedObjectSupporter = serializedObjectSupporter94;
        java.net.URL uRL96 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        boolean boolean97 = uRL21.sameFile(uRL96);
        java.net.URLConnection uRLConnection98 = filteredURLStreamHandler9.openConnection(uRL96);
        java.lang.String str99 = uRL96.getFile();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals(uRL21.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:100" + "'", str23, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals(uRL35.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertEquals(uRL45.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals(uRL62.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(asciiBytes76);
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file81.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNull(explodedArchive87);
        org.junit.Assert.assertNotNull(manifest88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter94);
        org.junit.Assert.assertEquals(uRL96.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(uRLConnection98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str99, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str22 = fileNotFoundURLConnection17.getHeaderField((-1));
        fileNotFoundURLConnection17.addRequestProperty("[hi!:100]:0", "://hi!:100");
        java.lang.String str27 = fileNotFoundURLConnection17.getRequestProperty("/file");
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("", 0L);
        boolean boolean31 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile12();
        java.lang.Class<?> wildcardClass7 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile3();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.HashSet hashSet3 = serializedObjectSupporter0.deserializeObjectSet1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(hashSet3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("://hi!:100/hi!", "://hi!:100/hi!", 1, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getFile();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getPath();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL11.toString(), "://hi!:100/hi!://[://hi!:100/hi!]:1://hi!:100");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "://hi!:100" + "'", str12, "://hi!:100");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "://hi!:100" + "'", str14, "://hi!:100");
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.String str7 = uRL6.getFile();
        int int8 = uRL6.getPort();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        boolean boolean13 = explodedArchive12.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = explodedArchive12.getMANIFEST_ENTRY_NAME();
        java.net.URL uRL15 = explodedArchive12.getUrl();
        java.lang.String str16 = uRL15.getAuthority();
        java.lang.Object obj17 = uRL15.getContent();
        boolean boolean18 = uRL6.sameFile(uRL15);
        java.lang.String str19 = uRL6.toExternalForm();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(asciiBytes14);
        org.junit.Assert.assertNotNull(uRL15);
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str19, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        long long25 = fileNotFoundURLConnection17.getContentLengthLong();
        java.security.Permission permission26 = fileNotFoundURLConnection17.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(permission26);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        java.io.File file34 = fileEntry27.getFile();
        java.io.File file35 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = fileEntry27.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter36);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "[hi!:100]:0", (int) (byte) 0, "[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long25 = fileNotFoundURLConnection17.getExpiration();
        int int28 = fileNotFoundURLConnection17.getHeaderFieldInt("/://hi!:100", (int) (short) 10);
        fileNotFoundURLConnection17.setRequestProperty("", "file:/tmp/junit3853753617501372040/junit897402010941125298");
        boolean boolean32 = fileNotFoundURLConnection17.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        explodedArchive3.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.io.File file15 = explodedArchive14.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive14.entries;
        java.io.File file17 = explodedArchive14.getroot();
        explodedArchive14.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive14.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest27 = serializedObjectSupporter26.deserializeObjectManifest1();
        explodedArchive24.manifest = manifest27;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.util.Set<java.lang.String> strSet33 = explodedArchive32.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive32.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = null;
        explodedArchive32.entries = asciiBytesMap35;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.util.Set<java.lang.String> strSet41 = explodedArchive40.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes42 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive40.new FileEntry(asciiBytes42, file47);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter49.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest54 = serializedObjectSupporter49.deserializeObjectManifest1();
        java.io.File file55 = serializedObjectSupporter49.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry56 = explodedArchive32.new FileEntry(asciiBytes42, file55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        java.io.File file59 = serializedObjectSupporter57.deserializeObjectFile15();
        java.io.File file60 = serializedObjectSupporter57.deserializeObjectFile13();
        java.io.File file61 = serializedObjectSupporter57.deserializeObjectFile9();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive24.new FileEntry(asciiBytes42, file62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive24.entries;
        explodedArchive14.entries = asciiBytesMap64;
        explodedArchive3.entries = asciiBytesMap64;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive3.getEntries();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest27);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(asciiBytes42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(manifest54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file59.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file62.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(entryCollection67);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean25 = fileNotFoundURLConnection17.getUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.HashSet hashSet7 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(hashSet7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file9.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        java.lang.String str9 = fileNotFoundURLConnection4.getRequestProperty("");
        int int10 = fileNotFoundURLConnection4.getConnectTimeout();
        fileNotFoundURLConnection4.setReadTimeout((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream13 = fileNotFoundURLConnection4.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet15 = explodedArchive3.getSKIPPED_NAMES();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive3.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive3.getManifest();
        boolean boolean18 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = explodedArchive3.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getFile();
        java.lang.String str18 = uRL15.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        java.lang.String str27 = fileNotFoundURLConnection17.getname();
        long long28 = fileNotFoundURLConnection17.getDate();
        java.lang.String str29 = fileNotFoundURLConnection17.name;
        java.lang.String str31 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 0);
        java.lang.String str32 = fileNotFoundURLConnection17.getContentEncoding();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setDoInput(true);
        boolean boolean11 = fileNotFoundURLConnection4.getAllowUserInteraction();
        fileNotFoundURLConnection4.setConnectTimeout(10);
        long long16 = fileNotFoundURLConnection4.getHeaderFieldDate("hi!:100", 32L);
        java.net.URL uRL17 = fileNotFoundURLConnection4.getURL();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap18 = fileNotFoundURLConnection4.getHeaderFields();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(uRL17);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long25 = fileNotFoundURLConnection17.getContentLengthLong();
        long long28 = fileNotFoundURLConnection17.getHeaderFieldDate("/hi!", (long) 'a');
        java.lang.String str29 = fileNotFoundURLConnection17.getContentType();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap30 = fileNotFoundURLConnection17.getRequestProperties();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 97L + "'", long28 == 97L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        fileNotFoundURLConnection17.setUseCaches(false);
        boolean boolean26 = fileNotFoundURLConnection17.getDoOutput();
        boolean boolean27 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL28 = fileNotFoundURLConnection17.getURL();
        int int29 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setDoOutput(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(uRL28);
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        fileNotFoundURLConnection17.setUseCaches(true);
        fileNotFoundURLConnection17.setRequestProperty("hi!:100", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        boolean boolean31 = fileNotFoundURLConnection17.getDefaultUseCaches();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream32 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.HashSet hashSet3 = serializedObjectSupporter0.deserializeObjectSet1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(hashSet3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive7();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter8.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter8.deserializeObjectExplodedArchive6();
        java.io.File file16 = serializedObjectSupporter8.deserializeObjectFile11();
        java.io.File file17 = serializedObjectSupporter8.deserializeObjectFile12();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter8;
        java.io.File file19 = serializedObjectSupporter8.deserializeObjectFile2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter8.deserializeObjectExplodedArchive1();
        java.io.File file21 = serializedObjectSupporter8.deserializeObjectFile1();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file21.toString(), "src/test/resources/root");
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str32 = fileNotFoundURLConnection17.toString();
        boolean boolean33 = fileNotFoundURLConnection17.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str32, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        fileNotFoundURLConnection17.setConnectTimeout((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream23 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getDoInput();
        java.net.URL uRL27 = fileNotFoundURLConnection17.getURL();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.util.Set<java.lang.String> strSet36 = explodedArchive35.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getProtocol();
        java.lang.String str40 = uRL38.getUserInfo();
        boolean boolean41 = uRL27.sameFile(uRL38);
        java.lang.String str42 = uRL38.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(uRL27);
        org.junit.Assert.assertEquals(uRL27.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals(uRL38.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile2();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.util.HashSet hashSet7 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(hashSet7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive11);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100", 10, "[file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        java.lang.String str32 = uRL30.toExternalForm();
        boolean boolean33 = uRL15.sameFile(uRL30);
        java.net.URL uRL35 = new java.net.URL(uRL30, "hi!:100");
        java.lang.String str36 = uRL35.getPath();
        int int37 = uRL35.getDefaultPort();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals(uRL35.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!:100" + "'", str36, "/hi!:100");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive3.getEntries();
        java.net.URL uRL62 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive3.getNestedArchives(entryFilter63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(uRL62);
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setConnectTimeout(0);
        long long24 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        long long28 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean29 = fileNotFoundURLConnection17.getDoInput();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = fileNotFoundURLConnection17.serializedObjectSupporter;
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.io.File file9 = explodedArchive8.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap10);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        boolean boolean16 = explodedArchive15.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile14();
        java.io.File file23 = serializedObjectSupporter20.deserializeObjectFile11();
        java.io.File file24 = serializedObjectSupporter20.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive11.new FileEntry(asciiBytes19, file24);
        java.io.File file26 = explodedArchive11.getroot();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asciiBytes17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(asciiBytes19);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.net.URL uRL4 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.util.Set<java.lang.String> strSet13 = explodedArchive12.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.lang.String str16 = uRL15.getPath();
        java.lang.String str17 = uRL15.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getPath();
        java.lang.String str31 = uRL29.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.util.Set<java.lang.String> strSet37 = explodedArchive36.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL15, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str41 = uRL15.getQuery();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter57.deserializeObjectExplodedArchive11();
        java.io.File file59 = serializedObjectSupporter57.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file59);
        java.util.Set<java.lang.String> strSet61 = explodedArchive60.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive60.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = null;
        explodedArchive60.entries = asciiBytesMap63;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter65.deserializeObjectExplodedArchive11();
        java.io.File file67 = serializedObjectSupporter65.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file67);
        java.util.Set<java.lang.String> strSet69 = explodedArchive68.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes70 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter71.deserializeObjectExplodedArchive11();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file73);
        java.io.File file75 = explodedArchive74.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry76 = explodedArchive68.new FileEntry(asciiBytes70, file75);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file78 = serializedObjectSupporter77.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = serializedObjectSupporter77.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = serializedObjectSupporter77.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = serializedObjectSupporter77.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest82 = serializedObjectSupporter77.deserializeObjectManifest1();
        java.io.File file83 = serializedObjectSupporter77.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry84 = explodedArchive60.new FileEntry(asciiBytes70, file83);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter85 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry84.serializedObjectSupporter = serializedObjectSupporter85;
        java.io.File file87 = fileEntry84.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter88 = fileEntry84.serializedObjectSupporter;
        filteredURLStreamHandler55.serializedObjectSupporter = serializedObjectSupporter88;
        java.net.URL uRL90 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        boolean boolean91 = uRL15.sameFile(uRL90);
        java.net.URL uRL93 = new java.net.URL(uRL90, "hi!");
        boolean boolean94 = uRL4.sameFile(uRL93);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(uRL4);
        org.junit.Assert.assertEquals(uRL4.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:100" + "'", str17, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals(uRL29.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals(uRL39.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file67.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(asciiBytes70);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive79);
        org.junit.Assert.assertNull(explodedArchive80);
        org.junit.Assert.assertNull(explodedArchive81);
        org.junit.Assert.assertNotNull(manifest82);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter88);
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals(uRL93.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive11();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
        java.util.Set<java.lang.String> strSet60 = explodedArchive59.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = null;
        explodedArchive66.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter71.deserializeObjectExplodedArchive11();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file73);
        java.util.Set<java.lang.String> strSet75 = explodedArchive74.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes76 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.io.File file81 = explodedArchive80.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry82 = explodedArchive74.new FileEntry(asciiBytes76, file81);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file84 = serializedObjectSupporter83.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter83.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = serializedObjectSupporter83.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = serializedObjectSupporter83.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest88 = serializedObjectSupporter83.deserializeObjectManifest1();
        java.io.File file89 = serializedObjectSupporter83.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry90 = explodedArchive66.new FileEntry(asciiBytes76, file89);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter91 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry90.serializedObjectSupporter = serializedObjectSupporter91;
        java.io.File file93 = fileEntry90.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter94 = fileEntry90.serializedObjectSupporter;
        filteredURLStreamHandler61.serializedObjectSupporter = serializedObjectSupporter94;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter96 = filteredURLStreamHandler61.serializedObjectSupporter;
        java.net.URL uRL97 = new java.net.URL(uRL22, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection99 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals(uRL62.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(asciiBytes76);
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file81.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNull(explodedArchive87);
        org.junit.Assert.assertNotNull(manifest88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter94);
        org.junit.Assert.assertNotNull(serializedObjectSupporter96);
        org.junit.Assert.assertEquals(uRL97.toString(), "://hi!:100/://hi!:100");
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.HashSet hashSet3 = serializedObjectSupporter0.deserializeObjectSet1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile3();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(hashSet3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.util.HashSet hashSet8 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(hashSet8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        fileNotFoundURLConnection17.setUseCaches(false);
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((-1));
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.util.Set<java.lang.String> strSet37 = explodedArchive36.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive36.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = null;
        explodedArchive36.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes46 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter47.deserializeObjectExplodedArchive11();
        java.io.File file49 = serializedObjectSupporter47.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file49);
        java.io.File file51 = explodedArchive50.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive44.new FileEntry(asciiBytes46, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter53.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter53.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter53.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest58 = serializedObjectSupporter53.deserializeObjectManifest1();
        java.io.File file59 = serializedObjectSupporter53.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive36.new FileEntry(asciiBytes46, file59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry60.serializedObjectSupporter = serializedObjectSupporter61;
        java.io.File file63 = fileEntry60.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter64 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter64.deserializeObjectExplodedArchive11();
        java.io.File file66 = serializedObjectSupporter64.deserializeObjectFile6();
        fileEntry60.serializedObjectSupporter = serializedObjectSupporter64;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes68 = fileEntry60.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter69.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter69.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest74 = serializedObjectSupporter69.deserializeObjectManifest1();
        java.util.jar.Manifest manifest75 = serializedObjectSupporter69.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter69.deserializeObjectExplodedArchive5();
        java.io.File file77 = serializedObjectSupporter69.deserializeObjectFile6();
        fileEntry60.serializedObjectSupporter = serializedObjectSupporter69;
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter69;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = fileEntry27.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(asciiBytes46);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(manifest58);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNotNull(manifest74);
        org.junit.Assert.assertNotNull(manifest75);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter80);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file8 = serializedObjectSupporter7.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter7.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter7.deserializeObjectExplodedArchive12();
        java.io.File file12 = serializedObjectSupporter7.deserializeObjectFile6();
        java.io.File file13 = serializedObjectSupporter7.deserializeObjectFile16();
        java.io.File file14 = serializedObjectSupporter7.deserializeObjectFile6();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter7;
        java.io.File file16 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file11 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file12 = serializedObjectSupporter0.deserializeObjectFile10();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str22 = fileNotFoundURLConnection17.getHeaderField((-1));
        boolean boolean23 = fileNotFoundURLConnection17.getDefaultUseCaches();
        int int24 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getUserInfo();
        java.lang.String str14 = uRL10.getAuthority();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:100" + "'", str14, "hi!:100");
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        long long27 = fileNotFoundURLConnection17.getDate();
        java.lang.String str29 = fileNotFoundURLConnection17.getHeaderFieldKey(1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet31 = explodedArchive3.getSKIPPED_NAMES();
        explodedArchive3.filtered = true;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter34.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter34.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter34.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter34.deserializeObjectExplodedArchive15();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter34.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter34.deserializeObjectFile7();
        java.io.File file42 = serializedObjectSupporter34.deserializeObjectFile11();
        java.io.File file43 = serializedObjectSupporter34.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter34.deserializeObjectExplodedArchive10();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter34;
        java.io.File file46 = serializedObjectSupporter34.deserializeObjectFile7();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file46.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.net.URL uRL4 = explodedArchive3.getUrl();
        java.io.File file5 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(uRL4);
        org.junit.Assert.assertEquals(uRL4.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        explodedArchive3.filtered = false;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "");
        fileNotFoundURLConnection51.setReadTimeout(0);
        boolean boolean54 = fileNotFoundURLConnection51.getUseCaches();
        int int57 = fileNotFoundURLConnection51.getHeaderFieldInt("file", 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "src/test/resources/root");
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getDoInput();
        fileNotFoundURLConnection17.setDoOutput(false);
        java.security.Permission permission29 = fileNotFoundURLConnection17.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(permission29);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.net.URL uRL4 = explodedArchive3.getUrl();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.util.Set<java.lang.String> strSet11 = explodedArchive10.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = null;
        explodedArchive10.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive18.new FileEntry(asciiBytes20, file25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file28 = serializedObjectSupporter27.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter27.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter27.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter27.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest32 = serializedObjectSupporter27.deserializeObjectManifest1();
        java.io.File file33 = serializedObjectSupporter27.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive10.new FileEntry(asciiBytes20, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry34.serializedObjectSupporter = serializedObjectSupporter35;
        java.io.File file37 = fileEntry34.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile6();
        fileEntry34.serializedObjectSupporter = serializedObjectSupporter38;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes42 = fileEntry34.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.util.jar.Manifest manifest49 = serializedObjectSupporter43.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        java.io.File file51 = serializedObjectSupporter43.deserializeObjectFile6();
        fileEntry34.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file53 = fileEntry34.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive54 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(uRL4);
        org.junit.Assert.assertEquals(uRL4.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(asciiBytes20);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(manifest32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(manifest49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(manifest6);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.String str7 = uRL6.getFile();
        java.net.URLConnection uRLConnection8 = uRL6.openConnection();
        java.lang.String str10 = uRLConnection8.getHeaderField("hi!:100");
        int int13 = uRLConnection8.getHeaderFieldInt("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (-1));
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap14 = uRLConnection8.getRequestProperties();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Already connected");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRLConnection8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        boolean boolean32 = fileNotFoundURLConnection17.getDoInput();
        long long33 = fileNotFoundURLConnection17.getIfModifiedSince();
        int int34 = fileNotFoundURLConnection17.getContentLength();
        boolean boolean35 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getPath();
        java.lang.String str30 = uRL28.getUserInfo();
        java.lang.String str31 = uRL28.getHost();
        java.net.URL uRL33 = new java.net.URL(uRL28, "hi!");
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getHost();
        java.net.URL uRL37 = new java.net.URL(uRL33, "hi!:100");
        boolean boolean38 = uRL10.sameFile(uRL37);
        int int39 = uRL10.getDefaultPort();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str7 = explodedArchive3.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest10;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(manifest10);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.io.File file9 = explodedArchive8.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap10);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        boolean boolean16 = explodedArchive15.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile14();
        java.io.File file23 = serializedObjectSupporter20.deserializeObjectFile11();
        java.io.File file24 = serializedObjectSupporter20.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive11.new FileEntry(asciiBytes19, file24);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive11.new FilteredURLStreamHandler();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asciiBytes17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(asciiBytes19);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile3();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        int int16 = uRL15.getDefaultPort();
        java.lang.String str17 = uRL15.getAuthority();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:100" + "'", str17, "hi!:100");
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        java.net.URL uRL30 = fileNotFoundURLConnection17.getURL();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertNotNull(uRL30);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("", 35L);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile2();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.HashSet hashSet3 = serializedObjectSupporter0.deserializeObjectSet1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile9();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(hashSet3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive23.new FileEntry(asciiBytes25, file30);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter32.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter32.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest37 = serializedObjectSupporter32.deserializeObjectManifest1();
        java.io.File file38 = serializedObjectSupporter32.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive15.new FileEntry(asciiBytes25, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile15();
        java.io.File file43 = serializedObjectSupporter40.deserializeObjectFile13();
        java.io.File file44 = serializedObjectSupporter40.deserializeObjectFile9();
        java.io.File file45 = serializedObjectSupporter40.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive7.new FileEntry(asciiBytes25, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes25, file48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive3.entries;
        java.util.jar.Manifest manifest51 = explodedArchive3.manifest;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(asciiBytes25);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(manifest37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file42.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNull(manifest51);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile10();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        java.io.File file60 = serializedObjectSupporter58.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file60);
        java.util.Set<java.lang.String> strSet62 = explodedArchive61.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getPath();
        java.lang.String str66 = uRL64.getUserInfo();
        java.lang.String str67 = uRL64.getHost();
        java.net.URL uRL69 = new java.net.URL(uRL64, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter74 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter74.deserializeObjectExplodedArchive11();
        java.io.File file76 = serializedObjectSupporter74.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file76);
        java.util.Set<java.lang.String> strSet78 = explodedArchive77.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str81 = uRL80.getPath();
        java.lang.String str82 = uRL80.getUserInfo();
        java.lang.String str83 = uRL80.getHost();
        java.net.URL uRL85 = new java.net.URL(uRL80, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection87 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL80, "hi!");
        boolean boolean88 = uRL69.sameFile(uRL80);
        boolean boolean89 = uRL22.sameFile(uRL69);
        java.lang.String str90 = uRL69.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = uRL69.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertEquals(uRL64.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file76.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertEquals(uRL80.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "://hi!:100/hi!" + "'", str90, "://hi!:100/hi!");
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter84 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter84.deserializeObjectExplodedArchive11();
        java.io.File file86 = serializedObjectSupporter84.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file86);
        boolean boolean88 = explodedArchive87.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes89 = explodedArchive87.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes90 = explodedArchive87.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter91 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file92 = serializedObjectSupporter91.deserializeObjectFile8();
        java.io.File file93 = serializedObjectSupporter91.deserializeObjectFile5();
        java.io.File file94 = serializedObjectSupporter91.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry95 = explodedArchive83.new FileEntry(asciiBytes90, file94);
        java.io.File file96 = fileEntry95.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes97 = fileEntry95.name;
        java.io.File file98 = fileEntry95.file;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file86.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(asciiBytes89);
        org.junit.Assert.assertNotNull(asciiBytes90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file93.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(file94);
        org.junit.Assert.assertEquals(file94.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file94.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file96.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes97);
        org.junit.Assert.assertNotNull(file98);
        org.junit.Assert.assertEquals(file98.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file98.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file13 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest7 = explodedArchive3.getManifest();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(manifest7);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.io.File file7 = explodedArchive3.getroot();
        java.io.File file8 = explodedArchive3.getroot();
        java.net.URL uRL9 = explodedArchive3.getUrl();
        int int10 = uRL9.getPort();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(uRL9);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getDoInput();
        int int27 = fileNotFoundURLConnection17.getReadTimeout();
        fileNotFoundURLConnection17.setDoInput(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        long long25 = fileNotFoundURLConnection17.getContentLengthLong();
        long long26 = fileNotFoundURLConnection17.getIfModifiedSince();
        fileNotFoundURLConnection17.setConnectTimeout(100);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream29 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        long long10 = fileNotFoundURLConnection4.getHeaderFieldLong("hi!", (long) '#');
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = fileNotFoundURLConnection4.serializedObjectSupporter;
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 35L + "'", long10 == 35L);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        java.io.File file53 = serializedObjectSupporter49.deserializeObjectFile9();
        java.io.File file54 = serializedObjectSupporter49.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter49.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter49;
        java.net.URL uRL57 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertEquals(uRL57.toString(), "file://hi!:100file");
        org.junit.Assert.assertNotNull(serializedObjectSupporter58);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.io.File file13 = explodedArchive12.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap14);
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        java.net.URL uRL48 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str49 = uRL48.getAuthority();
        java.lang.String str50 = uRL48.getRef();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!:100]:0" + "'", str49, "[hi!:100]:0");
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.getname();
        fileNotFoundURLConnection17.setUseCaches(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.net.URL uRL6 = new java.net.URL(uRL1, "file");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        java.net.URL uRL56 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        java.io.File file63 = serializedObjectSupporter58.deserializeObjectFile7();
        java.util.jar.Manifest manifest64 = serializedObjectSupporter58.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter58.deserializeObjectExplodedArchive12();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter58;
        java.net.URL uRL68 = new java.net.URL(uRL6, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter69.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter69.deserializeObjectExplodedArchive2();
        java.io.File file74 = serializedObjectSupporter69.deserializeObjectFile11();
        java.io.File file75 = serializedObjectSupporter69.deserializeObjectFile4();
        java.io.File file76 = serializedObjectSupporter69.deserializeObjectFile1();
        java.io.File file77 = serializedObjectSupporter69.deserializeObjectFile14();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = serializedObjectSupporter69.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/file");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(serializedObjectSupporter57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(manifest64);
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertEquals(uRL68.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file76.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive79);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "");
        int int52 = fileNotFoundURLConnection51.getReadTimeout();
        java.security.Permission permission53 = fileNotFoundURLConnection51.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(permission53);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        long long31 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", 0L);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap32 = fileNotFoundURLConnection17.getHeaderFields();
        long long33 = fileNotFoundURLConnection17.getLastModified();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        fileNotFoundURLConnection17.setUseCaches(false);
        boolean boolean26 = fileNotFoundURLConnection17.getDoOutput();
        boolean boolean27 = fileNotFoundURLConnection17.getUseCaches();
        java.lang.String str29 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 100);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet31 = explodedArchive3.getSKIPPED_NAMES();
        explodedArchive3.filtered = true;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = null;
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter34;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive3.getNestedArchives(entryFilter36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(strSet31);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean26 = fileNotFoundURLConnection17.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getProtocol();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        java.lang.String str15 = fileNotFoundURLConnection14.name;
        boolean boolean16 = fileNotFoundURLConnection14.getUseCaches();
        fileNotFoundURLConnection14.setDoInput(true);
        fileNotFoundURLConnection14.setIfModifiedSince((long) (short) 10);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        java.lang.String str32 = uRL31.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.util.Set<java.lang.String> strSet49 = explodedArchive48.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = null;
        explodedArchive48.entries = asciiBytesMap51;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter53.deserializeObjectExplodedArchive11();
        java.io.File file55 = serializedObjectSupporter53.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file55);
        java.util.Set<java.lang.String> strSet57 = explodedArchive56.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes58 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter59.deserializeObjectExplodedArchive11();
        java.io.File file61 = serializedObjectSupporter59.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file61);
        java.io.File file63 = explodedArchive62.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry64 = explodedArchive56.new FileEntry(asciiBytes58, file63);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter65.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest70 = serializedObjectSupporter65.deserializeObjectManifest1();
        java.io.File file71 = serializedObjectSupporter65.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive48.new FileEntry(asciiBytes58, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry72.serializedObjectSupporter = serializedObjectSupporter73;
        java.io.File file75 = fileEntry72.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = fileEntry72.serializedObjectSupporter;
        filteredURLStreamHandler43.serializedObjectSupporter = serializedObjectSupporter76;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter78 = filteredURLStreamHandler43.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter79 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file80 = serializedObjectSupporter79.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = serializedObjectSupporter79.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = serializedObjectSupporter79.deserializeObjectExplodedArchive14();
        java.io.File file83 = serializedObjectSupporter79.deserializeObjectFile9();
        java.io.File file84 = serializedObjectSupporter79.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter79.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler43.serializedObjectSupporter = serializedObjectSupporter79;
        java.net.URL uRL87 = new java.net.URL(uRL31, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str88 = uRL87.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:100" + "'", str32, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals(uRL44.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(asciiBytes58);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNotNull(manifest70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter76);
        org.junit.Assert.assertNotNull(serializedObjectSupporter78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive81);
        org.junit.Assert.assertNull(explodedArchive82);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file83.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertEquals(uRL87.toString(), "://hi!:100/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "://hi!:100/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str88, "://hi!:100/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        java.lang.String str29 = fileNotFoundURLConnection17.getContentEncoding();
        boolean boolean30 = fileNotFoundURLConnection17.getDoOutput();
        java.lang.String str32 = fileNotFoundURLConnection17.getRequestProperty("://hi!:100");
        fileNotFoundURLConnection17.setRequestProperty("file", "");
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        java.lang.String str39 = fileNotFoundURLConnection17.getHeaderField("/://hi!:100");
        long long40 = fileNotFoundURLConnection17.getContentLengthLong();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        long long33 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100", 0L);
        fileNotFoundURLConnection17.setDoInput(true);
        long long38 = fileNotFoundURLConnection17.getHeaderFieldLong("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 35L);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 35L + "'", long38 == 35L);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        fileNotFoundURLConnection17.setUseCaches(false);
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str28 = fileNotFoundURLConnection17.getContentEncoding();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "[://hi!:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: [://hi!:100/hi!]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        java.net.URL uRL48 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file51 = serializedObjectSupporter50.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter50.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter50.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter50.deserializeObjectExplodedArchive14();
        java.io.File file55 = serializedObjectSupporter50.deserializeObjectFile7();
        java.util.jar.Manifest manifest56 = serializedObjectSupporter50.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter50.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter50.deserializeObjectExplodedArchive12();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter60.deserializeObjectExplodedArchive11();
        java.io.File file62 = serializedObjectSupporter60.deserializeObjectFile14();
        java.io.File file63 = serializedObjectSupporter60.deserializeObjectFile11();
        java.io.File file64 = serializedObjectSupporter60.deserializeObjectFile11();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter60;
        java.io.File file66 = serializedObjectSupporter60.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(serializedObjectSupporter49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file55.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(manifest56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        fileNotFoundURLConnection17.setUseCaches(false);
        boolean boolean26 = fileNotFoundURLConnection17.getDoOutput();
        fileNotFoundURLConnection17.setRequestProperty("://hi!:100/hi!", "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        long long32 = fileNotFoundURLConnection17.getHeaderFieldDate("://hi!:100", (-1L));
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile6();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter31;
        java.io.File file35 = fileEntry27.getFile();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        long long25 = fileNotFoundURLConnection17.getContentLengthLong();
        long long26 = fileNotFoundURLConnection17.getIfModifiedSince();
        int int29 = fileNotFoundURLConnection17.getHeaderFieldInt("", 0);
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        java.io.File file26 = serializedObjectSupporter21.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter21.deserializeObjectExplodedArchive16();
        java.io.File file28 = serializedObjectSupporter21.deserializeObjectFile16();
        java.io.File file29 = serializedObjectSupporter21.deserializeObjectFile12();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getRef();
        int int17 = uRL15.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL15, "");
        java.lang.String str20 = uRL15.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI21 = uRL15.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive7.new FileEntry(asciiBytes9, file14);
        explodedArchive7.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive7.entries;
        java.util.Set<java.lang.String> strSet19 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = explodedArchive7.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive8();
        explodedArchive7.serializedObjectSupporter = serializedObjectSupporter21;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter27.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter27.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter27.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter27.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter27.deserializeObjectExplodedArchive12();
        java.io.File file34 = serializedObjectSupporter27.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter27.deserializeObjectExplodedArchive8();
        java.io.File file36 = serializedObjectSupporter27.deserializeObjectFile5();
        explodedArchive26.serializedObjectSupporter = serializedObjectSupporter27;
        boolean boolean38 = explodedArchive26.filtered;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(asciiBytes9);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file34.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = explodedArchive3.serializedObjectSupporter;
        java.lang.String str63 = explodedArchive3.toString();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter65.deserializeObjectExplodedArchive2();
        java.io.File file70 = serializedObjectSupporter65.deserializeObjectFile11();
        java.io.File file71 = serializedObjectSupporter65.deserializeObjectFile4();
        java.io.File file72 = serializedObjectSupporter65.deserializeObjectFile1();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter65;
        java.io.File file74 = serializedObjectSupporter65.deserializeObjectFile10();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str63, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file72.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file8.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        java.io.File file0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile5();
        java.util.HashSet hashSet6 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile14();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(hashSet6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.io.File file5 = explodedArchive3.getroot();
        java.util.jar.Manifest manifest6 = explodedArchive3.getManifest();
        java.io.File file7 = explodedArchive3.root;
        explodedArchive3.filtered = true;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        java.util.Set<java.lang.String> strSet41 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest47 = serializedObjectSupporter42.deserializeObjectManifest1();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter42.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter42.deserializeObjectExplodedArchive5();
        java.io.File file50 = serializedObjectSupporter42.deserializeObjectFile2();
        java.util.jar.Manifest manifest51 = serializedObjectSupporter42.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest51;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive3.getNestedArchives(entryFilter53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(manifest47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(manifest51);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL32, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL20, "file", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getUserInfo();
        java.lang.String str72 = uRL69.getHost();
        java.net.URL uRL74 = new java.net.URL(uRL69, "hi!");
        java.lang.String str75 = uRL74.getRef();
        java.net.URL uRL77 = new java.net.URL(uRL74, "");
        boolean boolean78 = uRL20.sameFile(uRL74);
        java.lang.String str79 = uRL74.getAuthority();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:100" + "'", str34, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL58.toString(), "://hi!:100/file");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals(uRL74.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals(uRL77.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!:100" + "'", str79, "hi!:100");
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        fileNotFoundURLConnection17.setUseCaches(true);
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setDoInput(true);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile7();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive8();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter31;
        fileNotFoundURLConnection17.setDoInput(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.io.File file6 = explodedArchive3.root;
        java.util.jar.Manifest manifest7 = explodedArchive3.manifest;
        java.util.jar.Manifest manifest8 = explodedArchive3.manifest;
        java.io.File file9 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.net.URL uRL6 = new java.net.URL(uRL1, "file");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL6, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream9 = fileNotFoundURLConnection8.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/file");
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.net.URL uRL32 = fileNotFoundURLConnection17.getURL();
        int int33 = uRL32.getPort();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertNotNull(uRL32);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }
}
