import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField("hi!");
        long long28 = fileNotFoundURLConnection17.getContentLengthLong();
        fileNotFoundURLConnection17.setDoOutput(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile15();
        java.io.File file46 = serializedObjectSupporter43.deserializeObjectFile13();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile9();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive10.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive53.entries;
        explodedArchive10.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter58.deserializeObjectExplodedArchive10();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile1();
        explodedArchive57.serializedObjectSupporter = serializedObjectSupporter58;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file64.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive66);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        java.io.File file45 = serializedObjectSupporter42.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.setReadTimeout((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: timeout can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setUseCaches(true);
        boolean boolean24 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.setConnectTimeout((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: timeout can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile13();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile6();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter31;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = fileEntry27.getName();
        java.io.File file36 = fileEntry27.file;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL25 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str26 = uRL25.getAuthority();
        boolean boolean27 = uRL23.sameFile(uRL25);
        java.lang.String str28 = uRL25.getHost();
        int int29 = uRL25.getPort();
        java.net.Proxy proxy30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection31 = uRL25.openConnection(proxy30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.io.File file9 = explodedArchive8.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest11 = serializedObjectSupporter10.deserializeObjectManifest1();
        explodedArchive8.manifest = manifest11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.util.Set<java.lang.String> strSet17 = explodedArchive16.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive16.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = null;
        explodedArchive16.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.util.Set<java.lang.String> strSet25 = explodedArchive24.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.io.File file31 = explodedArchive30.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive24.new FileEntry(asciiBytes26, file31);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file34 = serializedObjectSupporter33.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter33.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter33.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter33.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter33.deserializeObjectManifest1();
        java.io.File file39 = serializedObjectSupporter33.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive16.new FileEntry(asciiBytes26, file39);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file42 = serializedObjectSupporter41.deserializeObjectFile8();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile15();
        java.io.File file44 = serializedObjectSupporter41.deserializeObjectFile13();
        java.io.File file45 = serializedObjectSupporter41.deserializeObjectFile9();
        java.io.File file46 = serializedObjectSupporter41.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive8.new FileEntry(asciiBytes26, file46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = null;
        explodedArchive53.entries = asciiBytesMap56;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        java.io.File file60 = serializedObjectSupporter58.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file60);
        java.util.Set<java.lang.String> strSet62 = explodedArchive61.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes63 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter64 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter64.deserializeObjectExplodedArchive11();
        java.io.File file66 = serializedObjectSupporter64.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file66);
        java.io.File file68 = explodedArchive67.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry69 = explodedArchive61.new FileEntry(asciiBytes63, file68);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter70 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file71 = serializedObjectSupporter70.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter70.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter70.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter70.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest75 = serializedObjectSupporter70.deserializeObjectManifest1();
        java.io.File file76 = serializedObjectSupporter70.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry77 = explodedArchive53.new FileEntry(asciiBytes63, file76);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter78 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry77.serializedObjectSupporter = serializedObjectSupporter78;
        java.io.File file80 = fileEntry77.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes81 = fileEntry77.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter82 = fileEntry77.serializedObjectSupporter;
        java.io.File file83 = fileEntry77.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes84 = fileEntry77.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive85 = explodedArchive49.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(asciiBytes26);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file43.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file46.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(asciiBytes63);
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNotNull(manifest75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes81);
        org.junit.Assert.assertNotNull(serializedObjectSupporter82);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes84);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.io.File file39 = explodedArchive38.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest41 = serializedObjectSupporter40.deserializeObjectManifest1();
        explodedArchive38.manifest = manifest41;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive46.entries;
        explodedArchive38.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = null;
        explodedArchive53.entries = asciiBytesMap56;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        java.io.File file60 = serializedObjectSupporter58.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file60);
        java.util.Set<java.lang.String> strSet62 = explodedArchive61.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes63 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter64 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter64.deserializeObjectExplodedArchive11();
        java.io.File file66 = serializedObjectSupporter64.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file66);
        java.io.File file68 = explodedArchive67.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry69 = explodedArchive61.new FileEntry(asciiBytes63, file68);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter70 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file71 = serializedObjectSupporter70.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter70.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter70.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter70.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest75 = serializedObjectSupporter70.deserializeObjectManifest1();
        java.io.File file76 = serializedObjectSupporter70.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry77 = explodedArchive53.new FileEntry(asciiBytes63, file76);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter78 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = serializedObjectSupporter78.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = serializedObjectSupporter78.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = serializedObjectSupporter78.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = serializedObjectSupporter78.deserializeObjectExplodedArchive7();
        java.io.File file83 = serializedObjectSupporter78.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry84 = explodedArchive38.new FileEntry(asciiBytes63, file83);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap85 = explodedArchive38.entries;
        boolean boolean86 = uRL15.equals((java.lang.Object) asciiBytesMap85);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest41);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(asciiBytes63);
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNotNull(manifest75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive79);
        org.junit.Assert.assertNull(explodedArchive80);
        org.junit.Assert.assertNull(explodedArchive81);
        org.junit.Assert.assertNull(explodedArchive82);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file83.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(asciiBytesMap85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        fileNotFoundURLConnection4.setDoOutput(false);
        long long12 = fileNotFoundURLConnection4.getHeaderFieldLong("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) (short) 10);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderFieldKey(0);
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) '#');
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        long long35 = fileNotFoundURLConnection17.getIfModifiedSince();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        fileNotFoundURLConnection4.setDoOutput(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream10 = fileNotFoundURLConnection4.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "/://hi!:100", 1, "hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: org.springframework.boot.loader.archive.explodedarchive$filenotfoundurlconnection:file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL10, "");
        java.lang.String str18 = uRL10.getRef();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        java.net.URL uRL48 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str49 = uRL48.getAuthority();
        int int50 = uRL48.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = uRL48.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!:100]:0" + "'", str49, "[hi!:100]:0");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter7.deserializeObjectExplodedArchive1();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest18 = serializedObjectSupporter17.deserializeObjectManifest1();
        explodedArchive15.manifest = manifest18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = null;
        explodedArchive23.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.io.File file38 = explodedArchive37.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive31.new FileEntry(asciiBytes33, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter40.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter40.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter40.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest45 = serializedObjectSupporter40.deserializeObjectManifest1();
        java.io.File file46 = serializedObjectSupporter40.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive23.new FileEntry(asciiBytes33, file46);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file49 = serializedObjectSupporter48.deserializeObjectFile8();
        java.io.File file50 = serializedObjectSupporter48.deserializeObjectFile15();
        java.io.File file51 = serializedObjectSupporter48.deserializeObjectFile13();
        java.io.File file52 = serializedObjectSupporter48.deserializeObjectFile9();
        java.io.File file53 = serializedObjectSupporter48.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive15.new FileEntry(asciiBytes33, file53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        java.io.File file58 = explodedArchive57.getroot();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes59 = explodedArchive57.getMANIFEST_ENTRY_NAME();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = explodedArchive57.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file11.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(manifest45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file50.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file53.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes59);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "");
        long long54 = fileNotFoundURLConnection51.getHeaderFieldLong("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", (long) (short) -1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str26 = fileNotFoundURLConnection17.getContentType();
        long long27 = fileNotFoundURLConnection17.getLastModified();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = fileNotFoundURLConnection17.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.jar.Manifest manifest14 = explodedArchive3.manifest;
        java.io.File file15 = explodedArchive3.root;
        java.io.File file16 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive7();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter8.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter8.deserializeObjectExplodedArchive6();
        java.io.File file16 = serializedObjectSupporter8.deserializeObjectFile11();
        java.io.File file17 = serializedObjectSupporter8.deserializeObjectFile12();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter8;
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream19 = fileNotFoundURLConnection4.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        int int26 = fileNotFoundURLConnection17.getReadTimeout();
        java.lang.String str27 = fileNotFoundURLConnection17.name;
        java.lang.String str28 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str30 = fileNotFoundURLConnection17.getHeaderField("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive12();
        java.util.HashSet hashSet45 = serializedObjectSupporter42.deserializeObjectSet1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(hashSet45);
        org.junit.Assert.assertNull(explodedArchive46);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        fileNotFoundURLConnection17.setUseCaches(true);
        fileNotFoundURLConnection17.setDoOutput(true);
        int int29 = fileNotFoundURLConnection17.getContentLength();
        int int30 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str32 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (short) 100);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive3.getEntries();
        java.util.Set<java.lang.String> strSet16 = explodedArchive3.getSKIPPED_NAMES();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setIfModifiedSince(0L);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        java.lang.String str18 = uRL15.getAuthority();
        java.lang.String str19 = uRL15.getQuery();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:100" + "'", str18, "hi!:100");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter84 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter84.deserializeObjectExplodedArchive11();
        java.io.File file86 = serializedObjectSupporter84.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file86);
        boolean boolean88 = explodedArchive87.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes89 = explodedArchive87.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes90 = explodedArchive87.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter91 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file92 = serializedObjectSupporter91.deserializeObjectFile8();
        java.io.File file93 = serializedObjectSupporter91.deserializeObjectFile5();
        java.io.File file94 = serializedObjectSupporter91.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry95 = explodedArchive83.new FileEntry(asciiBytes90, file94);
        java.io.File file96 = fileEntry95.file;
        java.io.File file97 = fileEntry95.getFile();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file86.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(asciiBytes89);
        org.junit.Assert.assertNotNull(asciiBytes90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file93.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(file94);
        org.junit.Assert.assertEquals(file94.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file94.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file96.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file97);
        org.junit.Assert.assertEquals(file97.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file97.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        java.lang.String str35 = uRL26.getUserInfo();
        java.net.Proxy proxy36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection37 = uRL26.openConnection(proxy36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        int int21 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setUseCaches(true);
        long long24 = fileNotFoundURLConnection17.getContentLengthLong();
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive4);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        java.net.URL uRL22 = fileNotFoundURLConnection17.getURL();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI23 = uRL22.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRL22);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = filteredURLStreamHandler17.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter53.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter53.deserializeObjectExplodedArchive14();
        java.io.File file57 = serializedObjectSupporter53.deserializeObjectFile9();
        java.io.File file58 = serializedObjectSupporter53.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter53.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter53;
        java.net.URL uRL61 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL62 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.lang.String str63 = uRL62.getHost();
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertEquals(uRL61.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL62.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[://hi!:100/hi!]" + "'", str63, "[://hi!:100/hi!]");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        java.net.URL uRL8 = fileNotFoundURLConnection4.getURL();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream9 = fileNotFoundURLConnection4.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str7 = explodedArchive3.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        fileNotFoundURLConnection4.setIfModifiedSince((-1L));
        java.net.URL uRL9 = fileNotFoundURLConnection4.getURL();
        java.lang.String str10 = uRL9.getRef();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL9);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet31 = explodedArchive3.getSKIPPED_NAMES();
        java.net.URL uRL32 = explodedArchive3.getUrl();
        java.lang.String str33 = uRL32.getQuery();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(uRL32);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getPath();
        java.lang.String str44 = uRL42.getUserInfo();
        java.lang.String str45 = uRL42.getHost();
        java.net.URL uRL47 = new java.net.URL(uRL42, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL42, "hi!");
        fileNotFoundURLConnection49.setDefaultUseCaches(false);
        java.lang.String str52 = fileNotFoundURLConnection49.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        java.io.File file55 = serializedObjectSupporter53.deserializeObjectFile15();
        java.io.File file56 = serializedObjectSupporter53.deserializeObjectFile13();
        fileNotFoundURLConnection49.serializedObjectSupporter = serializedObjectSupporter53;
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter53.deserializeObjectExplodedArchive10();
        java.io.File file60 = serializedObjectSupporter53.deserializeObjectFile9();
        java.io.File file61 = serializedObjectSupporter53.deserializeObjectFile1();
        java.io.File file62 = serializedObjectSupporter53.deserializeObjectFile7();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals(uRL42.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file55.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file61.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file62.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter21.deserializeObjectExplodedArchive7();
        java.io.File file26 = serializedObjectSupporter21.deserializeObjectFile3();
        java.io.File file27 = serializedObjectSupporter21.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter21.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter21.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter21.deserializeObjectExplodedArchive6();
        filteredURLStreamHandler19.serializedObjectSupporter = serializedObjectSupporter21;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file26.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file27.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive30);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        long long22 = fileNotFoundURLConnection17.getIfModifiedSince();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        fileNotFoundURLConnection17.setUseCaches(true);
        java.lang.String str28 = fileNotFoundURLConnection17.getRequestProperty("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str29 = fileNotFoundURLConnection17.getContentEncoding();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getRequestProperties();
        java.lang.String str22 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 1);
        java.net.URL uRL24 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str25 = uRL24.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL24, "://hi!:100");
        fileNotFoundURLConnection27.setUseCaches(true);
        java.lang.String str30 = fileNotFoundURLConnection27.name;
        java.net.URL uRL31 = fileNotFoundURLConnection27.getURL();
        java.net.URL uRL33 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str34 = uRL33.getProtocol();
        java.lang.Class[] classArray35 = new java.lang.Class[] {};
        java.lang.Object obj36 = uRL33.getContent(classArray35);
        java.lang.Object obj37 = uRL31.getContent(classArray35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = fileNotFoundURLConnection17.getContent(classArray35);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "://hi!:100" + "'", str30, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file" + "'", str34, "file");
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.net.URL uRL6 = new java.net.URL(uRL1, "file");
        java.lang.String str7 = uRL1.getFile();
        java.lang.String str8 = uRL1.getFile();
        java.lang.String str9 = uRL1.getHost();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str8, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet31 = explodedArchive3.getSKIPPED_NAMES();
        java.net.URL uRL32 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL32, "/://hi!:100");
        java.lang.String str35 = uRL32.getHost();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(uRL32);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        java.security.Permission permission21 = fileNotFoundURLConnection17.getPermission();
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setDoOutput(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(permission21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        fileNotFoundURLConnection17.setIfModifiedSince(100L);
        java.lang.String str32 = fileNotFoundURLConnection17.getname();
        java.lang.String str34 = fileNotFoundURLConnection17.getHeaderFieldKey((int) ' ');
        boolean boolean35 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile12();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        int int26 = fileNotFoundURLConnection17.getReadTimeout();
        java.lang.String str27 = fileNotFoundURLConnection17.name;
        java.lang.String str28 = fileNotFoundURLConnection17.getContentType();
        long long29 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet31 = explodedArchive3.getSKIPPED_NAMES();
        explodedArchive3.filtered = true;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = null;
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter34;
        java.io.File file36 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        java.security.Permission permission27 = fileNotFoundURLConnection17.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(permission27);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        java.net.URL uRL49 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str50 = uRL49.getUserInfo();
        java.lang.String str51 = uRL49.getUserInfo();
        java.lang.String str52 = uRL49.getPath();
        java.net.URL uRL54 = new java.net.URL(uRL49, "://hi!:100");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream55 = uRL54.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -75");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals(uRL49.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "://hi!:100" + "'", str52, "://hi!:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://://hi!:100");
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        int int18 = uRL17.getDefaultPort();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.util.Set<java.lang.String> strSet39 = explodedArchive38.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive38.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = null;
        explodedArchive38.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.util.Set<java.lang.String> strSet47 = explodedArchive46.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes48 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter49.deserializeObjectExplodedArchive11();
        java.io.File file51 = serializedObjectSupporter49.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file51);
        java.io.File file53 = explodedArchive52.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive46.new FileEntry(asciiBytes48, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file56 = serializedObjectSupporter55.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest60 = serializedObjectSupporter55.deserializeObjectManifest1();
        java.io.File file61 = serializedObjectSupporter55.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry62 = explodedArchive38.new FileEntry(asciiBytes48, file61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry62.serializedObjectSupporter = serializedObjectSupporter63;
        java.io.File file65 = fileEntry62.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = fileEntry62.serializedObjectSupporter;
        filteredURLStreamHandler33.serializedObjectSupporter = serializedObjectSupporter66;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = filteredURLStreamHandler33.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter69.deserializeObjectExplodedArchive14();
        java.io.File file73 = serializedObjectSupporter69.deserializeObjectFile9();
        java.io.File file74 = serializedObjectSupporter69.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter69.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler33.serializedObjectSupporter = serializedObjectSupporter69;
        java.net.URL uRL77 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL78 = new java.net.URL(uRL17, "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI79 = uRL78.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100/hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(asciiBytes48);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(manifest60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter66);
        org.junit.Assert.assertNotNull(serializedObjectSupporter68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertEquals(uRL77.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL78.toString(), "://hi!:100/hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.util.Set<java.lang.String> strSet81 = explodedArchive80.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.getPath();
        java.lang.String str85 = uRL83.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = serializedObjectSupporter87.deserializeObjectExplodedArchive11();
        java.io.File file89 = serializedObjectSupporter87.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = new org.springframework.boot.loader.archive.ExplodedArchive(file89);
        java.util.Set<java.lang.String> strSet91 = explodedArchive90.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive90.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL(uRL83, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL(uRL69, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL(uRL57, "file", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL96 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.lang.String str97 = uRL96.getRef();
        int int98 = uRL96.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream99 = uRL96.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals(uRL57.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:100" + "'", str71, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertEquals(uRL83.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(explodedArchive88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertEquals(uRL93.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL94.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL95.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL96.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.lang.String str14 = uRL10.getPath();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.HashSet hashSet7 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile15();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(hashSet7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file8.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        long long25 = fileNotFoundURLConnection17.getContentLengthLong();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = fileNotFoundURLConnection17.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getPath();
        java.lang.String str44 = uRL42.getUserInfo();
        java.lang.String str45 = uRL42.getHost();
        java.net.URL uRL47 = new java.net.URL(uRL42, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL42, "hi!");
        fileNotFoundURLConnection49.setDefaultUseCaches(false);
        java.lang.String str52 = fileNotFoundURLConnection49.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        java.io.File file55 = serializedObjectSupporter53.deserializeObjectFile15();
        java.io.File file56 = serializedObjectSupporter53.deserializeObjectFile13();
        fileNotFoundURLConnection49.serializedObjectSupporter = serializedObjectSupporter53;
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter53.deserializeObjectExplodedArchive10();
        java.io.File file60 = serializedObjectSupporter53.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter53.deserializeObjectExplodedArchive1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals(uRL42.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file55.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive61);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        int int25 = fileNotFoundURLConnection17.getConnectTimeout();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file27 = serializedObjectSupporter26.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter26.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter26.deserializeObjectExplodedArchive14();
        java.io.File file30 = serializedObjectSupporter26.deserializeObjectFile9();
        java.io.File file31 = serializedObjectSupporter26.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter26.deserializeObjectExplodedArchive5();
        java.io.File file33 = serializedObjectSupporter26.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter26.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter26.deserializeObjectExplodedArchive2();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter26;
        boolean boolean37 = fileNotFoundURLConnection17.getDoInput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.net.URL uRL6 = new java.net.URL(uRL1, "file");
        java.lang.String str7 = uRL1.getFile();
        java.lang.String str8 = uRL1.getAuthority();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        java.net.URL uRL28 = fileNotFoundURLConnection17.getURL();
        java.lang.String str29 = uRL28.toExternalForm();
        java.net.URL uRL31 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str32 = uRL31.getProtocol();
        java.lang.Class[] classArray33 = new java.lang.Class[] {};
        java.lang.Object obj34 = uRL31.getContent(classArray33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = uRL28.getContent(classArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(uRL28);
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "://hi!:100" + "'", str29, "://hi!:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "file" + "'", str32, "file");
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive7();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes28, file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive3.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest51 = explodedArchive3.getManifest();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(manifest51);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter15.deserializeObjectExplodedArchive15();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter15;
        java.util.jar.Manifest manifest20 = explodedArchive3.manifest;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter21.deserializeObjectExplodedArchive14();
        java.io.File file26 = serializedObjectSupporter21.deserializeObjectFile7();
        java.util.jar.Manifest manifest27 = serializedObjectSupporter21.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest27;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive3.getNestedArchives(entryFilter29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file17.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(manifest20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file26.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(manifest27);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getAuthority();
        java.net.Proxy proxy52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection53 = uRL22.openConnection(proxy52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:100" + "'", str51, "hi!:100");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        java.net.URL uRL56 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL57 = new java.net.URL("file", "/hi!:100", (-1), "/file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL58 = new java.net.URL(uRL1, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int59 = uRL1.getDefaultPort();
        java.lang.String str60 = uRL1.getQuery();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL57.toString(), "file://[/hi!:100]/file");
        org.junit.Assert.assertEquals(uRL58.toString(), "file:/hi!");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("[://hi!:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: [://hi!:100/hi!]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getRef();
        java.net.URL uRL38 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str39 = uRL38.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL38, "://hi!:100");
        fileNotFoundURLConnection41.setUseCaches(true);
        java.lang.String str44 = fileNotFoundURLConnection41.name;
        java.net.URL uRL45 = fileNotFoundURLConnection41.getURL();
        java.net.URL uRL47 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str48 = uRL47.getProtocol();
        java.lang.Class[] classArray49 = new java.lang.Class[] {};
        java.lang.Object obj50 = uRL47.getContent(classArray49);
        java.lang.Object obj51 = uRL45.getContent(classArray49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = uRL10.getContent(classArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str39, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "://hi!:100" + "'", str44, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL45);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "file" + "'", str48, "file");
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderFieldKey(0);
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) '#');
        java.lang.String str31 = fileNotFoundURLConnection17.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str31, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        java.lang.String str30 = fileNotFoundURLConnection17.getname();
        fileNotFoundURLConnection17.setDoInput(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile6();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter31;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry27.name;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = null;
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter37;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNotNull(asciiBytes36);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.net.URL uRL6 = new java.net.URL(uRL1, "file");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        java.net.URL uRL56 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        java.io.File file63 = serializedObjectSupporter58.deserializeObjectFile7();
        java.util.jar.Manifest manifest64 = serializedObjectSupporter58.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter58.deserializeObjectExplodedArchive12();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter58;
        java.net.URL uRL68 = new java.net.URL(uRL6, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream69 = uRL68.openStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/file");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(serializedObjectSupporter57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(manifest64);
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertEquals(uRL68.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter7.deserializeObjectExplodedArchive1();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest18 = serializedObjectSupporter17.deserializeObjectManifest1();
        explodedArchive15.manifest = manifest18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = null;
        explodedArchive23.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.io.File file38 = explodedArchive37.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive31.new FileEntry(asciiBytes33, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter40.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter40.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter40.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest45 = serializedObjectSupporter40.deserializeObjectManifest1();
        java.io.File file46 = serializedObjectSupporter40.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive23.new FileEntry(asciiBytes33, file46);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file49 = serializedObjectSupporter48.deserializeObjectFile8();
        java.io.File file50 = serializedObjectSupporter48.deserializeObjectFile15();
        java.io.File file51 = serializedObjectSupporter48.deserializeObjectFile13();
        java.io.File file52 = serializedObjectSupporter48.deserializeObjectFile9();
        java.io.File file53 = serializedObjectSupporter48.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive15.new FileEntry(asciiBytes33, file53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        java.io.File file58 = explodedArchive57.getroot();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file11.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(manifest45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file50.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file53.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        long long24 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!:100", (long) (byte) 0);
        int int25 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str27 = fileNotFoundURLConnection17.getRequestProperty("hi!");
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap28 = fileNotFoundURLConnection17.getHeaderFields();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.HashSet hashSet4 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(hashSet4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.io.File file7 = explodedArchive3.getroot();
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive12 = explodedArchive3.getFilteredArchive(entryRenameFilter11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setIfModifiedSince(0L);
        fileNotFoundURLConnection17.setDoOutput(true);
        java.lang.String str29 = fileNotFoundURLConnection17.name;
        java.lang.String str31 = fileNotFoundURLConnection17.getHeaderField(97);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        boolean boolean28 = fileEntry27.isDirectory();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = fileEntry27.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.net.URL uRL8 = explodedArchive3.getUrl();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive3.getEntries();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(entryCollection9);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setConnectTimeout((int) (byte) 10);
        fileNotFoundURLConnection17.setDoInput(true);
        java.lang.String str30 = fileNotFoundURLConnection17.getRequestProperty("://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file37 = serializedObjectSupporter36.deserializeObjectFile8();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file39 = serializedObjectSupporter36.deserializeObjectFile13();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile9();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive3.new FileEntry(asciiBytes21, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = fileEntry42.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = fileEntry42.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes45 = fileEntry42.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes46 = fileEntry42.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes47 = fileEntry42.name;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(asciiBytes45);
        org.junit.Assert.assertNotNull(asciiBytes46);
        org.junit.Assert.assertNotNull(asciiBytes47);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        int int56 = fileNotFoundURLConnection53.getHeaderFieldInt("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (int) ' ');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.io.File file7 = explodedArchive3.getroot();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        explodedArchive3.filtered = false;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = explodedArchive3.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes8);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getPath();
        java.lang.String str44 = uRL42.getUserInfo();
        java.lang.String str45 = uRL42.getHost();
        java.net.URL uRL47 = new java.net.URL(uRL42, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL42, "hi!");
        fileNotFoundURLConnection49.setDefaultUseCaches(false);
        java.lang.String str52 = fileNotFoundURLConnection49.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        java.io.File file55 = serializedObjectSupporter53.deserializeObjectFile15();
        java.io.File file56 = serializedObjectSupporter53.deserializeObjectFile13();
        fileNotFoundURLConnection49.serializedObjectSupporter = serializedObjectSupporter53;
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter53;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = fileEntry27.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals(uRL42.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file55.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(serializedObjectSupporter59);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        boolean boolean60 = fileEntry59.isDirectory();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        java.lang.String str29 = fileNotFoundURLConnection17.getContentEncoding();
        long long30 = fileNotFoundURLConnection17.getLastModified();
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        fileNotFoundURLConnection17.setDoInput(true);
        long long34 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str15 = uRL14.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.util.Set<java.lang.String> strSet38 = explodedArchive37.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.getPath();
        java.lang.String str42 = uRL40.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter44.deserializeObjectExplodedArchive11();
        java.io.File file46 = serializedObjectSupporter44.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file46);
        java.util.Set<java.lang.String> strSet48 = explodedArchive47.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL(uRL40, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL26, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        boolean boolean52 = uRL14.sameFile(uRL26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        java.io.File file60 = serializedObjectSupporter58.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file60);
        java.util.Set<java.lang.String> strSet62 = explodedArchive61.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter65.deserializeObjectExplodedArchive11();
        java.io.File file67 = serializedObjectSupporter65.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file67);
        java.util.Set<java.lang.String> strSet69 = explodedArchive68.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive68.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap71 = null;
        explodedArchive68.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter73.deserializeObjectExplodedArchive11();
        java.io.File file75 = serializedObjectSupporter73.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file75);
        java.util.Set<java.lang.String> strSet77 = explodedArchive76.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes78 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter79 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = serializedObjectSupporter79.deserializeObjectExplodedArchive11();
        java.io.File file81 = serializedObjectSupporter79.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file81);
        java.io.File file83 = explodedArchive82.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry84 = explodedArchive76.new FileEntry(asciiBytes78, file83);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter85 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file86 = serializedObjectSupporter85.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = serializedObjectSupporter85.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = serializedObjectSupporter85.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = serializedObjectSupporter85.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest90 = serializedObjectSupporter85.deserializeObjectManifest1();
        java.io.File file91 = serializedObjectSupporter85.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry92 = explodedArchive68.new FileEntry(asciiBytes78, file91);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter93 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry92.serializedObjectSupporter = serializedObjectSupporter93;
        java.io.File file95 = fileEntry92.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter96 = fileEntry92.serializedObjectSupporter;
        filteredURLStreamHandler63.serializedObjectSupporter = serializedObjectSupporter96;
        java.net.URL uRL98 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL99 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "file", 1, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:100" + "'", str28, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals(uRL40.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals(uRL50.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertEquals(uRL64.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file67.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(asciiBytes78);
        org.junit.Assert.assertNull(explodedArchive80);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file81.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file83.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive87);
        org.junit.Assert.assertNull(explodedArchive88);
        org.junit.Assert.assertNull(explodedArchive89);
        org.junit.Assert.assertNotNull(manifest90);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file95.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter96);
        org.junit.Assert.assertEquals(uRL98.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL99.toString(), "file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://file:1://hi!:100");
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str26 = fileNotFoundURLConnection17.getContentType();
        long long27 = fileNotFoundURLConnection17.getLastModified();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap28 = fileNotFoundURLConnection17.getHeaderFields();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = fileNotFoundURLConnection17.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.util.Set<java.lang.String> strSet13 = explodedArchive12.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.lang.String str16 = uRL15.getPath();
        java.lang.String str17 = uRL15.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL(uRL15, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.util.Set<java.lang.String> strSet49 = explodedArchive48.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getPath();
        java.lang.String str53 = uRL51.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        java.io.File file57 = serializedObjectSupporter55.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file57);
        java.util.Set<java.lang.String> strSet59 = explodedArchive58.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL37, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL25, "file", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str64 = uRL25.getProtocol();
        java.lang.String str65 = uRL25.toExternalForm();
        boolean boolean66 = uRL1.sameFile(uRL25);
        java.net.URL uRL68 = new java.net.URL(uRL25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str69 = uRL25.getFile();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals(uRL25.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals(uRL37.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:100" + "'", str39, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals(uRL51.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertEquals(uRL61.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL63.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "://hi!:100/hi!" + "'", str65, "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals(uRL68.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet15 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file18 = serializedObjectSupporter17.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter17.deserializeObjectExplodedArchive8();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter17;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        boolean boolean27 = explodedArchive25.filtered;
        java.util.Set<java.lang.String> strSet28 = explodedArchive25.getSKIPPED_NAMES();
        explodedArchive25.filtered = true;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = null;
        explodedArchive34.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.util.Set<java.lang.String> strSet43 = explodedArchive42.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes44 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.io.File file49 = explodedArchive48.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive42.new FileEntry(asciiBytes44, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file52 = serializedObjectSupporter51.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter51.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter51.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter51.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest56 = serializedObjectSupporter51.deserializeObjectManifest1();
        java.io.File file57 = serializedObjectSupporter51.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive34.new FileEntry(asciiBytes44, file57);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry58.serializedObjectSupporter = serializedObjectSupporter59;
        java.io.File file61 = fileEntry58.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes62 = fileEntry58.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes63 = fileEntry58.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = fileEntry58.getName();
        java.io.File file65 = fileEntry58.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = fileEntry58.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes67 = fileEntry58.name;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file69 = serializedObjectSupporter68.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter68.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter68.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter68.deserializeObjectExplodedArchive2();
        java.io.File file73 = serializedObjectSupporter68.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter68.deserializeObjectExplodedArchive10();
        java.util.jar.Manifest manifest75 = serializedObjectSupporter68.deserializeObjectManifest1();
        java.io.File file76 = serializedObjectSupporter68.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry77 = explodedArchive25.new FileEntry(asciiBytes67, file76);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive78 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file18.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(asciiBytes44);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(manifest56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes62);
        org.junit.Assert.assertNotNull(asciiBytes63);
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter66);
        org.junit.Assert.assertNotNull(asciiBytes67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNotNull(manifest75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter29.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter29.deserializeObjectExplodedArchive5();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter29;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.util.Set<java.lang.String> strSet25 = explodedArchive24.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.net.URL uRL28 = new java.net.URL(uRL15, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = filteredURLStreamHandler26.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = filteredURLStreamHandler26.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals(uRL27.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        java.net.URL uRL49 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str50 = uRL49.getUserInfo();
        java.lang.String str51 = uRL49.getUserInfo();
        java.lang.String str52 = uRL49.getPath();
        java.net.URL uRL54 = new java.net.URL(uRL49, "://hi!:100");
        java.lang.String str55 = uRL54.getFile();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals(uRL49.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "://hi!:100" + "'", str52, "://hi!:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://://hi!:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "://://hi!:100" + "'", str55, "://://hi!:100");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = fileNotFoundURLConnection17.serializedObjectSupporter;
        boolean boolean33 = fileNotFoundURLConnection17.getDefaultUseCaches();
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100", "file", "://hi!:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        int int26 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str28 = fileNotFoundURLConnection17.getHeaderField("");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        java.lang.String str32 = uRL30.toExternalForm();
        boolean boolean33 = uRL15.sameFile(uRL30);
        java.lang.String str34 = uRL30.getFile();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        int int35 = uRL15.getDefaultPort();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive39.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        java.io.File file43 = explodedArchive39.getroot();
        explodedArchive39.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive39.entries;
        boolean boolean47 = uRL15.equals((java.lang.Object) asciiBytesMap46);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = uRL10.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        boolean boolean8 = fileNotFoundURLConnection4.getAllowUserInteraction();
        fileNotFoundURLConnection4.setIfModifiedSince((long) 35);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        boolean boolean24 = fileNotFoundURLConnection17.getDoInput();
        java.lang.String str26 = fileNotFoundURLConnection17.getHeaderFieldKey(1);
        long long27 = fileNotFoundURLConnection17.getIfModifiedSince();
        long long28 = fileNotFoundURLConnection17.getContentLengthLong();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        fileNotFoundURLConnection17.addRequestProperty("hi!:100", "file");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive7();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes28, file48);
        java.util.jar.Manifest manifest50 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive3.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(manifest50);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile16();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file11 = serializedObjectSupporter0.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        int int25 = fileNotFoundURLConnection17.getHeaderFieldInt("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (int) ' ');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet7 = explodedArchive3.getSKIPPED_NAMES();
        java.io.File file8 = explodedArchive3.getroot();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getProtocol();
        java.lang.Class[] classArray3 = new java.lang.Class[] {};
        java.lang.Object obj4 = uRL1.getContent(classArray3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        java.lang.String str7 = fileNotFoundURLConnection6.getContentEncoding();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertNotNull(classArray3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        java.net.URL uRL28 = fileNotFoundURLConnection17.getURL();
        java.lang.String str29 = uRL28.getPath();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(uRL28);
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(explodedArchive13);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile13();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.util.Set<java.lang.String> strSet11 = explodedArchive10.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive10.new FileEntry(asciiBytes12, file17);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = explodedArchive10.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest26 = serializedObjectSupporter25.deserializeObjectManifest1();
        explodedArchive23.manifest = manifest26;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.io.File file32 = explodedArchive31.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive31.entries;
        explodedArchive23.entries = asciiBytesMap33;
        explodedArchive10.entries = asciiBytesMap33;
        java.util.jar.Manifest manifest36 = explodedArchive10.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap37);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes19);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        int int26 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "/hi!", 32, "[hi!:100]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet7 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive3.getNestedArchives(entryFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile3();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile6();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter31;
        java.io.File file35 = serializedObjectSupporter31.deserializeObjectFile2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter31.deserializeObjectExplodedArchive5();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        java.net.URL uRL8 = explodedArchive3.getUrl();
        java.util.jar.Manifest manifest9 = explodedArchive3.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive3.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(manifest9);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.lang.String str6 = fileNotFoundURLConnection4.getHeaderField("hi!:100");
        long long7 = fileNotFoundURLConnection4.getDate();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap8 = fileNotFoundURLConnection4.getRequestProperties();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter9.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter9.deserializeObjectExplodedArchive16();
        java.io.File file15 = serializedObjectSupporter9.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter9.deserializeObjectExplodedArchive4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter9.deserializeObjectExplodedArchive7();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter9;
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file15.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNull(explodedArchive17);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile16();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive18.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = null;
        explodedArchive25.entries = asciiBytesMap28;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.io.File file40 = explodedArchive39.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive33.new FileEntry(asciiBytes35, file40);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest47 = serializedObjectSupporter42.deserializeObjectManifest1();
        java.io.File file48 = serializedObjectSupporter42.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive25.new FileEntry(asciiBytes35, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        java.io.File file52 = fileEntry49.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes53 = fileEntry49.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes54 = fileEntry49.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter55.deserializeObjectExplodedArchive16();
        java.io.File file61 = serializedObjectSupporter55.deserializeObjectFile6();
        java.io.File file62 = serializedObjectSupporter55.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive18.new FileEntry(asciiBytes54, file62);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = fileEntry63.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        java.io.File file69 = serializedObjectSupporter65.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry70 = explodedArchive3.new FileEntry(asciiBytes64, file69);
        java.io.File file71 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(manifest47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes53);
        org.junit.Assert.assertNotNull(asciiBytes54);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100", "/file", (int) (short) 1, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        java.io.File file60 = serializedObjectSupporter58.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file60);
        java.util.Set<java.lang.String> strSet62 = explodedArchive61.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getPath();
        java.lang.String str66 = uRL64.getUserInfo();
        java.lang.String str67 = uRL64.getHost();
        java.net.URL uRL69 = new java.net.URL(uRL64, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter74 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter74.deserializeObjectExplodedArchive11();
        java.io.File file76 = serializedObjectSupporter74.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file76);
        java.util.Set<java.lang.String> strSet78 = explodedArchive77.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str81 = uRL80.getPath();
        java.lang.String str82 = uRL80.getUserInfo();
        java.lang.String str83 = uRL80.getHost();
        java.net.URL uRL85 = new java.net.URL(uRL80, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection87 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL80, "hi!");
        boolean boolean88 = uRL69.sameFile(uRL80);
        boolean boolean89 = uRL22.sameFile(uRL69);
        java.lang.String str90 = uRL69.getUserInfo();
        java.lang.String str91 = uRL69.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertEquals(uRL64.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file76.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertEquals(uRL80.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "://hi!:100/hi!" + "'", str91, "://hi!:100/hi!");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!:100]:0", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", (-1), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!:100]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL25 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str26 = uRL25.getProtocol();
        java.lang.Class[] classArray27 = new java.lang.Class[] {};
        java.lang.Object obj28 = uRL25.getContent(classArray27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = fileNotFoundURLConnection17.getContent(classArray27);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "file" + "'", str26, "file");
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        java.lang.String str35 = uRL26.getQuery();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = fileNotFoundURLConnection50.getContentEncoding();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        java.net.URL uRL52 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL53 = new java.net.URL("file", "/hi!:100", (-1), "/file", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI54 = uRL53.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected closing bracket for IPv6 address at index 8: file://[/hi!:100]/file");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL53.toString(), "file://[/hi!:100]/file");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap30 = fileNotFoundURLConnection17.getRequestProperties();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile12();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = filteredURLStreamHandler9.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter44.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter44.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = fileNotFoundURLConnection17.serializedObjectSupporter;
        boolean boolean33 = fileNotFoundURLConnection17.getUseCaches();
        fileNotFoundURLConnection17.setIfModifiedSince(100L);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap36 = fileNotFoundURLConnection17.getRequestProperties();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter7.deserializeObjectExplodedArchive1();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest18 = serializedObjectSupporter17.deserializeObjectManifest1();
        explodedArchive15.manifest = manifest18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = null;
        explodedArchive23.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.io.File file38 = explodedArchive37.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive31.new FileEntry(asciiBytes33, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter40.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter40.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter40.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest45 = serializedObjectSupporter40.deserializeObjectManifest1();
        java.io.File file46 = serializedObjectSupporter40.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive23.new FileEntry(asciiBytes33, file46);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file49 = serializedObjectSupporter48.deserializeObjectFile8();
        java.io.File file50 = serializedObjectSupporter48.deserializeObjectFile15();
        java.io.File file51 = serializedObjectSupporter48.deserializeObjectFile13();
        java.io.File file52 = serializedObjectSupporter48.deserializeObjectFile9();
        java.io.File file53 = serializedObjectSupporter48.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive15.new FileEntry(asciiBytes33, file53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive57.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getUserInfo();
        java.lang.String str72 = uRL69.getHost();
        java.net.URL uRL74 = new java.net.URL(uRL69, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL69, "hi!");
        fileNotFoundURLConnection76.setDefaultUseCaches(false);
        java.lang.String str79 = fileNotFoundURLConnection76.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file81 = serializedObjectSupporter80.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = serializedObjectSupporter80.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter80.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection76.serializedObjectSupporter = serializedObjectSupporter80;
        fileNotFoundURLConnection76.setDoOutput(false);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = fileNotFoundURLConnection76.serializedObjectSupporter;
        java.util.HashSet hashSet88 = serializedObjectSupporter87.deserializeObjectSet1();
        explodedArchive57.serializedObjectSupporter = serializedObjectSupporter87;
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file11.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(manifest45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file50.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file53.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals(uRL74.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive82);
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNotNull(serializedObjectSupporter87);
        org.junit.Assert.assertNotNull(hashSet88);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file11 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file12 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file14 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file12.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        java.io.File file60 = serializedObjectSupporter58.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file60);
        java.util.Set<java.lang.String> strSet62 = explodedArchive61.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getPath();
        java.lang.String str66 = uRL64.getUserInfo();
        java.lang.String str67 = uRL64.getHost();
        java.net.URL uRL69 = new java.net.URL(uRL64, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter74 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter74.deserializeObjectExplodedArchive11();
        java.io.File file76 = serializedObjectSupporter74.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file76);
        java.util.Set<java.lang.String> strSet78 = explodedArchive77.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str81 = uRL80.getPath();
        java.lang.String str82 = uRL80.getUserInfo();
        java.lang.String str83 = uRL80.getHost();
        java.net.URL uRL85 = new java.net.URL(uRL80, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection87 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL80, "hi!");
        boolean boolean88 = uRL69.sameFile(uRL80);
        boolean boolean89 = uRL22.sameFile(uRL69);
        java.lang.String str90 = uRL69.getQuery();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertEquals(uRL64.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file76.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertEquals(uRL80.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL25 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str26 = uRL25.getAuthority();
        boolean boolean27 = uRL23.sameFile(uRL25);
        java.lang.String str28 = uRL25.getHost();
        int int29 = uRL25.getPort();
        java.lang.Object obj30 = uRL25.getContent();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        boolean boolean24 = fileNotFoundURLConnection17.getDoInput();
        long long25 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        fileNotFoundURLConnection17.setIfModifiedSince(32L);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive7();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file51 = serializedObjectSupporter50.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter50.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter50.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter50.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest55 = serializedObjectSupporter50.deserializeObjectManifest1();
        java.io.File file56 = serializedObjectSupporter50.deserializeObjectFile14();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        java.io.File file58 = fileEntry49.getFile();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNotNull(manifest55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        java.lang.String str26 = fileNotFoundURLConnection17.getHeaderField(97);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL15, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        fileNotFoundURLConnection19.addRequestProperty("[hi!:100]:0", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        fileNotFoundURLConnection19.setDoOutput(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long22 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean23 = fileNotFoundURLConnection17.getDoOutput();
        long long24 = fileNotFoundURLConnection17.getDate();
        fileNotFoundURLConnection17.setUseCaches(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile13();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.io.File file13 = explodedArchive12.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive17 = explodedArchive15.getFilteredArchive(entryRenameFilter16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        fileNotFoundURLConnection4.setDoOutput(false);
        java.lang.String str10 = fileNotFoundURLConnection4.getname();
        boolean boolean11 = fileNotFoundURLConnection4.getDefaultUseCaches();
        long long12 = fileNotFoundURLConnection4.getExpiration();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "://hi!:100" + "'", str10, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = filteredURLStreamHandler17.serializedObjectSupporter;
        java.net.URL uRL53 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL54 = new java.net.URL("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 0, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        int int55 = uRL54.getDefaultPort();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
        java.util.Set<java.lang.String> strSet65 = explodedArchive64.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str68 = uRL67.getPath();
        java.lang.String str69 = uRL67.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter71.deserializeObjectExplodedArchive11();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file73);
        java.util.Set<java.lang.String> strSet75 = explodedArchive74.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive74.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL(uRL67, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter78 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file79 = serializedObjectSupporter78.deserializeObjectFile8();
        java.io.File file80 = serializedObjectSupporter78.deserializeObjectFile5();
        java.io.File file81 = serializedObjectSupporter78.deserializeObjectFile8();
        filteredURLStreamHandler76.serializedObjectSupporter = serializedObjectSupporter78;
        java.net.URL uRL83 = new java.net.URL(uRL54, "/://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
        org.junit.Assert.assertEquals(uRL53.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!:100://[hi!:100]:0file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertEquals(uRL67.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertEquals(uRL77.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file80.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!:100://[hi!:100]:0file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0/://hi!:100");
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.lang.String str13 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.io.File file22 = explodedArchive21.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest24 = serializedObjectSupporter23.deserializeObjectManifest1();
        explodedArchive21.manifest = manifest24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = null;
        explodedArchive29.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.util.Set<java.lang.String> strSet38 = explodedArchive37.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.io.File file44 = explodedArchive43.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive37.new FileEntry(asciiBytes39, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter46.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter46.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter46.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest51 = serializedObjectSupporter46.deserializeObjectManifest1();
        java.io.File file52 = serializedObjectSupporter46.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive29.new FileEntry(asciiBytes39, file52);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file55 = serializedObjectSupporter54.deserializeObjectFile8();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile15();
        java.io.File file57 = serializedObjectSupporter54.deserializeObjectFile13();
        java.io.File file58 = serializedObjectSupporter54.deserializeObjectFile9();
        java.io.File file59 = serializedObjectSupporter54.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive21.new FileEntry(asciiBytes39, file59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file62 = serializedObjectSupporter61.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive17.new FileEntry(asciiBytes39, file62);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter64 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter64.deserializeObjectExplodedArchive12();
        java.io.File file66 = serializedObjectSupporter64.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = explodedArchive11.new FileEntry(asciiBytes39, file66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap68;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter70 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter70.deserializeObjectExplodedArchive11();
        java.io.File file72 = serializedObjectSupporter70.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file72);
        java.util.Set<java.lang.String> strSet74 = explodedArchive73.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive73.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive73.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = explodedArchive73.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter78 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file79 = serializedObjectSupporter78.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = serializedObjectSupporter78.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = serializedObjectSupporter78.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = serializedObjectSupporter78.deserializeObjectExplodedArchive2();
        java.io.File file83 = serializedObjectSupporter78.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = serializedObjectSupporter78.deserializeObjectExplodedArchive10();
        java.util.jar.Manifest manifest85 = serializedObjectSupporter78.deserializeObjectManifest1();
        explodedArchive73.manifest = manifest85;
        explodedArchive3.manifest = manifest85;
        java.util.jar.Manifest manifest88 = explodedArchive3.getManifest();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str13, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest24);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(manifest51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file56.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file59.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file72.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNull(serializedObjectSupporter77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive80);
        org.junit.Assert.assertNull(explodedArchive81);
        org.junit.Assert.assertNull(explodedArchive82);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file83.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNotNull(manifest85);
        org.junit.Assert.assertNotNull(manifest88);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        java.lang.String str55 = fileNotFoundURLConnection53.getHeaderFieldKey((-1));
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet31 = explodedArchive3.getSKIPPED_NAMES();
        explodedArchive3.filtered = true;
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file34, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(strSet31);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        long long28 = fileNotFoundURLConnection17.getExpiration();
        java.security.Permission permission29 = fileNotFoundURLConnection17.getPermission();
        long long30 = fileNotFoundURLConnection17.getIfModifiedSince();
        long long31 = fileNotFoundURLConnection17.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter32.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter32.deserializeObjectExplodedArchive7();
        java.io.File file37 = serializedObjectSupporter32.deserializeObjectFile3();
        java.io.File file38 = serializedObjectSupporter32.deserializeObjectFile1();
        java.io.File file39 = serializedObjectSupporter32.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter32.deserializeObjectExplodedArchive10();
        java.io.File file41 = serializedObjectSupporter32.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter32.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter32.deserializeObjectExplodedArchive6();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter32;
        java.net.URL uRL45 = fileNotFoundURLConnection17.getURL();
        java.lang.String str46 = uRL45.getFile();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(permission29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file38.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(uRL45);
        org.junit.Assert.assertEquals(uRL45.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive7.new FileEntry(asciiBytes9, file14);
        explodedArchive7.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive7.entries;
        java.util.Set<java.lang.String> strSet19 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = explodedArchive7.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive8();
        explodedArchive7.serializedObjectSupporter = serializedObjectSupporter21;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap25);
        java.util.jar.Manifest manifest27 = explodedArchive26.manifest;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(asciiBytes9);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(manifest27);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file5 = serializedObjectSupporter4.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter4.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter4.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter4.deserializeObjectExplodedArchive2();
        java.io.File file9 = serializedObjectSupporter4.deserializeObjectFile11();
        java.io.File file10 = serializedObjectSupporter4.deserializeObjectFile13();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter17.deserializeObjectExplodedArchive11();
        java.io.File file19 = serializedObjectSupporter17.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
        java.io.File file21 = explodedArchive20.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = explodedArchive14.new FileEntry(asciiBytes16, file21);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = explodedArchive14.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.io.File file28 = explodedArchive27.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest30 = serializedObjectSupporter29.deserializeObjectManifest1();
        explodedArchive27.manifest = manifest30;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive35.entries;
        explodedArchive27.entries = asciiBytesMap37;
        explodedArchive14.entries = asciiBytesMap37;
        java.util.jar.Manifest manifest40 = explodedArchive14.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap41);
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(asciiBytes16);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes23);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest30);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive18.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = null;
        explodedArchive25.entries = asciiBytesMap28;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.io.File file40 = explodedArchive39.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive33.new FileEntry(asciiBytes35, file40);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest47 = serializedObjectSupporter42.deserializeObjectManifest1();
        java.io.File file48 = serializedObjectSupporter42.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive25.new FileEntry(asciiBytes35, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        java.io.File file52 = fileEntry49.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes53 = fileEntry49.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes54 = fileEntry49.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter55.deserializeObjectExplodedArchive16();
        java.io.File file61 = serializedObjectSupporter55.deserializeObjectFile6();
        java.io.File file62 = serializedObjectSupporter55.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive18.new FileEntry(asciiBytes54, file62);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = fileEntry63.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        java.io.File file69 = serializedObjectSupporter65.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry70 = explodedArchive3.new FileEntry(asciiBytes64, file69);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes71 = fileEntry70.getName();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(manifest47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes53);
        org.junit.Assert.assertNotNull(asciiBytes54);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes71);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.HashSet hashSet4 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(hashSet4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        java.util.Set<java.lang.String> strSet41 = explodedArchive3.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest42 = explodedArchive3.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive3.getEntries();
        java.net.URL uRL44 = explodedArchive3.getUrl();
        java.net.URL uRL45 = explodedArchive3.getUrl();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(manifest42);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNotNull(uRL44);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL45);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive(file1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit1069761328127692012/junit891059030562649033/d");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        java.io.File file34 = fileEntry27.getFile();
        java.io.File file35 = fileEntry27.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry27.name;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes36);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        java.net.FileNameMap fileNameMap0 = null;
        java.net.URLConnection.setFileNameMap(fileNameMap0);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive7();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file51 = serializedObjectSupporter50.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter50.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter50.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter50.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest55 = serializedObjectSupporter50.deserializeObjectManifest1();
        java.io.File file56 = serializedObjectSupporter50.deserializeObjectFile14();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = null;
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter58;
        java.io.File file60 = fileEntry49.file;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNotNull(manifest55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file60.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long33 = fileNotFoundURLConnection17.getContentLengthLong();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.String str7 = uRL6.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setIfModifiedSince(0L);
        fileNotFoundURLConnection17.setDoOutput(true);
        int int29 = fileNotFoundURLConnection17.getReadTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.io.File file7 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = filteredURLStreamHandler17.serializedObjectSupporter;
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter52;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getPath();
        java.lang.String str44 = uRL42.getUserInfo();
        java.lang.String str45 = uRL42.getHost();
        java.net.URL uRL47 = new java.net.URL(uRL42, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL42, "hi!");
        fileNotFoundURLConnection49.setDefaultUseCaches(false);
        java.lang.String str52 = fileNotFoundURLConnection49.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        java.io.File file55 = serializedObjectSupporter53.deserializeObjectFile15();
        java.io.File file56 = serializedObjectSupporter53.deserializeObjectFile13();
        fileNotFoundURLConnection49.serializedObjectSupporter = serializedObjectSupporter53;
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter53.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter53.deserializeObjectExplodedArchive1();
        java.io.File file61 = serializedObjectSupporter53.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals(uRL42.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file55.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int36 = uRL35.getPort();
        java.net.URLStreamHandler uRLStreamHandler38 = null;
        java.net.URL uRL39 = new java.net.URL(uRL35, "hi!:100", uRLStreamHandler38);
        java.lang.Class[] classArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = uRL35.getContent(classArray40);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive23.new FileEntry(asciiBytes25, file30);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter32.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter32.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest37 = serializedObjectSupporter32.deserializeObjectManifest1();
        java.io.File file38 = serializedObjectSupporter32.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive15.new FileEntry(asciiBytes25, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile15();
        java.io.File file43 = serializedObjectSupporter40.deserializeObjectFile13();
        java.io.File file44 = serializedObjectSupporter40.deserializeObjectFile9();
        java.io.File file45 = serializedObjectSupporter40.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive7.new FileEntry(asciiBytes25, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes25, file48);
        java.net.URL uRL50 = explodedArchive3.getUrl();
        boolean boolean51 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file53 = serializedObjectSupporter52.deserializeObjectFile8();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile15();
        java.io.File file55 = serializedObjectSupporter52.deserializeObjectFile13();
        java.io.File file56 = serializedObjectSupporter52.deserializeObjectFile9();
        java.io.File file57 = serializedObjectSupporter52.deserializeObjectFile15();
        java.util.jar.Manifest manifest58 = serializedObjectSupporter52.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest58;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(asciiBytes25);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(manifest37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file42.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL50);
        org.junit.Assert.assertEquals(uRL50.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file54.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file57.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest58);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        int int21 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str23 = fileNotFoundURLConnection17.getRequestProperty("");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[://hi!:100/hi!]");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        int int5 = fileNotFoundURLConnection4.getContentLength();
        java.lang.String str7 = fileNotFoundURLConnection4.getHeaderFieldKey((int) (byte) 100);
        fileNotFoundURLConnection4.setDoOutput(true);
        fileNotFoundURLConnection4.setRequestProperty("hi!", "hi!");
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        java.net.URLConnection.setDefaultRequestProperty("/hi!", "hi!:100");
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("://hi!:100", "://hi!:100/hi!", (int) (short) 1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -81");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL11.toString(), "://hi!:100://[://hi!:100/hi!]:1hi!:100");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:100" + "'", str13, "hi!:100");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100", (int) (short) 1, "/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive23.new FileEntry(asciiBytes25, file30);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter32.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter32.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest37 = serializedObjectSupporter32.deserializeObjectManifest1();
        java.io.File file38 = serializedObjectSupporter32.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive15.new FileEntry(asciiBytes25, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile15();
        java.io.File file43 = serializedObjectSupporter40.deserializeObjectFile13();
        java.io.File file44 = serializedObjectSupporter40.deserializeObjectFile9();
        java.io.File file45 = serializedObjectSupporter40.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive7.new FileEntry(asciiBytes25, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes25, file48);
        java.net.URL uRL50 = explodedArchive3.getUrl();
        boolean boolean51 = explodedArchive3.filtered;
        java.io.File file52 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(asciiBytes25);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(manifest37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file42.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL50);
        org.junit.Assert.assertEquals(uRL50.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "src/test/resources/root");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        fileNotFoundURLConnection17.setUseCaches(true);
        long long27 = fileNotFoundURLConnection17.getHeaderFieldDate("/hi!:100", (long) '#');
        long long28 = fileNotFoundURLConnection17.getDate();
        int int29 = fileNotFoundURLConnection17.getContentLength();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 35L + "'", long27 == 35L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getDoInput();
        java.lang.String str28 = fileNotFoundURLConnection17.getHeaderField("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        boolean boolean29 = fileNotFoundURLConnection17.getDefaultUseCaches();
        long long32 = fileNotFoundURLConnection17.getHeaderFieldDate("/file", (long) 0);
        long long33 = fileNotFoundURLConnection17.getContentLengthLong();
        fileNotFoundURLConnection17.setDoInput(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap36 = fileNotFoundURLConnection17.getRequestProperties();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile12();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter21.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter21.deserializeObjectExplodedArchive15();
        java.io.File file28 = serializedObjectSupporter21.deserializeObjectFile12();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        java.lang.String str18 = uRL17.getFile();
        int int19 = uRL17.getDefaultPort();
        java.lang.String str20 = uRL17.getHost();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!:100" + "'", str18, "/hi!:100");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        long long25 = fileNotFoundURLConnection17.getContentLengthLong();
        long long26 = fileNotFoundURLConnection17.getIfModifiedSince();
        int int29 = fileNotFoundURLConnection17.getHeaderFieldInt("", 0);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream30 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        boolean boolean32 = fileNotFoundURLConnection17.getDoInput();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.util.Set<java.lang.String> strSet37 = explodedArchive36.getSKIPPED_NAMES();
        java.lang.String str38 = explodedArchive36.toString();
        java.net.URL uRL39 = explodedArchive36.getUrl();
        java.lang.String str40 = uRL39.getQuery();
        java.lang.Object obj41 = uRL39.getContent();
        java.net.URL uRL43 = new java.net.URL(uRL39, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.net.URL uRL45 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str46 = uRL45.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL45, "://hi!:100");
        fileNotFoundURLConnection48.setUseCaches(true);
        java.lang.String str51 = fileNotFoundURLConnection48.name;
        java.net.URL uRL52 = fileNotFoundURLConnection48.getURL();
        java.net.URL uRL54 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str55 = uRL54.getProtocol();
        java.lang.Class[] classArray56 = new java.lang.Class[] {};
        java.lang.Object obj57 = uRL54.getContent(classArray56);
        java.lang.Object obj58 = uRL52.getContent(classArray56);
        java.lang.Object obj59 = uRL43.getContent(classArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = fileNotFoundURLConnection17.getContent(classArray56);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str38, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL39);
        org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str46, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "://hi!:100" + "'", str51, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL52);
        org.junit.Assert.assertEquals(uRL52.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL54.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "file" + "'", str55, "file");
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        java.lang.String str22 = fileNotFoundURLConnection17.getname();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        int int25 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean26 = fileNotFoundURLConnection17.getUseCaches();
        fileNotFoundURLConnection17.addRequestProperty("/hi!:100", "/file");
        boolean boolean30 = fileNotFoundURLConnection17.getDoOutput();
        long long33 = fileNotFoundURLConnection17.getHeaderFieldDate("", (long) 10);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long22 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str23 = fileNotFoundURLConnection17.name;
        java.lang.String str24 = fileNotFoundURLConnection17.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str24, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        java.lang.String str28 = fileNotFoundURLConnection17.getContentType();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str29 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str31 = fileNotFoundURLConnection17.getHeaderField("[hi!:100]:0");
        fileNotFoundURLConnection17.setIfModifiedSince(35L);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        java.net.URLConnection.setDefaultRequestProperty("hi!:100", "://://hi!:100");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        java.lang.String str18 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry65.serializedObjectSupporter = serializedObjectSupporter66;
        java.io.File file68 = fileEntry65.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = fileEntry65.serializedObjectSupporter;
        filteredURLStreamHandler36.serializedObjectSupporter = serializedObjectSupporter69;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = filteredURLStreamHandler36.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter72 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file73 = serializedObjectSupporter72.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter72.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter72.deserializeObjectExplodedArchive14();
        java.io.File file76 = serializedObjectSupporter72.deserializeObjectFile9();
        java.io.File file77 = serializedObjectSupporter72.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter72.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler36.serializedObjectSupporter = serializedObjectSupporter72;
        java.net.URL uRL80 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.net.URL uRL81 = new java.net.URL("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (int) (byte) 10, "file", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        boolean boolean82 = uRL10.equals((java.lang.Object) uRL81);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals(uRL37.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter69);
        org.junit.Assert.assertNotNull(serializedObjectSupporter71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file76.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertEquals(uRL80.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!:100://[hi!:100]:0file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://:10file");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL25 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str26 = uRL25.getAuthority();
        boolean boolean27 = uRL23.sameFile(uRL25);
        java.lang.String str28 = uRL23.getHost();
        int int29 = uRL23.getDefaultPort();
        java.lang.String str30 = uRL23.getRef();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        java.lang.String str36 = explodedArchive34.toString();
        java.net.URL uRL37 = explodedArchive34.getUrl();
        java.lang.String str38 = uRL37.getQuery();
        java.lang.Object obj39 = uRL37.getContent();
        java.net.URL uRL41 = new java.net.URL(uRL37, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.net.URL uRL43 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str44 = uRL43.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL43, "://hi!:100");
        fileNotFoundURLConnection46.setUseCaches(true);
        java.lang.String str49 = fileNotFoundURLConnection46.name;
        java.net.URL uRL50 = fileNotFoundURLConnection46.getURL();
        java.net.URL uRL52 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str53 = uRL52.getProtocol();
        java.lang.Class[] classArray54 = new java.lang.Class[] {};
        java.lang.Object obj55 = uRL52.getContent(classArray54);
        java.lang.Object obj56 = uRL50.getContent(classArray54);
        java.lang.Object obj57 = uRL41.getContent(classArray54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = uRL23.getContent(classArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str36, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL37);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str44, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "://hi!:100" + "'", str49, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL50);
        org.junit.Assert.assertEquals(uRL50.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL52.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "file" + "'", str53, "file");
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.net.URL uRL32 = fileNotFoundURLConnection17.getURL();
        java.lang.String str33 = uRL32.getProtocol();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertNotNull(uRL32);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter57.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter57.deserializeObjectExplodedArchive14();
        java.io.File file61 = serializedObjectSupporter57.deserializeObjectFile9();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter57.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter57;
        java.net.URL uRL65 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL66 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL67 = new java.net.URL(uRL1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter69.deserializeObjectExplodedArchive14();
        java.io.File file73 = serializedObjectSupporter69.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        java.io.File file75 = serializedObjectSupporter69.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter69.deserializeObjectExplodedArchive5();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter69;
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertEquals(uRL65.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL66.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertNotNull(serializedObjectSupporter68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file75.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive76);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        java.lang.String str7 = fileNotFoundURLConnection4.getname();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile6();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter8;
        java.util.jar.Manifest manifest12 = serializedObjectSupporter8.deserializeObjectManifest1();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(manifest12);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = explodedArchive3.serializedObjectSupporter;
        java.lang.String str63 = explodedArchive3.toString();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter65.deserializeObjectExplodedArchive2();
        java.io.File file70 = serializedObjectSupporter65.deserializeObjectFile11();
        java.io.File file71 = serializedObjectSupporter65.deserializeObjectFile4();
        java.io.File file72 = serializedObjectSupporter65.deserializeObjectFile1();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter65.deserializeObjectExplodedArchive4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str63, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file72.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive74);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile15();
        java.io.File file46 = serializedObjectSupporter43.deserializeObjectFile13();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile9();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive10.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive53.entries;
        explodedArchive10.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        boolean boolean58 = explodedArchive57.filtered;
        java.util.jar.Manifest manifest59 = explodedArchive57.getManifest();
        java.util.jar.Manifest manifest60 = explodedArchive57.getManifest();
        java.io.File file61 = explodedArchive57.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file63 = serializedObjectSupporter62.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter62.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter62.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter62.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter62.deserializeObjectExplodedArchive2();
        java.io.File file68 = serializedObjectSupporter62.deserializeObjectFile6();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive57.buildEntries(file68, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file61.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "");
        java.lang.String str52 = uRL10.getQuery();
        java.lang.String str53 = uRL10.toExternalForm();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "://hi!:100" + "'", str53, "://hi!:100");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.toExternalForm();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        java.net.URLConnection.setDefaultRequestProperty("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive30.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = null;
        explodedArchive30.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.util.Set<java.lang.String> strSet39 = explodedArchive38.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes40 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.io.File file45 = explodedArchive44.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive38.new FileEntry(asciiBytes40, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter47.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter47.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter47.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest52 = serializedObjectSupporter47.deserializeObjectManifest1();
        java.io.File file53 = serializedObjectSupporter47.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive30.new FileEntry(asciiBytes40, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry54.serializedObjectSupporter = serializedObjectSupporter55;
        java.io.File file57 = fileEntry54.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = fileEntry54.serializedObjectSupporter;
        filteredURLStreamHandler25.serializedObjectSupporter = serializedObjectSupporter58;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = filteredURLStreamHandler25.serializedObjectSupporter;
        java.net.URL uRL61 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL62 = new java.net.URL(uRL10, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = filteredURLStreamHandler25.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(asciiBytes40);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(manifest52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter58);
        org.junit.Assert.assertNotNull(serializedObjectSupporter60);
        org.junit.Assert.assertEquals(uRL61.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNotNull(serializedObjectSupporter63);
        org.junit.Assert.assertNull(explodedArchive64);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter7.deserializeObjectExplodedArchive10();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        java.lang.String str18 = fileNotFoundURLConnection17.toString();
        java.lang.String str19 = fileNotFoundURLConnection17.getContentType();
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str18, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.lang.String str28 = fileNotFoundURLConnection17.getHeaderField("/file");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive7();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes28, file48);
        java.util.jar.Manifest manifest50 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file52 = serializedObjectSupporter51.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter51.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter51.deserializeObjectExplodedArchive15();
        java.io.File file55 = serializedObjectSupporter51.deserializeObjectFile16();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter51;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive3.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(manifest50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        int int35 = uRL15.getDefaultPort();
        java.lang.String str36 = uRL15.getFile();
        java.lang.String str37 = uRL15.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("[://hi!:100/hi!]");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        java.io.File file53 = serializedObjectSupporter49.deserializeObjectFile9();
        java.io.File file54 = serializedObjectSupporter49.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter49.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter49;
        java.net.URL uRL57 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        java.io.File file60 = serializedObjectSupporter58.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file60);
        java.io.File file62 = explodedArchive61.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive61.entries;
        java.io.File file64 = explodedArchive61.getroot();
        explodedArchive61.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive61.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = explodedArchive61.serializedObjectSupporter;
        java.util.Set<java.lang.String> strSet69 = explodedArchive61.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter70 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file71 = serializedObjectSupporter70.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter70.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter70.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter70.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter70.deserializeObjectExplodedArchive4();
        java.io.File file76 = serializedObjectSupporter70.deserializeObjectFile16();
        java.io.File file77 = serializedObjectSupporter70.deserializeObjectFile3();
        explodedArchive61.serializedObjectSupporter = serializedObjectSupporter70;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter70;
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertEquals(uRL57.toString(), "file://hi!:100file");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertNull(serializedObjectSupporter68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file77.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.lang.String str24 = uRL23.getRef();
        java.lang.String str25 = uRL23.getRef();
        int int26 = uRL23.getDefaultPort();
        java.lang.String str27 = uRL23.getHost();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        java.net.URL uRL49 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str50 = uRL49.getUserInfo();
        java.lang.String str51 = uRL49.getUserInfo();
        java.lang.String str52 = uRL49.getPath();
        int int53 = uRL49.getPort();
        java.lang.String str54 = uRL49.toString();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals(uRL49.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "://hi!:100" + "'", str52, "://hi!:100");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100" + "'", str54, "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        fileNotFoundURLConnection17.setIfModifiedSince(100L);
        fileNotFoundURLConnection17.setDoInput(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        fileNotFoundURLConnection17.setDoOutput(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap30 = fileNotFoundURLConnection17.getHeaderFields();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "src/test/resources/root");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file4.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest5);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile4();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.HashSet hashSet3 = serializedObjectSupporter0.deserializeObjectSet1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(hashSet3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        java.net.URLConnection.setDefaultRequestProperty("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.util.jar.Manifest manifest7 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile14();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(manifest7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file10 = serializedObjectSupporter9.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive8();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter9;
        java.io.File file14 = serializedObjectSupporter9.deserializeObjectFile16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(asciiBytes8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        java.io.File file34 = fileEntry27.getFile();
        java.io.File file35 = fileEntry27.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        java.net.URLConnection.setDefaultRequestProperty("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100", "://://hi!:100");
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int25 = fileNotFoundURLConnection17.getHeaderFieldInt("://hi!:100", 0);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str27 = fileNotFoundURLConnection17.getContentType();
        java.security.Permission permission28 = fileNotFoundURLConnection17.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(permission28);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive18.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = null;
        explodedArchive25.entries = asciiBytesMap28;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.io.File file40 = explodedArchive39.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive33.new FileEntry(asciiBytes35, file40);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest47 = serializedObjectSupporter42.deserializeObjectManifest1();
        java.io.File file48 = serializedObjectSupporter42.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive25.new FileEntry(asciiBytes35, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        java.io.File file52 = fileEntry49.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes53 = fileEntry49.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes54 = fileEntry49.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter55.deserializeObjectExplodedArchive16();
        java.io.File file61 = serializedObjectSupporter55.deserializeObjectFile6();
        java.io.File file62 = serializedObjectSupporter55.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive18.new FileEntry(asciiBytes54, file62);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = fileEntry63.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        java.io.File file69 = serializedObjectSupporter65.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry70 = explodedArchive3.new FileEntry(asciiBytes64, file69);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file72 = serializedObjectSupporter71.deserializeObjectFile8();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile15();
        java.io.File file74 = serializedObjectSupporter71.deserializeObjectFile13();
        java.io.File file75 = serializedObjectSupporter71.deserializeObjectFile9();
        java.io.File file76 = serializedObjectSupporter71.deserializeObjectFile15();
        java.util.jar.Manifest manifest77 = serializedObjectSupporter71.deserializeObjectManifest1();
        fileEntry70.serializedObjectSupporter = serializedObjectSupporter71;
        boolean boolean79 = fileEntry70.isDirectory();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes80 = fileEntry70.getName();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(manifest47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes53);
        org.junit.Assert.assertNotNull(asciiBytes54);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file73.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file76.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(asciiBytes80);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        fileNotFoundURLConnection50.setIfModifiedSince((long) (byte) -1);
        fileNotFoundURLConnection50.setDoInput(false);
        boolean boolean55 = fileNotFoundURLConnection50.getDoInput();
        fileNotFoundURLConnection50.setConnectTimeout((int) ' ');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        java.util.jar.Manifest manifest84 = explodedArchive83.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection85 = explodedArchive83.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap86 = explodedArchive83.entries;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest84);
        org.junit.Assert.assertNotNull(entryCollection85);
        org.junit.Assert.assertNotNull(asciiBytesMap86);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        boolean boolean8 = fileNotFoundURLConnection4.getDoInput();
        java.lang.String str9 = fileNotFoundURLConnection4.name;
        long long10 = fileNotFoundURLConnection4.getLastModified();
        java.lang.String str12 = fileNotFoundURLConnection4.getRequestProperty("/hi!");
        fileNotFoundURLConnection4.addRequestProperty("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "/://hi!:100");
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "://hi!:100" + "'", str9, "://hi!:100");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        java.net.URL uRL56 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL57 = new java.net.URL("file", "/hi!:100", (-1), "/file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL58 = new java.net.URL("file", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", (-1), "/hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str59 = uRL58.getHost();
        int int60 = uRL58.getDefaultPort();
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL57.toString(), "file://[/hi!:100]/file");
        org.junit.Assert.assertEquals(uRL58.toString(), "file://[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]/hi!:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]" + "'", str59, "[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive3.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive3.getEntries();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(entryCollection32);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        java.lang.String str26 = fileNotFoundURLConnection17.getContentEncoding();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile15();
        java.io.File file46 = serializedObjectSupporter43.deserializeObjectFile13();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile9();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive10.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive53.entries;
        explodedArchive10.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        boolean boolean58 = explodedArchive57.filtered;
        java.util.jar.Manifest manifest59 = explodedArchive57.getManifest();
        java.util.jar.Manifest manifest60 = explodedArchive57.getManifest();
        java.io.File file61 = explodedArchive57.getroot();
        boolean boolean62 = explodedArchive57.filtered;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file61.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        long long22 = fileNotFoundURLConnection17.getDate();
        boolean boolean23 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setDoInput(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive7.entries = asciiBytesMap10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        java.lang.String str17 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest28 = serializedObjectSupporter27.deserializeObjectManifest1();
        explodedArchive25.manifest = manifest28;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = null;
        explodedArchive33.entries = asciiBytesMap36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes43 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter44.deserializeObjectExplodedArchive11();
        java.io.File file46 = serializedObjectSupporter44.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file46);
        java.io.File file48 = explodedArchive47.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive41.new FileEntry(asciiBytes43, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file51 = serializedObjectSupporter50.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter50.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter50.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter50.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest55 = serializedObjectSupporter50.deserializeObjectManifest1();
        java.io.File file56 = serializedObjectSupporter50.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive33.new FileEntry(asciiBytes43, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        java.io.File file60 = serializedObjectSupporter58.deserializeObjectFile15();
        java.io.File file61 = serializedObjectSupporter58.deserializeObjectFile13();
        java.io.File file62 = serializedObjectSupporter58.deserializeObjectFile9();
        java.io.File file63 = serializedObjectSupporter58.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry64 = explodedArchive25.new FileEntry(asciiBytes43, file63);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = explodedArchive21.new FileEntry(asciiBytes43, file66);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter68.deserializeObjectExplodedArchive12();
        java.io.File file70 = serializedObjectSupporter68.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = explodedArchive15.new FileEntry(asciiBytes43, file70);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive15.entries;
        explodedArchive7.entries = asciiBytesMap72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap72);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str17, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest28);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(asciiBytes43);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNotNull(manifest55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file60.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file63.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap72);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        fileNotFoundURLConnection17.setRequestProperty("hi!", "");
        long long29 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        int int31 = fileNotFoundURLConnection17.getHeaderFieldInt("://hi!:100/hi!", 35);
        fileNotFoundURLConnection17.setReadTimeout(1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 35 + "'", int31 == 35);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap23 = fileNotFoundURLConnection17.getHeaderFields();
        boolean boolean24 = fileNotFoundURLConnection17.getDoOutput();
        boolean boolean25 = fileNotFoundURLConnection17.getDoInput();
        fileNotFoundURLConnection17.setRequestProperty("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF", "[://hi!:100/hi!]");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        java.util.Set<java.lang.String> strSet84 = explodedArchive83.getSKIPPED_NAMES();
        java.io.File file85 = explodedArchive83.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file85.toString(), "src/test/resources/root");
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str7 = explodedArchive3.toString();
        java.io.File file8 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter9.deserializeObjectExplodedArchive7();
        java.io.File file14 = serializedObjectSupporter9.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter9.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter9.deserializeObjectExplodedArchive6();
        java.io.File file17 = serializedObjectSupporter9.deserializeObjectFile11();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file17, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file14.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        java.net.URL uRL48 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file51 = serializedObjectSupporter50.deserializeObjectFile7();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile12();
        java.io.File file53 = serializedObjectSupporter50.deserializeObjectFile10();
        java.io.File file54 = serializedObjectSupporter50.deserializeObjectFile7();
        java.io.File file55 = serializedObjectSupporter50.deserializeObjectFile4();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter50;
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(serializedObjectSupporter49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        boolean boolean15 = explodedArchive3.filtered;
        boolean boolean16 = explodedArchive3.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asciiBytes17);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str7 = explodedArchive3.toString();
        java.io.File file8 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file10 = serializedObjectSupporter9.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter9.deserializeObjectFile9();
        java.io.File file14 = serializedObjectSupporter9.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter9.deserializeObjectExplodedArchive5();
        java.io.File file16 = serializedObjectSupporter9.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter9.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter9.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter9.deserializeObjectExplodedArchive5();
        java.io.File file20 = serializedObjectSupporter9.deserializeObjectFile13();
        java.util.jar.Manifest manifest21 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest21;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file16.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(manifest21);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        int int5 = fileNotFoundURLConnection4.getContentLength();
        java.lang.String str7 = fileNotFoundURLConnection4.getHeaderFieldKey((int) (byte) 100);
        fileNotFoundURLConnection4.setDoOutput(false);
        long long12 = fileNotFoundURLConnection4.getHeaderFieldLong("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 97L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = fileNotFoundURLConnection4.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        boolean boolean24 = fileNotFoundURLConnection17.getDoInput();
        long long25 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        java.security.Permission permission28 = fileNotFoundURLConnection17.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(permission28);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        fileNotFoundURLConnection17.setUseCaches(true);
        fileNotFoundURLConnection17.setDoOutput(true);
        fileNotFoundURLConnection17.setRequestProperty("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "://://hi!:100");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        java.io.File file53 = serializedObjectSupporter49.deserializeObjectFile9();
        java.io.File file54 = serializedObjectSupporter49.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter49.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter49;
        java.net.URL uRL57 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        java.io.File file62 = serializedObjectSupporter58.deserializeObjectFile9();
        java.io.File file63 = serializedObjectSupporter58.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter58.deserializeObjectExplodedArchive5();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter58;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter66.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter66.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter66.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter66.deserializeObjectExplodedArchive7();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter66.deserializeObjectExplodedArchive12();
        java.util.jar.Manifest manifest73 = serializedObjectSupporter66.deserializeObjectManifest1();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter66;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter66.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertEquals(uRL57.toString(), "file://hi!:100file");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(manifest73);
        org.junit.Assert.assertNull(explodedArchive75);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getLastModified();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("://hi!:100", "://hi!:100/hi!", (int) (short) 1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getFile();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL11.toString(), "://hi!:100://[://hi!:100/hi!]:1hi!:100");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile11();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        boolean boolean22 = fileNotFoundURLConnection17.getDefaultUseCaches();
        java.lang.Class[] classArray23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = fileNotFoundURLConnection17.getContent(classArray23);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = explodedArchive3.serializedObjectSupporter;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive3.getEntries();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(entryCollection9);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = fileEntry27.serializedObjectSupporter;
        java.io.File file33 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes34 = fileEntry27.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = fileEntry27.name;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes34);
        org.junit.Assert.assertNotNull(asciiBytes35);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        java.io.File file34 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry27.name;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = fileEntry27.serializedObjectSupporter;
        boolean boolean38 = fileEntry27.isDirectory();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(asciiBytes33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNotNull(serializedObjectSupporter37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        int int30 = fileNotFoundURLConnection17.getConnectTimeout();
        long long31 = fileNotFoundURLConnection17.getLastModified();
        long long32 = fileNotFoundURLConnection17.getIfModifiedSince();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL10.getPath();
        java.lang.String str22 = uRL10.getQuery();
        java.net.Proxy proxy23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection24 = uRL10.openConnection(proxy23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        int int24 = fileNotFoundURLConnection17.getReadTimeout();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream25 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        fileNotFoundURLConnection4.setIfModifiedSince((-1L));
        int int9 = fileNotFoundURLConnection4.getReadTimeout();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str29 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str31 = fileNotFoundURLConnection17.getHeaderField("[hi!:100]:0");
        int int34 = fileNotFoundURLConnection17.getHeaderFieldInt("", 0);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        boolean boolean4 = explodedArchive3.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file10 = serializedObjectSupporter9.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter9.deserializeObjectFile9();
        java.io.File file14 = serializedObjectSupporter9.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter9.deserializeObjectExplodedArchive5();
        java.io.File file16 = serializedObjectSupporter9.deserializeObjectFile12();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter9.deserializeObjectExplodedArchive3();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive18);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str22 = fileNotFoundURLConnection17.getHeaderField((-1));
        java.lang.String str23 = fileNotFoundURLConnection17.name;
        fileNotFoundURLConnection17.setIfModifiedSince(1L);
        int int26 = fileNotFoundURLConnection17.getContentLength();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        java.util.Set<java.lang.String> strSet41 = explodedArchive3.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest42 = explodedArchive3.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive3.getEntries();
        java.net.URL uRL44 = explodedArchive3.getUrl();
        java.lang.Object obj45 = uRL44.getContent();
        java.net.Proxy proxy46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection47 = uRL44.openConnection(proxy46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(manifest42);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNotNull(uRL44);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getDoInput();
        java.lang.String str27 = fileNotFoundURLConnection17.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str27, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        java.security.Permission permission28 = fileNotFoundURLConnection17.getPermission();
        long long31 = fileNotFoundURLConnection17.getHeaderFieldLong("[hi!:100]:0", 52L);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(permission28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.net.URL uRL14 = new java.net.URL(uRL10, "file");
        java.lang.String str15 = uRL10.getPath();
        java.lang.String str16 = uRL10.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        fileNotFoundURLConnection17.setDoOutput(true);
        java.net.URL uRL30 = fileNotFoundURLConnection17.getURL();
        long long31 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(uRL30);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter8.deserializeObjectManifest1();
        java.util.jar.Manifest manifest14 = serializedObjectSupporter8.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest14;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNotNull(manifest14);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive3();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive9();
        java.io.File file36 = serializedObjectSupporter31.deserializeObjectFile4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        long long27 = fileNotFoundURLConnection17.getDate();
        boolean boolean28 = fileNotFoundURLConnection17.getUseCaches();
        java.lang.String str29 = fileNotFoundURLConnection17.getname();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setIfModifiedSince(0L);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long29 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = explodedArchive3.serializedObjectSupporter;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet64 = explodedArchive3.getSKIPPED_NAMES();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(strSet64);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        java.lang.String str22 = fileNotFoundURLConnection17.name;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap23 = fileNotFoundURLConnection17.getHeaderFields();
        boolean boolean24 = fileNotFoundURLConnection17.getDoOutput();
        long long25 = fileNotFoundURLConnection17.getContentLengthLong();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        boolean boolean29 = fileNotFoundURLConnection17.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile13();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        int int21 = fileNotFoundURLConnection17.getConnectTimeout();
        int int24 = fileNotFoundURLConnection17.getHeaderFieldInt("://hi!:100/hi!", (int) (byte) 0);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file11 = serializedObjectSupporter0.deserializeObjectFile1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file11.toString(), "src/test/resources/root");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.io.File file8 = explodedArchive3.root;
        java.util.jar.Manifest manifest9 = explodedArchive3.getManifest();
        java.lang.String str10 = explodedArchive3.toString();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection11 = uRL10.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.HashSet hashSet7 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile1();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(hashSet7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file9.toString(), "src/test/resources/root");
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        java.util.Set<java.lang.String> strSet41 = explodedArchive3.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest42 = explodedArchive3.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive3.getEntries();
        java.net.URL uRL44 = explodedArchive3.getUrl();
        java.lang.Object obj45 = uRL44.getContent();
        java.lang.String str46 = uRL44.toString();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(manifest42);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNotNull(uRL44);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str46, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL15, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        java.lang.String str27 = explodedArchive25.toString();
        java.net.URL uRL28 = explodedArchive25.getUrl();
        java.lang.String str29 = uRL28.getQuery();
        java.lang.Object obj30 = uRL28.getContent();
        java.net.URL uRL32 = new java.net.URL(uRL28, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.net.URL uRL34 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str35 = uRL34.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL34, "://hi!:100");
        fileNotFoundURLConnection37.setUseCaches(true);
        java.lang.String str40 = fileNotFoundURLConnection37.name;
        java.net.URL uRL41 = fileNotFoundURLConnection37.getURL();
        java.net.URL uRL43 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str44 = uRL43.getProtocol();
        java.lang.Class[] classArray45 = new java.lang.Class[] {};
        java.lang.Object obj46 = uRL43.getContent(classArray45);
        java.lang.Object obj47 = uRL41.getContent(classArray45);
        java.lang.Object obj48 = uRL32.getContent(classArray45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = fileNotFoundURLConnection21.getContent(classArray45);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str27, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL28);
        org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL34.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str35, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "://hi!:100" + "'", str40, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL41);
        org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file" + "'", str44, "file");
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive3.getNestedArchives(entryFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.util.Set<java.lang.String> strSet33 = explodedArchive32.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive32.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = null;
        explodedArchive32.entries = asciiBytesMap35;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.util.Set<java.lang.String> strSet41 = explodedArchive40.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes42 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive40.new FileEntry(asciiBytes42, file47);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter49.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest54 = serializedObjectSupporter49.deserializeObjectManifest1();
        java.io.File file55 = serializedObjectSupporter49.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry56 = explodedArchive32.new FileEntry(asciiBytes42, file55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        java.io.File file59 = serializedObjectSupporter57.deserializeObjectFile15();
        java.io.File file60 = serializedObjectSupporter57.deserializeObjectFile13();
        java.util.jar.Manifest manifest61 = serializedObjectSupporter57.deserializeObjectManifest1();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile7();
        java.io.File file63 = serializedObjectSupporter57.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry64 = explodedArchive3.new FileEntry(asciiBytes42, file63);
        java.io.File file65 = explodedArchive3.getroot();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest66 = explodedArchive3.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(asciiBytes42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(manifest54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file59.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(manifest61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file62.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int25 = fileNotFoundURLConnection17.getHeaderFieldInt("://hi!:100", 0);
        boolean boolean26 = fileNotFoundURLConnection17.getDefaultUseCaches();
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.util.Set<java.lang.String> strSet15 = explodedArchive3.getSKIPPED_NAMES();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getPath();
        java.lang.String str30 = uRL28.getUserInfo();
        java.lang.String str31 = uRL28.getHost();
        java.net.URL uRL33 = new java.net.URL(uRL28, "hi!");
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getHost();
        java.net.URL uRL37 = new java.net.URL(uRL33, "hi!:100");
        boolean boolean38 = uRL10.sameFile(uRL37);
        java.lang.String str39 = uRL10.getProtocol();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile16();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive11);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL32, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL20, "file", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL58, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = uRL58.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -83");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:100" + "'", str34, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL58.toString(), "://hi!:100/file");
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        java.lang.String str9 = fileNotFoundURLConnection4.getRequestProperty("");
        int int10 = fileNotFoundURLConnection4.getConnectTimeout();
        java.lang.String str11 = fileNotFoundURLConnection4.getname();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "://hi!:100" + "'", str11, "://hi!:100");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        java.lang.String str31 = fileNotFoundURLConnection17.name;
        java.lang.String str33 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.lang.String str13 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.io.File file22 = explodedArchive21.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest24 = serializedObjectSupporter23.deserializeObjectManifest1();
        explodedArchive21.manifest = manifest24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = null;
        explodedArchive29.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.util.Set<java.lang.String> strSet38 = explodedArchive37.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.io.File file44 = explodedArchive43.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive37.new FileEntry(asciiBytes39, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter46.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter46.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter46.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest51 = serializedObjectSupporter46.deserializeObjectManifest1();
        java.io.File file52 = serializedObjectSupporter46.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive29.new FileEntry(asciiBytes39, file52);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file55 = serializedObjectSupporter54.deserializeObjectFile8();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile15();
        java.io.File file57 = serializedObjectSupporter54.deserializeObjectFile13();
        java.io.File file58 = serializedObjectSupporter54.deserializeObjectFile9();
        java.io.File file59 = serializedObjectSupporter54.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive21.new FileEntry(asciiBytes39, file59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file62 = serializedObjectSupporter61.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive17.new FileEntry(asciiBytes39, file62);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter64 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter64.deserializeObjectExplodedArchive12();
        java.io.File file66 = serializedObjectSupporter64.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = explodedArchive11.new FileEntry(asciiBytes39, file66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap68;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection70 = explodedArchive3.getEntries();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str13, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest24);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(manifest51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file56.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file59.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(entryCollection70);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        java.net.URL uRL49 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str50 = uRL49.getUserInfo();
        java.lang.String str51 = uRL49.getUserInfo();
        java.lang.String str52 = uRL49.getPath();
        java.net.URL uRL54 = new java.net.URL(uRL49, "://hi!:100");
        java.lang.String str55 = uRL49.getFile();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals(uRL49.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "://hi!:100" + "'", str52, "://hi!:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://://hi!:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "://hi!:100" + "'", str55, "://hi!:100");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        fileNotFoundURLConnection4.setDoOutput(false);
        long long12 = fileNotFoundURLConnection4.getHeaderFieldDate("", (long) '4');
        long long15 = fileNotFoundURLConnection4.getHeaderFieldLong("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 100L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream16 = fileNotFoundURLConnection4.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 52L + "'", long12 == 52L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getRef();
        int int17 = uRL15.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL15, "");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream20 = fileNotFoundURLConnection19.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setDoInput(true);
        long long31 = fileNotFoundURLConnection17.getLastModified();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getDoInput();
        java.lang.String str28 = fileNotFoundURLConnection17.getHeaderField("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        boolean boolean29 = fileNotFoundURLConnection17.getDefaultUseCaches();
        long long32 = fileNotFoundURLConnection17.getHeaderFieldDate("/file", (long) 0);
        long long33 = fileNotFoundURLConnection17.getDate();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("://hi!:100/hi!", "://hi!:100/hi!", 1, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        java.lang.String str14 = uRL13.getUserInfo();
        java.net.URLConnection uRLConnection15 = filteredURLStreamHandler10.openConnection(uRL13);
        java.lang.String str16 = uRL13.getFile();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL11.toString(), "://hi!:100/hi!://[://hi!:100/hi!]:1://hi!:100");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100" + "'", str16, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean29 = fileNotFoundURLConnection17.getDoOutput();
        fileNotFoundURLConnection17.setIfModifiedSince(100L);
        fileNotFoundURLConnection17.setUseCaches(false);
        fileNotFoundURLConnection17.setDoOutput(false);
        java.lang.String str36 = fileNotFoundURLConnection17.toString();
        fileNotFoundURLConnection17.addRequestProperty("://hi!:100/hi!", "://hi!:100");
        fileNotFoundURLConnection17.setReadTimeout((int) (short) 0);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str36, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean27 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = filteredURLStreamHandler9.serializedObjectSupporter;
        java.io.File file45 = serializedObjectSupporter44.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter44.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter44.deserializeObjectExplodedArchive10();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.util.HashSet hashSet7 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(hashSet7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]", "file:/tmp/junit3853753617501372040/junit897402010941125298");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: org.springframework.boot.loader.archive.explodedarchive$filenotfoundurlconnection:file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long22 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str23 = fileNotFoundURLConnection17.name;
        long long24 = fileNotFoundURLConnection17.getExpiration();
        java.lang.String str26 = fileNotFoundURLConnection17.getHeaderField("://hi!:100");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive11);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        boolean boolean25 = fileNotFoundURLConnection17.getUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter54.deserializeObjectExplodedArchive11();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file56);
        java.util.Set<java.lang.String> strSet58 = explodedArchive57.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
        java.util.Set<java.lang.String> strSet65 = explodedArchive64.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive64.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = null;
        explodedArchive64.entries = asciiBytesMap67;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive11();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file71);
        java.util.Set<java.lang.String> strSet73 = explodedArchive72.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes74 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter75 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter75.deserializeObjectExplodedArchive11();
        java.io.File file77 = serializedObjectSupporter75.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file77);
        java.io.File file79 = explodedArchive78.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry80 = explodedArchive72.new FileEntry(asciiBytes74, file79);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter81 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file82 = serializedObjectSupporter81.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter81.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = serializedObjectSupporter81.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter81.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest86 = serializedObjectSupporter81.deserializeObjectManifest1();
        java.io.File file87 = serializedObjectSupporter81.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = explodedArchive64.new FileEntry(asciiBytes74, file87);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter89 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry88.serializedObjectSupporter = serializedObjectSupporter89;
        java.io.File file91 = fileEntry88.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter92 = fileEntry88.serializedObjectSupporter;
        filteredURLStreamHandler59.serializedObjectSupporter = serializedObjectSupporter92;
        java.net.URL uRL94 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL96 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.net.URLConnection uRLConnection97 = filteredURLStreamHandler59.openConnection(uRL96);
        long long98 = uRLConnection97.getDate();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals(uRL60.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(asciiBytes74);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNotNull(manifest86);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter92);
        org.junit.Assert.assertEquals(uRL94.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL96.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRLConnection97);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 0L + "'", long98 == 0L);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        int int25 = fileNotFoundURLConnection17.getConnectTimeout();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file27 = serializedObjectSupporter26.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter26.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter26.deserializeObjectExplodedArchive14();
        java.io.File file30 = serializedObjectSupporter26.deserializeObjectFile9();
        java.io.File file31 = serializedObjectSupporter26.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter26.deserializeObjectExplodedArchive5();
        java.io.File file33 = serializedObjectSupporter26.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter26.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter26.deserializeObjectExplodedArchive2();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter26;
        java.io.File file37 = serializedObjectSupporter26.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file37 = serializedObjectSupporter36.deserializeObjectFile8();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file39 = serializedObjectSupporter36.deserializeObjectFile13();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile9();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive3.new FileEntry(asciiBytes21, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = explodedArchive3.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(serializedObjectSupporter43);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getFile();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.HashSet hashSet3 = serializedObjectSupporter0.deserializeObjectSet1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(hashSet3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        fileNotFoundURLConnection50.setDefaultUseCaches(true);
        java.lang.String str54 = fileNotFoundURLConnection50.getHeaderField("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        long long55 = fileNotFoundURLConnection50.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile10();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile2();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("://://hi!:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        boolean boolean32 = fileNotFoundURLConnection17.getDoInput();
        int int35 = fileNotFoundURLConnection17.getHeaderFieldInt("://hi!:100/hi!", (int) '#');
        boolean boolean36 = fileNotFoundURLConnection17.getDoOutput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 35 + "'", int35 == 35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        long long24 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!:100", (long) (byte) 0);
        boolean boolean25 = fileNotFoundURLConnection17.getDefaultUseCaches();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int30 = fileNotFoundURLConnection17.getHeaderFieldInt("[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]", (int) 'a');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 97 + "'", int30 == 97);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getProtocol();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.util.Set<java.lang.String> strSet11 = explodedArchive10.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        java.lang.String str15 = uRL13.getUserInfo();
        java.lang.String str16 = uRL13.getHost();
        java.net.URL uRL18 = new java.net.URL(uRL13, "hi!");
        java.lang.String str19 = uRL18.getQuery();
        java.lang.String str20 = uRL18.getHost();
        java.net.URL uRL22 = new java.net.URL(uRL18, "hi!:100");
        boolean boolean23 = uRL1.sameFile(uRL18);
        java.lang.String str24 = uRL18.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = uRL18.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals(uRL13.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL32, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL20, "file", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL20, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        java.lang.String str61 = uRL20.getAuthority();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:100" + "'", str34, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL58.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:100" + "'", str61, "hi!:100");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getRef();
        int int17 = uRL15.getPort();
        java.lang.String str18 = uRL15.getUserInfo();
        java.net.URL uRL20 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str21 = uRL20.getProtocol();
        java.lang.Class[] classArray22 = new java.lang.Class[] {};
        java.lang.Object obj23 = uRL20.getContent(classArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL15.getContent(classArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "file" + "'", str21, "file");
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        java.util.jar.Manifest manifest7 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive9 = explodedArchive3.getFilteredArchive(entryRenameFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest7);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.HashSet hashSet4 = serializedObjectSupporter0.deserializeObjectSet1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(hashSet4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        java.util.jar.Manifest manifest7 = explodedArchive3.getManifest();
        java.net.URL uRL8 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter9.deserializeObjectExplodedArchive7();
        java.io.File file14 = serializedObjectSupporter9.deserializeObjectFile3();
        java.io.File file15 = serializedObjectSupporter9.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter16.deserializeObjectExplodedArchive2();
        java.io.File file19 = serializedObjectSupporter16.deserializeObjectFile3();
        java.io.File file20 = serializedObjectSupporter16.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.util.Set<java.lang.String> strSet25 = explodedArchive24.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive24.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = null;
        explodedArchive24.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        java.lang.String str34 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.io.File file43 = explodedArchive42.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest45 = serializedObjectSupporter44.deserializeObjectManifest1();
        explodedArchive42.manifest = manifest45;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter47.deserializeObjectExplodedArchive11();
        java.io.File file49 = serializedObjectSupporter47.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file49);
        java.util.Set<java.lang.String> strSet51 = explodedArchive50.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive50.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = null;
        explodedArchive50.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        java.io.File file57 = serializedObjectSupporter55.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file57);
        java.util.Set<java.lang.String> strSet59 = explodedArchive58.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes60 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
        java.io.File file65 = explodedArchive64.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry66 = explodedArchive58.new FileEntry(asciiBytes60, file65);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter67 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file68 = serializedObjectSupporter67.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter67.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter67.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter67.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest72 = serializedObjectSupporter67.deserializeObjectManifest1();
        java.io.File file73 = serializedObjectSupporter67.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry74 = explodedArchive50.new FileEntry(asciiBytes60, file73);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter75 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file76 = serializedObjectSupporter75.deserializeObjectFile8();
        java.io.File file77 = serializedObjectSupporter75.deserializeObjectFile15();
        java.io.File file78 = serializedObjectSupporter75.deserializeObjectFile13();
        java.io.File file79 = serializedObjectSupporter75.deserializeObjectFile9();
        java.io.File file80 = serializedObjectSupporter75.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry81 = explodedArchive42.new FileEntry(asciiBytes60, file80);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter82 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file83 = serializedObjectSupporter82.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry84 = explodedArchive38.new FileEntry(asciiBytes60, file83);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter85 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = serializedObjectSupporter85.deserializeObjectExplodedArchive12();
        java.io.File file87 = serializedObjectSupporter85.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = explodedArchive32.new FileEntry(asciiBytes60, file87);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap89 = explodedArchive32.entries;
        explodedArchive24.entries = asciiBytesMap89;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive91 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap89);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive92 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap89);
        java.util.jar.Manifest manifest93 = explodedArchive92.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap94 = explodedArchive92.entries;
        explodedArchive3.entries = asciiBytesMap94;
        java.io.File file96 = explodedArchive3.root;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file14.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file15.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file19.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str34, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest45);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(asciiBytes60);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNotNull(manifest72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file77.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file80.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file87.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap89);
        org.junit.Assert.assertNull(manifest93);
        org.junit.Assert.assertNotNull(asciiBytesMap94);
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file96.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file9.toString(), "src/test/resources/root");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        int int18 = uRL17.getDefaultPort();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.util.Set<java.lang.String> strSet39 = explodedArchive38.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive38.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = null;
        explodedArchive38.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.util.Set<java.lang.String> strSet47 = explodedArchive46.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes48 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter49.deserializeObjectExplodedArchive11();
        java.io.File file51 = serializedObjectSupporter49.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file51);
        java.io.File file53 = explodedArchive52.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive46.new FileEntry(asciiBytes48, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file56 = serializedObjectSupporter55.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest60 = serializedObjectSupporter55.deserializeObjectManifest1();
        java.io.File file61 = serializedObjectSupporter55.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry62 = explodedArchive38.new FileEntry(asciiBytes48, file61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry62.serializedObjectSupporter = serializedObjectSupporter63;
        java.io.File file65 = fileEntry62.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = fileEntry62.serializedObjectSupporter;
        filteredURLStreamHandler33.serializedObjectSupporter = serializedObjectSupporter66;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = filteredURLStreamHandler33.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter69.deserializeObjectExplodedArchive14();
        java.io.File file73 = serializedObjectSupporter69.deserializeObjectFile9();
        java.io.File file74 = serializedObjectSupporter69.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter69.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler33.serializedObjectSupporter = serializedObjectSupporter69;
        java.net.URL uRL77 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL78 = new java.net.URL(uRL17, "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL80 = new java.net.URL(uRL78, "hi!");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(asciiBytes48);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(manifest60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter66);
        org.junit.Assert.assertNotNull(serializedObjectSupporter68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertEquals(uRL77.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL78.toString(), "://hi!:100/hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL80.toString(), "://hi!:100/hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = filteredURLStreamHandler17.serializedObjectSupporter;
        java.net.URL uRL53 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL54 = new java.net.URL("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 0, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file56 = serializedObjectSupporter55.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive14();
        java.io.File file59 = serializedObjectSupporter55.deserializeObjectFile9();
        java.io.File file60 = serializedObjectSupporter55.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter55.deserializeObjectExplodedArchive5();
        java.io.File file62 = serializedObjectSupporter55.deserializeObjectFile12();
        java.io.File file63 = serializedObjectSupporter55.deserializeObjectFile15();
        java.io.File file64 = serializedObjectSupporter55.deserializeObjectFile12();
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter55;
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
        org.junit.Assert.assertEquals(uRL53.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!:100://[hi!:100]:0file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0hi!");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file63.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getPath();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("://hi!:100", "file:/tmp/junit3853753617501372040/junit897402010941125298", 97, "[hi!:100]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "[hi!:100]:0", (int) '4', "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        int int21 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.lang.String str24 = fileNotFoundURLConnection17.getContentType();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.util.Set<java.lang.String> strSet9 = explodedArchive8.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = null;
        explodedArchive8.entries = asciiBytesMap11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        java.lang.String str18 = explodedArchive16.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.io.File file27 = explodedArchive26.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest29 = serializedObjectSupporter28.deserializeObjectManifest1();
        explodedArchive26.manifest = manifest29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = null;
        explodedArchive34.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.util.Set<java.lang.String> strSet43 = explodedArchive42.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes44 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.io.File file49 = explodedArchive48.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive42.new FileEntry(asciiBytes44, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file52 = serializedObjectSupporter51.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter51.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter51.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter51.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest56 = serializedObjectSupporter51.deserializeObjectManifest1();
        java.io.File file57 = serializedObjectSupporter51.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive34.new FileEntry(asciiBytes44, file57);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file60 = serializedObjectSupporter59.deserializeObjectFile8();
        java.io.File file61 = serializedObjectSupporter59.deserializeObjectFile15();
        java.io.File file62 = serializedObjectSupporter59.deserializeObjectFile13();
        java.io.File file63 = serializedObjectSupporter59.deserializeObjectFile9();
        java.io.File file64 = serializedObjectSupporter59.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive26.new FileEntry(asciiBytes44, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry68 = explodedArchive22.new FileEntry(asciiBytes44, file67);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive12();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive16.new FileEntry(asciiBytes44, file71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive16.entries;
        explodedArchive8.entries = asciiBytesMap73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap73);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive75.entries;
        java.util.jar.Manifest manifest77 = explodedArchive75.manifest;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str18, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest29);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(asciiBytes44);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(manifest56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file61.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file64.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertNull(manifest77);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.net.URL uRL6 = new java.net.URL(uRL1, "file");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        java.net.URL uRL56 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        java.io.File file63 = serializedObjectSupporter58.deserializeObjectFile7();
        java.util.jar.Manifest manifest64 = serializedObjectSupporter58.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter58.deserializeObjectExplodedArchive12();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter58;
        java.net.URL uRL68 = new java.net.URL(uRL6, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter69.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter69.deserializeObjectExplodedArchive2();
        java.io.File file74 = serializedObjectSupporter69.deserializeObjectFile11();
        java.io.File file75 = serializedObjectSupporter69.deserializeObjectFile4();
        java.io.File file76 = serializedObjectSupporter69.deserializeObjectFile1();
        java.io.File file77 = serializedObjectSupporter69.deserializeObjectFile14();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter69;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter79 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/file");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(serializedObjectSupporter57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(manifest64);
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertEquals(uRL68.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file76.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter79);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile5();
        java.util.HashSet hashSet6 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(hashSet6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile14();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        int int18 = uRL17.getDefaultPort();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.util.Set<java.lang.String> strSet39 = explodedArchive38.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive38.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = null;
        explodedArchive38.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.util.Set<java.lang.String> strSet47 = explodedArchive46.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes48 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter49.deserializeObjectExplodedArchive11();
        java.io.File file51 = serializedObjectSupporter49.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file51);
        java.io.File file53 = explodedArchive52.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive46.new FileEntry(asciiBytes48, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file56 = serializedObjectSupporter55.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest60 = serializedObjectSupporter55.deserializeObjectManifest1();
        java.io.File file61 = serializedObjectSupporter55.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry62 = explodedArchive38.new FileEntry(asciiBytes48, file61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry62.serializedObjectSupporter = serializedObjectSupporter63;
        java.io.File file65 = fileEntry62.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = fileEntry62.serializedObjectSupporter;
        filteredURLStreamHandler33.serializedObjectSupporter = serializedObjectSupporter66;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = filteredURLStreamHandler33.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter69.deserializeObjectExplodedArchive14();
        java.io.File file73 = serializedObjectSupporter69.deserializeObjectFile9();
        java.io.File file74 = serializedObjectSupporter69.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter69.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler33.serializedObjectSupporter = serializedObjectSupporter69;
        java.net.URL uRL77 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL78 = new java.net.URL(uRL17, "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL17, "file");
        java.lang.String str81 = uRL17.getPath();
        int int82 = uRL17.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = uRL17.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(asciiBytes48);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(manifest60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter66);
        org.junit.Assert.assertNotNull(serializedObjectSupporter68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertEquals(uRL77.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL78.toString(), "://hi!:100/hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/hi!:100" + "'", str81, "/hi!:100");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.lang.String str6 = fileNotFoundURLConnection4.getHeaderField("hi!:100");
        java.lang.String str8 = fileNotFoundURLConnection4.getHeaderField(0);
        fileNotFoundURLConnection4.setAllowUserInteraction(false);
        fileNotFoundURLConnection4.setDefaultUseCaches(true);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        java.net.URLConnection.setDefaultRequestProperty("[hi!:100]:0", "hi!");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter21.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter21.deserializeObjectExplodedArchive4();
        java.io.File file28 = serializedObjectSupporter21.deserializeObjectFile16();
        java.io.File file29 = serializedObjectSupporter21.deserializeObjectFile1();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file29.toString(), "src/test/resources/root");
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getRequestProperties();
        long long21 = fileNotFoundURLConnection17.getLastModified();
        long long22 = fileNotFoundURLConnection17.getContentLengthLong();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        fileNotFoundURLConnection17.setUseCaches(true);
        long long27 = fileNotFoundURLConnection17.getHeaderFieldDate("/hi!:100", (long) '#');
        long long28 = fileNotFoundURLConnection17.getContentLengthLong();
        int int29 = fileNotFoundURLConnection17.getConnectTimeout();
        java.net.URL uRL30 = fileNotFoundURLConnection17.getURL();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 35L + "'", long27 == 35L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(uRL30);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", 100L);
        boolean boolean30 = fileNotFoundURLConnection17.getDefaultUseCaches();
        fileNotFoundURLConnection17.addRequestProperty("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100", "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100", "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        java.net.URL uRL52 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL53 = new java.net.URL("file", "/hi!:100", (-1), "/file", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL55 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str56 = uRL55.getProtocol();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
        java.util.Set<java.lang.String> strSet65 = explodedArchive64.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str68 = uRL67.getPath();
        java.lang.String str69 = uRL67.getUserInfo();
        java.lang.String str70 = uRL67.getHost();
        java.net.URL uRL72 = new java.net.URL(uRL67, "hi!");
        java.lang.String str73 = uRL72.getQuery();
        java.lang.String str74 = uRL72.getHost();
        java.net.URL uRL76 = new java.net.URL(uRL72, "hi!:100");
        boolean boolean77 = uRL55.sameFile(uRL72);
        java.lang.String str78 = uRL72.getRef();
        int int79 = uRL72.getDefaultPort();
        boolean boolean80 = uRL53.sameFile(uRL72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = uRL53.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -83");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL53.toString(), "file://[/hi!:100]/file");
        org.junit.Assert.assertEquals(uRL55.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "file" + "'", str56, "file");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertEquals(uRL67.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals(uRL72.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals(uRL76.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.io.File file9 = explodedArchive3.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(asciiBytes8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile13();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        fileNotFoundURLConnection17.setUseCaches(true);
        fileNotFoundURLConnection17.setRequestProperty("hi!:100", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        java.lang.String str32 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        long long28 = fileNotFoundURLConnection17.getLastModified();
        long long29 = fileNotFoundURLConnection17.getLastModified();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive3.getEntries();
        java.net.URL uRL62 = explodedArchive3.getUrl();
        int int63 = uRL62.getDefaultPort();
        java.lang.String str64 = uRL62.getHost();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(uRL62);
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile15();
        java.io.File file46 = serializedObjectSupporter43.deserializeObjectFile13();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile9();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive10.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive53.entries;
        explodedArchive10.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter58.deserializeObjectExplodedArchive10();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile1();
        explodedArchive57.serializedObjectSupporter = serializedObjectSupporter58;
        explodedArchive57.filtered = true;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file69 = serializedObjectSupporter68.deserializeObjectFile8();
        java.io.File file70 = serializedObjectSupporter68.deserializeObjectFile15();
        java.io.File file71 = serializedObjectSupporter68.deserializeObjectFile13();
        java.io.File file72 = serializedObjectSupporter68.deserializeObjectFile9();
        java.io.File file73 = serializedObjectSupporter68.deserializeObjectFile15();
        java.io.File file74 = serializedObjectSupporter68.deserializeObjectFile7();
        java.util.jar.Manifest manifest75 = serializedObjectSupporter68.deserializeObjectManifest1();
        explodedArchive57.manifest = manifest75;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file64.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file70.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file72.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file73.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(manifest75);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL25 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str26 = uRL25.getAuthority();
        boolean boolean27 = uRL23.sameFile(uRL25);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI28 = uRL23.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        fileNotFoundURLConnection17.setUseCaches(true);
        fileNotFoundURLConnection17.setDoOutput(true);
        int int29 = fileNotFoundURLConnection17.getContentLength();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap30 = fileNotFoundURLConnection17.getRequestProperties();
        boolean boolean31 = fileNotFoundURLConnection17.getAllowUserInteraction();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.util.Set<java.lang.String> strSet14 = explodedArchive13.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.io.File file20 = explodedArchive19.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive13.new FileEntry(asciiBytes15, file20);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes22 = explodedArchive13.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.io.File file27 = explodedArchive26.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest29 = serializedObjectSupporter28.deserializeObjectManifest1();
        explodedArchive26.manifest = manifest29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.io.File file35 = explodedArchive34.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive34.entries;
        explodedArchive26.entries = asciiBytesMap36;
        explodedArchive13.entries = asciiBytesMap36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap36);
        java.util.Set<java.lang.String> strSet40 = explodedArchive39.getSKIPPED_NAMES();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        explodedArchive39.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive39.getEntries();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(asciiBytes15);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes22);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest29);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNotNull(entryCollection44);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        java.lang.String str8 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive3.new FilteredURLStreamHandler();
        java.net.URL uRL10 = explodedArchive3.getUrl();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str8, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL10);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile14();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.lang.String str6 = fileNotFoundURLConnection4.getHeaderField("hi!:100");
        long long7 = fileNotFoundURLConnection4.getDate();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap8 = fileNotFoundURLConnection4.getRequestProperties();
        fileNotFoundURLConnection4.setConnectTimeout((int) (short) 10);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter5.deserializeObjectExplodedArchive2();
        java.io.File file8 = serializedObjectSupporter5.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.util.Set<java.lang.String> strSet13 = explodedArchive12.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.io.File file19 = explodedArchive18.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive12.new FileEntry(asciiBytes14, file19);
        explodedArchive12.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive12.entries;
        java.util.Set<java.lang.String> strSet24 = explodedArchive12.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = explodedArchive12.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file27 = serializedObjectSupporter26.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter26.deserializeObjectExplodedArchive8();
        explodedArchive12.serializedObjectSupporter = serializedObjectSupporter26;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap30);
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(asciiBytes14);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file27.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        java.net.URL uRL49 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str50 = uRL49.toExternalForm();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals(uRL49.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100" + "'", str50, "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str22 = fileNotFoundURLConnection17.getHeaderField((-1));
        boolean boolean23 = fileNotFoundURLConnection17.getDefaultUseCaches();
        int int24 = fileNotFoundURLConnection17.getContentLength();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldDate("/://hi!:100", (long) 'a');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 97L + "'", long27 == 97L);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile15();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", 100L);
        java.lang.String str31 = fileNotFoundURLConnection17.getHeaderField("file");
        java.lang.String str32 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.net.URL uRL6 = new java.net.URL(uRL1, "file");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = null;
        explodedArchive29.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.util.Set<java.lang.String> strSet38 = explodedArchive37.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.io.File file44 = explodedArchive43.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive37.new FileEntry(asciiBytes39, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter46.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter46.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter46.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest51 = serializedObjectSupporter46.deserializeObjectManifest1();
        java.io.File file52 = serializedObjectSupporter46.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive29.new FileEntry(asciiBytes39, file52);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry53.serializedObjectSupporter = serializedObjectSupporter54;
        java.io.File file56 = fileEntry53.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = fileEntry53.serializedObjectSupporter;
        filteredURLStreamHandler24.serializedObjectSupporter = serializedObjectSupporter57;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = filteredURLStreamHandler24.serializedObjectSupporter;
        java.net.URL uRL60 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL61 = new java.net.URL("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 0, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        int int62 = uRL61.getDefaultPort();
        boolean boolean63 = uRL1.sameFile(uRL61);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/file");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals(uRL25.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(manifest51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter57);
        org.junit.Assert.assertNotNull(serializedObjectSupporter59);
        org.junit.Assert.assertEquals(uRL60.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!:100://[hi!:100]:0file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0hi!");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive15.entries;
        explodedArchive7.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter19.deserializeObjectExplodedArchive15();
        explodedArchive7.serializedObjectSupporter = serializedObjectSupporter19;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive7.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file26 = serializedObjectSupporter25.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter25.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter25.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter25.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest30 = serializedObjectSupporter25.deserializeObjectManifest1();
        java.util.jar.Manifest manifest31 = serializedObjectSupporter25.deserializeObjectManifest1();
        java.io.File file32 = serializedObjectSupporter25.deserializeObjectFile15();
        filteredURLStreamHandler24.serializedObjectSupporter = serializedObjectSupporter25;
        java.net.URL uRL34 = new java.net.URL("", "", 97, "[hi!:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.io.File file39 = explodedArchive38.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive38.entries;
        java.io.File file41 = explodedArchive38.getroot();
        java.util.jar.Manifest manifest42 = explodedArchive38.getManifest();
        java.net.URL uRL43 = explodedArchive38.getUrl();
        java.net.URL uRL45 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str46 = uRL45.getProtocol();
        java.lang.Class[] classArray47 = new java.lang.Class[] {};
        java.lang.Object obj48 = uRL45.getContent(classArray47);
        java.lang.Object obj49 = uRL43.getContent(classArray47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = uRL34.getContent(classArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -77");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file21.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(manifest30);
        org.junit.Assert.assertNotNull(manifest31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file32.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertEquals(uRL34.toString(), "://:97[hi!:100]:0");
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNotNull(uRL43);
        org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "file" + "'", str46, "file");
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        fileNotFoundURLConnection17.setConnectTimeout(1);
        boolean boolean34 = fileNotFoundURLConnection17.getDoOutput();
        java.lang.String str35 = fileNotFoundURLConnection17.getContentEncoding();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long22 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean23 = fileNotFoundURLConnection17.getDoOutput();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap26 = fileNotFoundURLConnection17.getHeaderFields();
        long long27 = fileNotFoundURLConnection17.getDate();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.util.Set<java.lang.String> strSet7 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry35.serializedObjectSupporter = serializedObjectSupporter36;
        java.io.File file38 = fileEntry35.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = fileEntry35.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes40 = fileEntry35.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes41 = fileEntry35.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter42.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive3.new FileEntry(asciiBytes41, file47);
        explodedArchive3.filtered = true;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes58 = explodedArchive54.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes59 = explodedArchive54.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter60.deserializeObjectExplodedArchive11();
        java.io.File file62 = serializedObjectSupporter60.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file62);
        java.io.File file64 = explodedArchive63.getroot();
        boolean boolean65 = explodedArchive63.filtered;
        java.util.Set<java.lang.String> strSet66 = explodedArchive63.getSKIPPED_NAMES();
        java.lang.String str67 = explodedArchive63.toString();
        java.io.File file68 = explodedArchive63.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry69 = explodedArchive3.new FileEntry(asciiBytes59, file68);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNotNull(asciiBytes40);
        org.junit.Assert.assertNotNull(asciiBytes41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file47.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertNotNull(asciiBytes58);
        org.junit.Assert.assertNotNull(asciiBytes59);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str67, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        int int24 = fileNotFoundURLConnection17.getReadTimeout();
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        long long10 = fileNotFoundURLConnection4.getHeaderFieldLong("hi!", (long) '#');
        java.lang.String str11 = fileNotFoundURLConnection4.getname();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 35L + "'", long10 == 35L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "://hi!:100" + "'", str11, "://hi!:100");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection18 = uRL15.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        explodedArchive3.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = explodedArchive3.serializedObjectSupporter;
        java.util.Set<java.lang.String> strSet11 = explodedArchive3.getSKIPPED_NAMES();
        boolean boolean12 = explodedArchive3.filtered;
        java.net.URL uRL13 = explodedArchive3.getUrl();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(uRL13);
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        boolean boolean31 = fileNotFoundURLConnection17.getDoInput();
        java.lang.String str33 = fileNotFoundURLConnection17.getRequestProperty("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        java.net.URL uRL49 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str50 = uRL49.getUserInfo();
        java.lang.String str51 = uRL49.getProtocol();
        java.lang.String str52 = uRL49.getRef();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals(uRL49.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str51, "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.HashSet hashSet7 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(hashSet7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.util.Set<java.lang.String> strSet9 = explodedArchive8.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = null;
        explodedArchive8.entries = asciiBytesMap11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        java.lang.String str18 = explodedArchive16.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.io.File file27 = explodedArchive26.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest29 = serializedObjectSupporter28.deserializeObjectManifest1();
        explodedArchive26.manifest = manifest29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = null;
        explodedArchive34.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.util.Set<java.lang.String> strSet43 = explodedArchive42.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes44 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.io.File file49 = explodedArchive48.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive42.new FileEntry(asciiBytes44, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file52 = serializedObjectSupporter51.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter51.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter51.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter51.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest56 = serializedObjectSupporter51.deserializeObjectManifest1();
        java.io.File file57 = serializedObjectSupporter51.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive34.new FileEntry(asciiBytes44, file57);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file60 = serializedObjectSupporter59.deserializeObjectFile8();
        java.io.File file61 = serializedObjectSupporter59.deserializeObjectFile15();
        java.io.File file62 = serializedObjectSupporter59.deserializeObjectFile13();
        java.io.File file63 = serializedObjectSupporter59.deserializeObjectFile9();
        java.io.File file64 = serializedObjectSupporter59.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive26.new FileEntry(asciiBytes44, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry68 = explodedArchive22.new FileEntry(asciiBytes44, file67);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive12();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive16.new FileEntry(asciiBytes44, file71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive16.entries;
        explodedArchive8.entries = asciiBytesMap73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap73);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file77 = serializedObjectSupporter76.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter76.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = serializedObjectSupporter76.deserializeObjectExplodedArchive15();
        java.io.File file80 = serializedObjectSupporter76.deserializeObjectFile4();
        java.util.jar.Manifest manifest81 = serializedObjectSupporter76.deserializeObjectManifest1();
        explodedArchive75.manifest = manifest81;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str18, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest29);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(asciiBytes44);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(manifest56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file61.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file64.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNull(explodedArchive79);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(manifest81);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive3();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive9();
        java.io.File file36 = serializedObjectSupporter31.deserializeObjectFile5();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileNotFoundURLConnection17.serializedObjectSupporter;
        boolean boolean32 = fileNotFoundURLConnection17.getUseCaches();
        long long33 = fileNotFoundURLConnection17.getLastModified();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        fileNotFoundURLConnection17.setRequestProperty("file:/tmp/junit3853753617501372040/junit897402010941125298", "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setDoInput(true);
        boolean boolean11 = fileNotFoundURLConnection4.getAllowUserInteraction();
        fileNotFoundURLConnection4.setIfModifiedSince((long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream14 = fileNotFoundURLConnection4.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive15.entries;
        explodedArchive7.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter19.deserializeObjectExplodedArchive15();
        explodedArchive7.serializedObjectSupporter = serializedObjectSupporter19;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive7.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file26 = serializedObjectSupporter25.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter25.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter25.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter25.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest30 = serializedObjectSupporter25.deserializeObjectManifest1();
        java.util.jar.Manifest manifest31 = serializedObjectSupporter25.deserializeObjectManifest1();
        java.io.File file32 = serializedObjectSupporter25.deserializeObjectFile15();
        filteredURLStreamHandler24.serializedObjectSupporter = serializedObjectSupporter25;
        java.net.URL uRL34 = new java.net.URL("", "", 97, "[hi!:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str35 = uRL34.getQuery();
        java.net.Proxy proxy36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection37 = uRL34.openConnection(proxy36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file21.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(manifest30);
        org.junit.Assert.assertNotNull(manifest31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file32.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertEquals(uRL34.toString(), "://:97[hi!:100]:0");
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", 100L);
        fileNotFoundURLConnection17.setConnectTimeout((int) ' ');
        java.lang.String str32 = fileNotFoundURLConnection17.name;
        java.security.Permission permission33 = fileNotFoundURLConnection17.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(permission33);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.util.HashSet hashSet5 = serializedObjectSupporter0.deserializeObjectSet1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(hashSet5);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        java.lang.String str9 = fileNotFoundURLConnection4.getRequestProperty("");
        java.lang.String str10 = fileNotFoundURLConnection4.getContentEncoding();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet15 = explodedArchive3.getSKIPPED_NAMES();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive3.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = explodedArchive3.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        long long24 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!:100", (long) (byte) 0);
        int int25 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        java.lang.String str28 = fileNotFoundURLConnection17.name;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL32, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL20, "file", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str59 = uRL20.getProtocol();
        java.lang.String str60 = uRL20.toExternalForm();
        java.net.URL uRL62 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str63 = uRL62.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL62, "://hi!:100");
        fileNotFoundURLConnection65.setUseCaches(true);
        java.lang.String str68 = fileNotFoundURLConnection65.name;
        java.net.URL uRL69 = fileNotFoundURLConnection65.getURL();
        java.net.URL uRL71 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str72 = uRL71.getProtocol();
        java.lang.Class[] classArray73 = new java.lang.Class[] {};
        java.lang.Object obj74 = uRL71.getContent(classArray73);
        java.lang.Object obj75 = uRL69.getContent(classArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = uRL20.getContent(classArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:100" + "'", str34, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL58.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "://hi!:100/hi!" + "'", str60, "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str63, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "://hi!:100" + "'", str68, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL69);
        org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL71.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "file" + "'", str72, "file");
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile8();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.io.File file9 = explodedArchive8.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap10);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        boolean boolean16 = explodedArchive15.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile14();
        java.io.File file23 = serializedObjectSupporter20.deserializeObjectFile11();
        java.io.File file24 = serializedObjectSupporter20.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive11.new FileEntry(asciiBytes19, file24);
        java.io.File file26 = explodedArchive11.root;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = explodedArchive11.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asciiBytes17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(asciiBytes19);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(serializedObjectSupporter27);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "");
        fileNotFoundURLConnection51.setReadTimeout(0);
        boolean boolean54 = fileNotFoundURLConnection51.getUseCaches();
        fileNotFoundURLConnection51.setConnectTimeout(0);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.io.File file6 = explodedArchive3.root;
        java.util.jar.Manifest manifest7 = explodedArchive3.manifest;
        java.util.jar.Manifest manifest8 = explodedArchive3.manifest;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.util.Set<java.lang.String> strSet14 = explodedArchive13.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive13.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = null;
        explodedArchive13.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.io.File file28 = explodedArchive27.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive21.new FileEntry(asciiBytes23, file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file31 = serializedObjectSupporter30.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter30.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter30.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter30.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest35 = serializedObjectSupporter30.deserializeObjectManifest1();
        java.io.File file36 = serializedObjectSupporter30.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive13.new FileEntry(asciiBytes23, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry37.serializedObjectSupporter = serializedObjectSupporter38;
        java.io.File file40 = fileEntry37.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes41 = fileEntry37.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getPath();
        java.lang.String str54 = uRL52.getUserInfo();
        java.lang.String str55 = uRL52.getHost();
        java.net.URL uRL57 = new java.net.URL(uRL52, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL52, "hi!");
        fileNotFoundURLConnection59.setDefaultUseCaches(false);
        java.lang.String str62 = fileNotFoundURLConnection59.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file64 = serializedObjectSupporter63.deserializeObjectFile8();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile15();
        java.io.File file66 = serializedObjectSupporter63.deserializeObjectFile13();
        fileNotFoundURLConnection59.serializedObjectSupporter = serializedObjectSupporter63;
        fileEntry37.serializedObjectSupporter = serializedObjectSupporter63;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive69 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(asciiBytes23);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(manifest35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes41);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals(uRL52.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file65.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "file:/tmp/junit3853753617501372040/junit897402010941125298", "://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive23.new FileEntry(asciiBytes25, file30);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter32.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter32.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest37 = serializedObjectSupporter32.deserializeObjectManifest1();
        java.io.File file38 = serializedObjectSupporter32.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive15.new FileEntry(asciiBytes25, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile15();
        java.io.File file43 = serializedObjectSupporter40.deserializeObjectFile13();
        java.io.File file44 = serializedObjectSupporter40.deserializeObjectFile9();
        java.io.File file45 = serializedObjectSupporter40.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive7.new FileEntry(asciiBytes25, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes25, file48);
        java.net.URL uRL50 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL50, "hi!");
        fileNotFoundURLConnection52.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(asciiBytes25);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(manifest37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file42.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL50);
        org.junit.Assert.assertEquals(uRL50.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileNotFoundURLConnection17.serializedObjectSupporter;
        long long34 = fileNotFoundURLConnection17.getHeaderFieldLong("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) 32);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream35 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 32L + "'", long34 == 32L);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        java.io.File file62 = explodedArchive3.root;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes63 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes63);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.util.Set<java.lang.String> strSet13 = explodedArchive12.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.lang.String str16 = uRL15.getPath();
        java.lang.String str17 = uRL15.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL(uRL15, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.util.Set<java.lang.String> strSet49 = explodedArchive48.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getPath();
        java.lang.String str53 = uRL51.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        java.io.File file57 = serializedObjectSupporter55.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file57);
        java.util.Set<java.lang.String> strSet59 = explodedArchive58.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL37, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL25, "file", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str64 = uRL25.getProtocol();
        java.lang.String str65 = uRL25.toExternalForm();
        boolean boolean66 = uRL1.sameFile(uRL25);
        java.lang.String str67 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "");
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals(uRL25.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals(uRL37.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:100" + "'", str39, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals(uRL51.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertEquals(uRL61.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL63.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "://hi!:100/hi!" + "'", str65, "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str67, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile6();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter31;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry27.name;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = fileEntry27.serializedObjectSupporter;
        boolean boolean38 = fileEntry27.isDirectory();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNotNull(serializedObjectSupporter37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile4();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile13();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive7();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file51 = serializedObjectSupporter50.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter50.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter50.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter50.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest55 = serializedObjectSupporter50.deserializeObjectManifest1();
        java.io.File file56 = serializedObjectSupporter50.deserializeObjectFile14();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes58 = fileEntry49.name;
        boolean boolean59 = fileEntry49.isDirectory();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNotNull(manifest55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.io.File file9 = explodedArchive8.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap10);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        boolean boolean16 = explodedArchive15.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile14();
        java.io.File file23 = serializedObjectSupporter20.deserializeObjectFile11();
        java.io.File file24 = serializedObjectSupporter20.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive11.new FileEntry(asciiBytes19, file24);
        java.io.File file26 = explodedArchive11.root;
        java.util.jar.Manifest manifest27 = explodedArchive11.getManifest();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asciiBytes17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(asciiBytes19);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest27);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = uRL15.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        long long5 = fileNotFoundURLConnection4.getDate();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        fileNotFoundURLConnection4.setIfModifiedSince((-1L));
        java.net.URL uRL9 = fileNotFoundURLConnection4.getURL();
        java.lang.String str10 = uRL9.getPath();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL9);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str10, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = null;
        explodedArchive25.entries = asciiBytesMap28;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.io.File file40 = explodedArchive39.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive33.new FileEntry(asciiBytes35, file40);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest47 = serializedObjectSupporter42.deserializeObjectManifest1();
        java.io.File file48 = serializedObjectSupporter42.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive25.new FileEntry(asciiBytes35, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        java.io.File file52 = fileEntry49.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = fileEntry49.serializedObjectSupporter;
        filteredURLStreamHandler20.serializedObjectSupporter = serializedObjectSupporter53;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = filteredURLStreamHandler20.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file57 = serializedObjectSupporter56.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter56.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter56.deserializeObjectExplodedArchive14();
        java.io.File file60 = serializedObjectSupporter56.deserializeObjectFile9();
        java.io.File file61 = serializedObjectSupporter56.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter56.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler20.serializedObjectSupporter = serializedObjectSupporter56;
        java.net.URL uRL64 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive14();
        java.io.File file69 = serializedObjectSupporter65.deserializeObjectFile9();
        java.io.File file70 = serializedObjectSupporter65.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter65.deserializeObjectExplodedArchive5();
        filteredURLStreamHandler20.serializedObjectSupporter = serializedObjectSupporter65;
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter65;
        java.io.File file74 = serializedObjectSupporter65.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals(uRL21.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(manifest47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter53);
        org.junit.Assert.assertNotNull(serializedObjectSupporter55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertEquals(uRL64.toString(), "file://hi!:100file");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        java.lang.String str29 = fileNotFoundURLConnection17.getContentEncoding();
        long long30 = fileNotFoundURLConnection17.getLastModified();
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        fileNotFoundURLConnection17.setDoInput(true);
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        fileNotFoundURLConnection17.setReadTimeout(100);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile11();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile15();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file7.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.String str7 = uRL6.getFile();
        java.net.URLConnection uRLConnection8 = uRL6.openConnection();
        uRLConnection8.setIfModifiedSince((long) (byte) 0);
        long long13 = uRLConnection8.getHeaderFieldLong("", (long) (byte) 10);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRLConnection8);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        java.security.Permission permission21 = fileNotFoundURLConnection17.getPermission();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter22.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter22.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter22.deserializeObjectExplodedArchive12();
        java.io.File file27 = serializedObjectSupporter22.deserializeObjectFile15();
        java.io.File file28 = serializedObjectSupporter22.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter22.deserializeObjectExplodedArchive14();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter22;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str32 = fileNotFoundURLConnection17.getContentEncoding();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream33 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(permission21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file27.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(serializedObjectSupporter31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setConnectTimeout((int) (byte) 10);
        java.lang.String str28 = fileNotFoundURLConnection17.getRequestProperty("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        fileNotFoundURLConnection17.setReadTimeout((int) (byte) 10);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getUseCaches();
        boolean boolean27 = fileNotFoundURLConnection17.getUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str22 = fileNotFoundURLConnection17.getHeaderField((-1));
        boolean boolean23 = fileNotFoundURLConnection17.getDefaultUseCaches();
        fileNotFoundURLConnection17.setUseCaches(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        long long24 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!:100", (long) (byte) 0);
        fileNotFoundURLConnection17.setUseCaches(true);
        java.security.Permission permission27 = fileNotFoundURLConnection17.getPermission();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(permission27);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile12();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes46 = fileEntry42.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes47 = fileEntry42.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter48.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter48.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter48.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter48.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter48.deserializeObjectExplodedArchive16();
        java.io.File file54 = serializedObjectSupporter48.deserializeObjectFile6();
        java.io.File file55 = serializedObjectSupporter48.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry56 = explodedArchive11.new FileEntry(asciiBytes47, file55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter57.deserializeObjectExplodedArchive11();
        java.io.File file59 = serializedObjectSupporter57.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file59);
        java.util.Set<java.lang.String> strSet61 = explodedArchive60.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes62 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.io.File file67 = explodedArchive66.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry68 = explodedArchive60.new FileEntry(asciiBytes62, file67);
        explodedArchive60.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap71 = explodedArchive60.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap71);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap71);
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes46);
        org.junit.Assert.assertNotNull(asciiBytes47);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(asciiBytes62);
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file67.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap71);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        java.net.URL uRL22 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL24 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str25 = uRL24.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL24, "://hi!:100");
        fileNotFoundURLConnection27.setUseCaches(true);
        java.lang.String str30 = fileNotFoundURLConnection27.name;
        java.net.URL uRL31 = fileNotFoundURLConnection27.getURL();
        java.net.URL uRL33 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str34 = uRL33.getProtocol();
        java.lang.Class[] classArray35 = new java.lang.Class[] {};
        java.lang.Object obj36 = uRL33.getContent(classArray35);
        java.lang.Object obj37 = uRL31.getContent(classArray35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = fileNotFoundURLConnection17.getContent(classArray35);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRL22);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "://hi!:100" + "'", str30, "://hi!:100");
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file" + "'", str34, "file");
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        boolean boolean54 = fileNotFoundURLConnection53.getDoInput();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = uRL23.getPort();
        java.net.URL uRL26 = new java.net.URL(uRL23, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100/org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.util.Set<java.lang.String> strSet81 = explodedArchive80.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.getPath();
        java.lang.String str85 = uRL83.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = serializedObjectSupporter87.deserializeObjectExplodedArchive11();
        java.io.File file89 = serializedObjectSupporter87.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = new org.springframework.boot.loader.archive.ExplodedArchive(file89);
        java.util.Set<java.lang.String> strSet91 = explodedArchive90.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive90.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL(uRL83, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL(uRL69, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL(uRL57, "file", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL96 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.lang.String str97 = uRL96.getRef();
        java.lang.String str98 = uRL96.getPath();
        java.lang.String str99 = uRL96.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals(uRL57.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:100" + "'", str71, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertEquals(uRL83.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(explodedArchive88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertEquals(uRL93.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL94.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL95.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL96.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "" + "'", str98, "");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "://hi!:100" + "'", str99, "://hi!:100");
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile15();
        java.io.File file46 = serializedObjectSupporter43.deserializeObjectFile13();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile9();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive10.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive53.entries;
        explodedArchive10.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes58 = explodedArchive57.getMANIFEST_ENTRY_NAME();
        boolean boolean59 = explodedArchive57.filtered;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(asciiBytes58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.util.Set<java.lang.String> strSet7 = explodedArchive3.getSKIPPED_NAMES();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive10 = explodedArchive3.getFilteredArchive(entryRenameFilter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setUseCaches(true);
        int int24 = fileNotFoundURLConnection17.getContentLength();
        int int25 = fileNotFoundURLConnection17.getConnectTimeout();
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (long) '4');
        java.lang.String str30 = fileNotFoundURLConnection17.getHeaderField("/file");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 52L + "'", long28 == 52L);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive22.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive30.new FileEntry(asciiBytes32, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file40 = serializedObjectSupporter39.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter39.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter39.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter39.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest44 = serializedObjectSupporter39.deserializeObjectManifest1();
        java.io.File file45 = serializedObjectSupporter39.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive22.new FileEntry(asciiBytes32, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry46.serializedObjectSupporter = serializedObjectSupporter47;
        java.io.File file49 = fileEntry46.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = fileEntry46.serializedObjectSupporter;
        filteredURLStreamHandler17.serializedObjectSupporter = serializedObjectSupporter50;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = filteredURLStreamHandler17.serializedObjectSupporter;
        java.net.URL uRL53 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL54 = new java.net.URL("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 0, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.lang.String str55 = uRL54.getAuthority();
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(manifest44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter50);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
        org.junit.Assert.assertEquals(uRL53.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!:100://[hi!:100]:0file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0" + "'", str55, "[hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/]:0");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive7.entries = asciiBytesMap10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.io.File file22 = explodedArchive21.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive15.new FileEntry(asciiBytes17, file22);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = explodedArchive15.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest31 = serializedObjectSupporter30.deserializeObjectManifest1();
        explodedArchive28.manifest = manifest31;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive36.entries;
        explodedArchive28.entries = asciiBytesMap38;
        explodedArchive15.entries = asciiBytesMap38;
        explodedArchive7.entries = asciiBytesMap38;
        explodedArchive7.filtered = false;
        java.io.File file44 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 97, "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(asciiBytes17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals(uRL46.toString(), "org.springframework.boot.loader.archive.explodedarchive$filenotfoundurlconnection:file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:///home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:97/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]", "[org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100]", "/://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [org.springframework.boot.loader.archive.explodedarchive$filenotfoundurlconnection:://hi!:100]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.util.Set<java.lang.String> strSet33 = explodedArchive32.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive32.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = null;
        explodedArchive32.entries = asciiBytesMap35;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.util.Set<java.lang.String> strSet41 = explodedArchive40.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes42 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive40.new FileEntry(asciiBytes42, file47);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter49.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest54 = serializedObjectSupporter49.deserializeObjectManifest1();
        java.io.File file55 = serializedObjectSupporter49.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry56 = explodedArchive32.new FileEntry(asciiBytes42, file55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        java.io.File file59 = serializedObjectSupporter57.deserializeObjectFile15();
        java.io.File file60 = serializedObjectSupporter57.deserializeObjectFile13();
        java.util.jar.Manifest manifest61 = serializedObjectSupporter57.deserializeObjectManifest1();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile7();
        java.io.File file63 = serializedObjectSupporter57.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry64 = explodedArchive3.new FileEntry(asciiBytes42, file63);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit3853753617501372040/junit897402010941125298");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(asciiBytes42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(manifest54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file59.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(manifest61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file62.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long22 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean23 = fileNotFoundURLConnection17.getDoOutput();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        int int25 = fileNotFoundURLConnection17.getReadTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        boolean boolean4 = explodedArchive3.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.lang.String str7 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet8 = explodedArchive3.getSKIPPED_NAMES();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.io.File file23 = explodedArchive22.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter24.deserializeObjectManifest1();
        explodedArchive22.manifest = manifest25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive30.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = null;
        explodedArchive30.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.util.Set<java.lang.String> strSet39 = explodedArchive38.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes40 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.io.File file45 = explodedArchive44.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive38.new FileEntry(asciiBytes40, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter47.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter47.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter47.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest52 = serializedObjectSupporter47.deserializeObjectManifest1();
        java.io.File file53 = serializedObjectSupporter47.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive30.new FileEntry(asciiBytes40, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file56 = serializedObjectSupporter55.deserializeObjectFile8();
        java.io.File file57 = serializedObjectSupporter55.deserializeObjectFile15();
        java.io.File file58 = serializedObjectSupporter55.deserializeObjectFile13();
        java.io.File file59 = serializedObjectSupporter55.deserializeObjectFile9();
        java.io.File file60 = serializedObjectSupporter55.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive22.new FileEntry(asciiBytes40, file60);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file63 = serializedObjectSupporter62.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry64 = explodedArchive18.new FileEntry(asciiBytes40, file63);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        java.io.File file69 = serializedObjectSupporter65.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter65.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter65.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        fileEntry64.serializedObjectSupporter = serializedObjectSupporter65;
        boolean boolean74 = fileEntry64.isDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive75 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes14);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(asciiBytes40);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(manifest52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file57.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file60.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.String str7 = uRL6.getQuery();
        java.lang.Object obj8 = uRL6.getContent();
        java.lang.String str9 = uRL6.getRef();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive3.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        boolean boolean8 = fileNotFoundURLConnection4.getAllowUserInteraction();
        int int9 = fileNotFoundURLConnection4.getConnectTimeout();
        long long10 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = fileEntry27.serializedObjectSupporter;
        java.io.File file34 = serializedObjectSupporter33.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter33.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter33.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter33.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter33.deserializeObjectExplodedArchive1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter31);
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file34.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getProtocol();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int25 = fileNotFoundURLConnection17.getHeaderFieldInt("://hi!:100", 0);
        int int28 = fileNotFoundURLConnection17.getHeaderFieldInt("file", (int) 'a');
        java.lang.String str29 = fileNotFoundURLConnection17.toString();
        fileNotFoundURLConnection17.setUseCaches(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 97 + "'", int28 == 97);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str29, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.util.jar.Manifest manifest4 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(manifest4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getFile();
        int int18 = uRL15.getPort();
        java.lang.String str19 = uRL15.getProtocol();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        java.util.jar.Manifest manifest7 = explodedArchive3.getManifest();
        java.net.URL uRL8 = explodedArchive3.getUrl();
        java.lang.String str9 = uRL8.getAuthority();
        java.net.URL uRL11 = new java.net.URL(uRL8, "/hi!:100");
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(uRL8);
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/hi!:100");
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.net.URL uRL14 = new java.net.URL(uRL10, "file");
        java.net.URL uRL16 = new java.net.URL(uRL10, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
        java.net.Proxy proxy17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection18 = uRL10.openConnection(proxy17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL16.toString(), "://hi!:100/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100");
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile4();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap23 = fileNotFoundURLConnection17.getHeaderFields();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap24 = fileNotFoundURLConnection17.getHeaderFields();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = fileNotFoundURLConnection17.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setDoInput(true);
        boolean boolean11 = fileNotFoundURLConnection4.getAllowUserInteraction();
        fileNotFoundURLConnection4.setConnectTimeout(10);
        long long16 = fileNotFoundURLConnection4.getHeaderFieldDate("hi!:100", 32L);
        fileNotFoundURLConnection4.setUseCaches(false);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile13();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        fileNotFoundURLConnection4.setIfModifiedSince((-1L));
        java.net.URL uRL9 = fileNotFoundURLConnection4.getURL();
        boolean boolean10 = fileNotFoundURLConnection4.getDoOutput();
        java.net.URL uRL12 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str13 = uRL12.getProtocol();
        java.lang.Class[] classArray14 = new java.lang.Class[] {};
        java.lang.Object obj15 = uRL12.getContent(classArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = fileNotFoundURLConnection4.getContent(classArray14);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL9);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file" + "'", str13, "file");
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        fileNotFoundURLConnection17.setDoOutput(true);
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", (long) (short) 0);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet15 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file18 = serializedObjectSupporter17.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter17.deserializeObjectExplodedArchive8();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter17;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file23 = serializedObjectSupporter22.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter22.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter22.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter22.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest27 = serializedObjectSupporter22.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest27;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.util.Set<java.lang.String> strSet33 = explodedArchive32.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive32.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = null;
        explodedArchive32.entries = asciiBytesMap35;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.util.Set<java.lang.String> strSet41 = explodedArchive40.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes42 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive40.new FileEntry(asciiBytes42, file47);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter49.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest54 = serializedObjectSupporter49.deserializeObjectManifest1();
        java.io.File file55 = serializedObjectSupporter49.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry56 = explodedArchive32.new FileEntry(asciiBytes42, file55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry56.serializedObjectSupporter = serializedObjectSupporter57;
        java.io.File file59 = fileEntry56.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter60.deserializeObjectExplodedArchive11();
        java.io.File file62 = serializedObjectSupporter60.deserializeObjectFile6();
        fileEntry56.serializedObjectSupporter = serializedObjectSupporter60;
        java.io.File file64 = fileEntry56.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes65 = fileEntry56.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes66 = fileEntry56.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive67 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file18.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(manifest27);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(asciiBytes42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(manifest54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes65);
        org.junit.Assert.assertNotNull(asciiBytes66);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        java.security.Permission permission21 = fileNotFoundURLConnection17.getPermission();
        fileNotFoundURLConnection17.setUseCaches(false);
        java.net.URL uRL24 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL26 = new java.net.URL(uRL24, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str27 = uRL26.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.util.Set<java.lang.String> strSet36 = explodedArchive35.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getPath();
        java.lang.String str40 = uRL38.getUserInfo();
        java.lang.String str41 = uRL38.getHost();
        java.net.URL uRL43 = new java.net.URL(uRL38, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL38, "hi!");
        fileNotFoundURLConnection45.setAllowUserInteraction(false);
        long long50 = fileNotFoundURLConnection45.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        fileNotFoundURLConnection45.setUseCaches(true);
        long long55 = fileNotFoundURLConnection45.getHeaderFieldDate("/hi!:100", (long) '#');
        long long56 = fileNotFoundURLConnection45.getContentLengthLong();
        boolean boolean57 = uRL26.equals((java.lang.Object) long56);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(permission21);
        org.junit.Assert.assertNotNull(uRL24);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL26.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str27, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals(uRL38.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 35L + "'", long55 == 35L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        java.io.File file26 = serializedObjectSupporter21.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter21.deserializeObjectExplodedArchive13();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive27);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        java.lang.String str31 = fileNotFoundURLConnection17.getContentType();
        long long32 = fileNotFoundURLConnection17.getIfModifiedSince();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/://hi!:100", 97, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        long long33 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100", 0L);
        fileNotFoundURLConnection17.setDoInput(true);
        fileNotFoundURLConnection17.setReadTimeout(97);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap38 = fileNotFoundURLConnection17.getRequestProperties();
        long long41 = fileNotFoundURLConnection17.getHeaderFieldLong("", 0L);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setConnectTimeout((int) (byte) 10);
        java.lang.String str28 = fileNotFoundURLConnection17.getRequestProperty("/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        boolean boolean29 = fileNotFoundURLConnection17.getUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive3.entries = asciiBytesMap4;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive3.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setDoInput(true);
        boolean boolean11 = fileNotFoundURLConnection4.getAllowUserInteraction();
        int int12 = fileNotFoundURLConnection4.getReadTimeout();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        fileNotFoundURLConnection50.setIfModifiedSince((long) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection50.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        fileNotFoundURLConnection17.setDoOutput(true);
        fileNotFoundURLConnection17.setIfModifiedSince((long) (-1));
        fileNotFoundURLConnection17.setIfModifiedSince((long) ' ');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        long long24 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!:100", (long) (byte) 0);
        fileNotFoundURLConnection17.setUseCaches(true);
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        boolean boolean30 = fileEntry27.isDirectory();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(asciiBytes31);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file10 = serializedObjectSupporter0.deserializeObjectFile4();
        java.io.File file11 = serializedObjectSupporter0.deserializeObjectFile14();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        java.lang.String str29 = fileNotFoundURLConnection17.toString();
        fileNotFoundURLConnection17.setUseCaches(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str29, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getUserInfo();
        java.lang.String str14 = uRL10.getPath();
        java.lang.String str15 = uRL10.getProtocol();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream28 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.util.Set<java.lang.String> strSet9 = explodedArchive8.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.io.File file15 = explodedArchive14.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive8.new FileEntry(asciiBytes10, file15);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = explodedArchive8.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.io.File file22 = explodedArchive21.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest24 = serializedObjectSupporter23.deserializeObjectManifest1();
        explodedArchive21.manifest = manifest24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive29.entries;
        explodedArchive21.entries = asciiBytesMap31;
        explodedArchive8.entries = asciiBytesMap31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap31);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit1069761328127692012/junit891059030562649033/d");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(asciiBytes10);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest24);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap31);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap23 = fileNotFoundURLConnection17.getHeaderFields();
        boolean boolean24 = fileNotFoundURLConnection17.getDoOutput();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream25 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long22 = fileNotFoundURLConnection17.getLastModified();
        boolean boolean23 = fileNotFoundURLConnection17.getDoOutput();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout((int) 'a');
        fileNotFoundURLConnection17.setRequestProperty("hi!", "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet31 = explodedArchive3.getSKIPPED_NAMES();
        java.net.URL uRL32 = explodedArchive3.getUrl();
        java.io.File file33 = explodedArchive3.getroot();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(uRL32);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }
}

