import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest11 {

    public static boolean debug = false;

    @Test
    public void test05501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05501");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        java.io.File file12 = null;
        explodedArchiveTests0.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.archive = explodedArchive14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive16);
    }

    @Test
    public void test05502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05502");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        java.io.File file11 = explodedArchiveTests7.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder12);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        java.io.File file21 = explodedArchiveTests18.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests14.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive25);
    }

    @Test
    public void test05503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05503");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests14.settemporaryFolder(temporaryFolder19);
        explodedArchiveTests8.temporaryFolder = temporaryFolder19;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests8.temporaryFolder = temporaryFolder25;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder25);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests28.gettemporaryFolder();
        java.io.File file35 = explodedArchiveTests28.getrootFolder();
        java.io.File file36 = explodedArchiveTests28.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = null;
        explodedArchiveTests37.setarchive(explodedArchive40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = explodedArchiveTests37.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        java.io.File file46 = explodedArchiveTests43.getrootFolder();
        java.io.File file47 = explodedArchiveTests43.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        explodedArchiveTests37.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests28.temporaryFolder = temporaryFolder48;
        explodedArchiveTests0.temporaryFolder = temporaryFolder48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests0.archive = explodedArchive52;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
    }

    @Test
    public void test05504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05504");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test05505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05505");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests13.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests21 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests21.temporaryFolder;
        java.io.File file23 = explodedArchiveTests21.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests21.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests21.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests21.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests21.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = null;
        explodedArchiveTests21.setarchive(explodedArchive28);
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests21.gettemporaryFolder();
        explodedArchiveTests13.settemporaryFolder(temporaryFolder30);
        explodedArchiveTests8.temporaryFolder = temporaryFolder30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests8.archive = explodedArchive33;
        org.junit.rules.TemporaryFolder temporaryFolder35 = null;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder35);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        java.io.File file40 = explodedArchiveTests37.getrootFolder();
        java.io.File file41 = explodedArchiveTests37.rootFolder;
        java.io.File file42 = explodedArchiveTests37.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests49 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests49.temporaryFolder;
        java.io.File file51 = explodedArchiveTests49.getrootFolder();
        java.io.File file52 = explodedArchiveTests49.rootFolder;
        java.io.File file53 = explodedArchiveTests49.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = null;
        explodedArchiveTests49.setarchive(explodedArchive54);
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests49.gettemporaryFolder();
        explodedArchiveTests43.temporaryFolder = temporaryFolder56;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder56);
        explodedArchiveTests8.settemporaryFolder(temporaryFolder56);
        explodedArchiveTests0.temporaryFolder = temporaryFolder56;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests61 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests61.temporaryFolder;
        java.io.File file63 = explodedArchiveTests61.getrootFolder();
        java.io.File file64 = explodedArchiveTests61.getrootFolder();
        java.io.File file65 = explodedArchiveTests61.rootFolder;
        java.io.File file66 = explodedArchiveTests61.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests67 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder68 = explodedArchiveTests67.temporaryFolder;
        java.io.File file69 = explodedArchiveTests67.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder70 = explodedArchiveTests67.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests67.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder72 = explodedArchiveTests67.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests73 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests73.temporaryFolder;
        java.io.File file75 = explodedArchiveTests73.getrootFolder();
        java.io.File file76 = explodedArchiveTests73.rootFolder;
        java.io.File file77 = explodedArchiveTests73.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = null;
        explodedArchiveTests73.setarchive(explodedArchive78);
        org.junit.rules.TemporaryFolder temporaryFolder80 = explodedArchiveTests73.gettemporaryFolder();
        explodedArchiveTests67.temporaryFolder = temporaryFolder80;
        explodedArchiveTests61.settemporaryFolder(temporaryFolder80);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests83 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests83.temporaryFolder;
        explodedArchiveTests61.temporaryFolder = temporaryFolder84;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder84);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = null;
        explodedArchiveTests0.archive = explodedArchive89;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(temporaryFolder68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(temporaryFolder70);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNotNull(temporaryFolder72);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(temporaryFolder80);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNull(explodedArchive87);
        org.junit.Assert.assertNull(explodedArchive88);
    }

    @Test
    public void test05506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05506");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file5 = explodedArchiveTests0.rootFolder;
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test05507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05507");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        java.io.File file14 = explodedArchiveTests11.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        java.io.File file18 = explodedArchiveTests15.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.temporaryFolder;
        explodedArchiveTests11.settemporaryFolder(temporaryFolder19);
        java.io.File file21 = null;
        explodedArchiveTests11.setrootFolder(file21);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = null;
        explodedArchiveTests23.rootFolder = file25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests23.getarchive();
        java.io.File file29 = null;
        explodedArchiveTests23.setrootFolder(file29);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = explodedArchiveTests31.getrootFolder();
        java.io.File file34 = explodedArchiveTests31.getrootFolder();
        java.io.File file35 = explodedArchiveTests31.rootFolder;
        java.io.File file36 = explodedArchiveTests31.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests37.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        java.io.File file46 = explodedArchiveTests43.rootFolder;
        java.io.File file47 = explodedArchiveTests43.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests43.setarchive(explodedArchive48);
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests43.gettemporaryFolder();
        explodedArchiveTests37.temporaryFolder = temporaryFolder50;
        explodedArchiveTests31.settemporaryFolder(temporaryFolder50);
        explodedArchiveTests23.temporaryFolder = temporaryFolder50;
        explodedArchiveTests11.settemporaryFolder(temporaryFolder50);
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests11.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder55);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNotNull(temporaryFolder55);
    }

    @Test
    public void test05508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05508");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests5.gettemporaryFolder();
        java.io.File file12 = explodedArchiveTests5.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = null;
        explodedArchiveTests13.rootFolder = file15;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests13.getarchive();
        java.io.File file19 = null;
        explodedArchiveTests13.setrootFolder(file19);
        java.io.File file21 = explodedArchiveTests13.rootFolder;
        java.io.File file22 = explodedArchiveTests13.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        java.io.File file27 = null;
        explodedArchiveTests23.rootFolder = file27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests23.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests23.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests23.setarchive(explodedArchive31);
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests23.temporaryFolder;
        explodedArchiveTests13.temporaryFolder = temporaryFolder33;
        explodedArchiveTests5.temporaryFolder = temporaryFolder33;
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        java.io.File file41 = null;
        explodedArchiveTests37.rootFolder = file41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = explodedArchiveTests37.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests37.gettemporaryFolder();
        java.io.File file45 = null;
        explodedArchiveTests37.setrootFolder(file45);
        java.io.File file47 = null;
        explodedArchiveTests37.rootFolder = file47;
        java.io.File file49 = explodedArchiveTests37.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests37.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder50);
        java.io.File file52 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.Archive archive54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap55 = explodedArchiveTests0.getEntriesMap(archive54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
    }

    @Test
    public void test05509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05509");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.getarchive();
        java.io.File file12 = null;
        explodedArchiveTests0.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests14.setarchive(explodedArchive18);
        java.io.File file20 = explodedArchiveTests14.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests14.archive = explodedArchive21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = explodedArchiveTests14.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests14.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder24;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
    }

    @Test
    public void test05510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05510");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
    }

    @Test
    public void test05511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05511");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        java.io.File file11 = null;
        explodedArchiveTests0.setrootFolder(file11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        java.io.File file16 = explodedArchiveTests13.rootFolder;
        java.io.File file17 = explodedArchiveTests13.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests13.archive = explodedArchive18;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests13.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = null;
        explodedArchiveTests0.setarchive(explodedArchive23);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder22);
    }

    @Test
    public void test05512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05512");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.getarchive();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests16.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests16.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.getrootFolder();
        java.io.File file26 = explodedArchiveTests22.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests16.settemporaryFolder(temporaryFolder27);
        explodedArchiveTests0.temporaryFolder = temporaryFolder27;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests30.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests30.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests30.gettemporaryFolder();
        java.io.File file37 = explodedArchiveTests30.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests30.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests30.temporaryFolder;
        java.io.File file40 = null;
        explodedArchiveTests30.setrootFolder(file40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = explodedArchiveTests30.archive;
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests30.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder43;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
    }

    @Test
    public void test05513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05513");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.setrootFolder(file5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        java.io.File file8 = null;
        explodedArchiveTests0.rootFolder = file8;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
    }

    @Test
    public void test05514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05514");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder12);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
    }

    @Test
    public void test05515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05515");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        java.io.File file13 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        java.io.File file15 = null;
        explodedArchiveTests0.rootFolder = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.getarchive();
        java.io.File file18 = null;
        explodedArchiveTests0.setrootFolder(file18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests0.setarchive(explodedArchive21);
        org.springframework.boot.loader.archive.Archive archive23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap24 = explodedArchiveTests0.getEntriesMap(archive23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive20);
    }

    @Test
    public void test05516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05516");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = null;
        explodedArchiveTests13.rootFolder = file15;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests13.getarchive();
        java.io.File file19 = null;
        explodedArchiveTests13.setrootFolder(file19);
        java.io.File file21 = explodedArchiveTests13.rootFolder;
        java.io.File file22 = explodedArchiveTests13.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests23.gettemporaryFolder();
        java.io.File file30 = explodedArchiveTests23.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests23.setarchive(explodedArchive31);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests33.gettemporaryFolder();
        explodedArchiveTests23.settemporaryFolder(temporaryFolder36);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests38 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests38.temporaryFolder;
        java.io.File file40 = explodedArchiveTests38.getrootFolder();
        java.io.File file41 = explodedArchiveTests38.rootFolder;
        java.io.File file42 = explodedArchiveTests38.rootFolder;
        java.io.File file43 = null;
        explodedArchiveTests38.setrootFolder(file43);
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests38.temporaryFolder;
        explodedArchiveTests23.temporaryFolder = temporaryFolder45;
        explodedArchiveTests13.temporaryFolder = temporaryFolder45;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder45);
        java.io.File file49 = null;
        explodedArchiveTests0.rootFolder = file49;
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream51, outputStream52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder45);
    }

    @Test
    public void test05517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05517");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        java.io.File file14 = null;
        explodedArchiveTests0.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests0.archive = explodedArchive16;
        java.io.File file18 = null;
        explodedArchiveTests0.setrootFolder(file18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests0.archive = explodedArchive20;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
    }

    @Test
    public void test05518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05518");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.Archive archive13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap14 = explodedArchiveTests0.getEntriesMap(archive13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05519");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        java.io.File file11 = null;
        explodedArchiveTests0.setrootFolder(file11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        java.io.File file16 = explodedArchiveTests13.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.temporaryFolder;
        java.io.File file18 = explodedArchiveTests13.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests13.archive;
        java.io.File file20 = null;
        explodedArchiveTests13.setrootFolder(file20);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = null;
        explodedArchiveTests22.rootFolder = file24;
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests22.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests22.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests22.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests13.temporaryFolder = temporaryFolder30;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(explodedArchive33);
    }

    @Test
    public void test05520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05520");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        java.io.File file13 = null;
        explodedArchiveTests0.rootFolder = file13;
        java.io.File file15 = null;
        explodedArchiveTests0.rootFolder = file15;
        java.io.File file17 = null;
        explodedArchiveTests0.setrootFolder(file17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(explodedArchive19);
    }

    @Test
    public void test05521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05521");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test05522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05522");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        java.io.File file11 = explodedArchiveTests7.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive14);
    }

    @Test
    public void test05523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05523");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        java.io.File file20 = explodedArchiveTests13.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests21 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests21.temporaryFolder;
        java.io.File file23 = explodedArchiveTests21.getrootFolder();
        java.io.File file24 = explodedArchiveTests21.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests21.temporaryFolder;
        explodedArchiveTests13.temporaryFolder = temporaryFolder25;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = null;
        explodedArchiveTests0.setarchive(explodedArchive28);
        java.io.File file30 = null;
        explodedArchiveTests0.rootFolder = file30;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
    }

    @Test
    public void test05524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05524");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        java.io.File file11 = explodedArchiveTests0.rootFolder;
        java.io.File file12 = null;
        explodedArchiveTests0.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.archive;
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test05525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05525");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        java.io.File file13 = explodedArchiveTests0.getrootFolder();
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream14, outputStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test05526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05526");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.archive = explodedArchive9;
        java.io.File file11 = null;
        explodedArchiveTests0.rootFolder = file11;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
    }

    @Test
    public void test05527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05527");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
    }

    @Test
    public void test05528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05528");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.setrootFolder(file4);
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test05529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05529");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests11.gettemporaryFolder();
        java.io.File file18 = explodedArchiveTests11.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = null;
        explodedArchiveTests19.rootFolder = file21;
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests19.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests19.getarchive();
        java.io.File file25 = null;
        explodedArchiveTests19.setrootFolder(file25);
        java.io.File file27 = explodedArchiveTests19.rootFolder;
        java.io.File file28 = explodedArchiveTests19.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests29.gettemporaryFolder();
        java.io.File file33 = null;
        explodedArchiveTests29.rootFolder = file33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = explodedArchiveTests29.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests29.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = null;
        explodedArchiveTests29.setarchive(explodedArchive37);
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests29.temporaryFolder;
        explodedArchiveTests19.temporaryFolder = temporaryFolder39;
        explodedArchiveTests11.temporaryFolder = temporaryFolder39;
        java.io.File file42 = null;
        explodedArchiveTests11.rootFolder = file42;
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests11.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder44);
        java.io.File file46 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file46);
    }

    @Test
    public void test05530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05530");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder10 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder10);
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05531");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        java.io.File file8 = null;
        explodedArchiveTests0.rootFolder = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test05532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05532");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests12.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests12.setarchive(explodedArchive19);
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests12.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests12.setarchive(explodedArchive22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests12.archive;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests12.gettemporaryFolder();
        java.io.File file26 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests27.gettemporaryFolder();
        explodedArchiveTests12.settemporaryFolder(temporaryFolder33);
        java.io.File file35 = null;
        explodedArchiveTests12.rootFolder = file35;
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder37;
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests40 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests40.temporaryFolder;
        java.io.File file42 = explodedArchiveTests40.getrootFolder();
        java.io.File file43 = explodedArchiveTests40.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = null;
        explodedArchiveTests40.setarchive(explodedArchive44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = explodedArchiveTests40.getarchive();
        java.io.File file47 = null;
        explodedArchiveTests40.setrootFolder(file47);
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests40.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests40.archive = explodedArchive50;
        java.io.File file52 = null;
        explodedArchiveTests40.setrootFolder(file52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = explodedArchiveTests40.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests55 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests55.temporaryFolder;
        java.io.File file57 = explodedArchiveTests55.getrootFolder();
        java.io.File file58 = explodedArchiveTests55.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests55.temporaryFolder;
        java.io.File file60 = explodedArchiveTests55.getrootFolder();
        java.io.File file61 = explodedArchiveTests55.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = explodedArchiveTests55.getarchive();
        java.io.File file63 = null;
        explodedArchiveTests55.rootFolder = file63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = null;
        explodedArchiveTests55.setarchive(explodedArchive65);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests67 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder68 = explodedArchiveTests67.temporaryFolder;
        java.io.File file69 = explodedArchiveTests67.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder70 = explodedArchiveTests67.gettemporaryFolder();
        explodedArchiveTests55.temporaryFolder = temporaryFolder70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = explodedArchiveTests55.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests73 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests73.temporaryFolder;
        java.io.File file75 = explodedArchiveTests73.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests73.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests73.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder78 = explodedArchiveTests73.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = null;
        explodedArchiveTests73.setarchive(explodedArchive79);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests81 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder82 = explodedArchiveTests81.temporaryFolder;
        java.io.File file83 = explodedArchiveTests81.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests81.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder85 = explodedArchiveTests81.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder86 = explodedArchiveTests81.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder87 = explodedArchiveTests81.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = null;
        explodedArchiveTests81.setarchive(explodedArchive88);
        org.junit.rules.TemporaryFolder temporaryFolder90 = explodedArchiveTests81.gettemporaryFolder();
        explodedArchiveTests73.settemporaryFolder(temporaryFolder90);
        explodedArchiveTests55.temporaryFolder = temporaryFolder90;
        explodedArchiveTests40.settemporaryFolder(temporaryFolder90);
        explodedArchiveTests0.temporaryFolder = temporaryFolder90;
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(temporaryFolder68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(temporaryFolder70);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
        org.junit.Assert.assertNotNull(temporaryFolder77);
        org.junit.Assert.assertNotNull(temporaryFolder78);
        org.junit.Assert.assertNotNull(temporaryFolder82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNotNull(temporaryFolder85);
        org.junit.Assert.assertNotNull(temporaryFolder86);
        org.junit.Assert.assertNotNull(temporaryFolder87);
        org.junit.Assert.assertNotNull(temporaryFolder90);
    }

    @Test
    public void test05533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05533");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
    }

    @Test
    public void test05534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05534");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
    }

    @Test
    public void test05535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05535");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file17 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests10.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests10.archive;
        java.io.File file20 = explodedArchiveTests10.rootFolder;
        java.io.File file21 = null;
        explodedArchiveTests10.rootFolder = file21;
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder24;
        java.io.File file26 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(explodedArchive27);
    }

    @Test
    public void test05536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05536");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.Archive archive11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap12 = explodedArchiveTests0.getEntriesMap(archive11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
    }

    @Test
    public void test05537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05537");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder10;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test05538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05538");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file16 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        java.io.File file21 = explodedArchiveTests18.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests18.setarchive(explodedArchive22);
        java.io.File file24 = explodedArchiveTests18.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests18.archive = explodedArchive25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests18.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests18.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests18.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests30.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests30.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests30.gettemporaryFolder();
        explodedArchiveTests18.settemporaryFolder(temporaryFolder36);
        explodedArchiveTests0.temporaryFolder = temporaryFolder36;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests39 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests39.temporaryFolder;
        java.io.File file41 = explodedArchiveTests39.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests39.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests39.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests39.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder45 = null;
        explodedArchiveTests39.temporaryFolder = temporaryFolder45;
        java.io.File file47 = explodedArchiveTests39.getrootFolder();
        java.io.File file48 = null;
        explodedArchiveTests39.setrootFolder(file48);
        java.io.File file50 = explodedArchiveTests39.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests51 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests51.temporaryFolder;
        java.io.File file53 = explodedArchiveTests51.getrootFolder();
        java.io.File file54 = explodedArchiveTests51.rootFolder;
        java.io.File file55 = explodedArchiveTests51.rootFolder;
        java.io.File file56 = null;
        explodedArchiveTests51.setrootFolder(file56);
        java.io.File file58 = explodedArchiveTests51.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests51.gettemporaryFolder();
        explodedArchiveTests39.settemporaryFolder(temporaryFolder59);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests61 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests61.temporaryFolder;
        java.io.File file63 = explodedArchiveTests61.getrootFolder();
        java.io.File file64 = explodedArchiveTests61.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = null;
        explodedArchiveTests61.setarchive(explodedArchive65);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = explodedArchiveTests61.getarchive();
        java.io.File file68 = null;
        explodedArchiveTests61.setrootFolder(file68);
        org.junit.rules.TemporaryFolder temporaryFolder70 = explodedArchiveTests61.gettemporaryFolder();
        explodedArchiveTests39.settemporaryFolder(temporaryFolder70);
        explodedArchiveTests0.temporaryFolder = temporaryFolder70;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(temporaryFolder70);
    }

    @Test
    public void test05539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05539");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests9.setarchive(explodedArchive15);
        java.io.File file17 = explodedArchiveTests9.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests18.setarchive(explodedArchive25);
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = null;
        explodedArchiveTests18.setarchive(explodedArchive28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = explodedArchiveTests18.archive;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = explodedArchiveTests32.getrootFolder();
        java.io.File file35 = explodedArchiveTests32.getrootFolder();
        java.io.File file36 = explodedArchiveTests32.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests32.gettemporaryFolder();
        explodedArchiveTests18.temporaryFolder = temporaryFolder37;
        java.io.File file39 = null;
        explodedArchiveTests18.rootFolder = file39;
        java.io.File file41 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests9.settemporaryFolder(temporaryFolder42);
        explodedArchiveTests0.temporaryFolder = temporaryFolder42;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
    }

    @Test
    public void test05540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05540");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.setarchive(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test05541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05541");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        java.io.File file32 = explodedArchiveTests29.getrootFolder();
        java.io.File file33 = explodedArchiveTests29.rootFolder;
        java.io.File file34 = explodedArchiveTests29.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        java.io.File file44 = explodedArchiveTests41.rootFolder;
        java.io.File file45 = explodedArchiveTests41.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests41.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests35.temporaryFolder = temporaryFolder48;
        explodedArchiveTests29.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests0.setarchive(explodedArchive52);
        java.io.File file54 = null;
        explodedArchiveTests0.rootFolder = file54;
        java.io.File file56 = null;
        explodedArchiveTests0.setrootFolder(file56);
        org.junit.rules.TemporaryFolder temporaryFolder58 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder58);
    }

    @Test
    public void test05542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05542");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.getrootFolder();
        java.io.File file11 = explodedArchiveTests7.rootFolder;
        java.io.File file12 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests7.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        java.io.File file16 = null;
        explodedArchiveTests0.rootFolder = file16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests0.archive = explodedArchive18;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test05543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05543");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file16 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(explodedArchive17);
    }

    @Test
    public void test05544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05544");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests0.rootFolder = file12;
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests15.archive;
        java.io.File file17 = null;
        explodedArchiveTests15.setrootFolder(file17);
        java.io.File file19 = null;
        explodedArchiveTests15.setrootFolder(file19);
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests15.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05545");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file14 = null;
        explodedArchiveTests10.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests10.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests10.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests10.setarchive(explodedArchive18);
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder20;
        java.io.File file22 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test05546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05546");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(temporaryFolder8);
        org.junit.Assert.assertNull(temporaryFolder9);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05547");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05548");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05549");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = null;
        explodedArchiveTests0.rootFolder = file8;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file14 = null;
        explodedArchiveTests10.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests10.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file18 = null;
        explodedArchiveTests10.setrootFolder(file18);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests20.gettemporaryFolder();
        explodedArchiveTests10.settemporaryFolder(temporaryFolder23);
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder26;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = null;
        explodedArchiveTests28.rootFolder = file30;
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests28.getarchive();
        java.io.File file34 = null;
        explodedArchiveTests28.setrootFolder(file34);
        java.io.File file36 = explodedArchiveTests28.rootFolder;
        java.io.File file37 = explodedArchiveTests28.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests38 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests38.temporaryFolder;
        java.io.File file40 = explodedArchiveTests38.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests38.gettemporaryFolder();
        java.io.File file42 = null;
        explodedArchiveTests38.rootFolder = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = explodedArchiveTests38.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests38.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests38.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests38.temporaryFolder;
        explodedArchiveTests28.temporaryFolder = temporaryFolder48;
        java.io.File file50 = null;
        explodedArchiveTests28.rootFolder = file50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests28.archive = explodedArchive52;
        java.io.File file54 = null;
        explodedArchiveTests28.setrootFolder(file54);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = explodedArchiveTests28.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = null;
        explodedArchiveTests28.archive = explodedArchive57;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests59 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests59.temporaryFolder;
        java.io.File file61 = explodedArchiveTests59.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests59.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests64 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests64.temporaryFolder;
        java.io.File file66 = explodedArchiveTests64.getrootFolder();
        java.io.File file67 = explodedArchiveTests64.getrootFolder();
        java.io.File file68 = explodedArchiveTests64.rootFolder;
        java.io.File file69 = explodedArchiveTests64.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests70 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests70.temporaryFolder;
        java.io.File file72 = explodedArchiveTests70.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder73 = explodedArchiveTests70.gettemporaryFolder();
        java.io.File file74 = null;
        explodedArchiveTests70.rootFolder = file74;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = explodedArchiveTests70.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests70.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests78 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder79 = explodedArchiveTests78.temporaryFolder;
        java.io.File file80 = explodedArchiveTests78.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder81 = explodedArchiveTests78.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder82 = explodedArchiveTests78.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder83 = explodedArchiveTests78.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests78.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = null;
        explodedArchiveTests78.setarchive(explodedArchive85);
        org.junit.rules.TemporaryFolder temporaryFolder87 = explodedArchiveTests78.gettemporaryFolder();
        explodedArchiveTests70.settemporaryFolder(temporaryFolder87);
        explodedArchiveTests64.settemporaryFolder(temporaryFolder87);
        java.io.File file90 = explodedArchiveTests64.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive91 = explodedArchiveTests64.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder92 = explodedArchiveTests64.gettemporaryFolder();
        explodedArchiveTests59.settemporaryFolder(temporaryFolder92);
        explodedArchiveTests28.temporaryFolder = temporaryFolder92;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder92);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(temporaryFolder73);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(temporaryFolder77);
        org.junit.Assert.assertNotNull(temporaryFolder79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(temporaryFolder81);
        org.junit.Assert.assertNotNull(temporaryFolder82);
        org.junit.Assert.assertNotNull(temporaryFolder83);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNotNull(temporaryFolder87);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNull(explodedArchive91);
        org.junit.Assert.assertNotNull(temporaryFolder92);
    }

    @Test
    public void test05550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05550");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests9.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests17.setarchive(explodedArchive24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = explodedArchiveTests17.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        explodedArchiveTests17.settemporaryFolder(temporaryFolder30);
        explodedArchiveTests9.temporaryFolder = temporaryFolder30;
        explodedArchiveTests0.temporaryFolder = temporaryFolder30;
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        java.io.File file44 = explodedArchiveTests41.rootFolder;
        java.io.File file45 = explodedArchiveTests41.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests41.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests35.temporaryFolder = temporaryFolder48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = explodedArchiveTests35.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests51 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests51.temporaryFolder;
        java.io.File file53 = explodedArchiveTests51.getrootFolder();
        java.io.File file54 = explodedArchiveTests51.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = null;
        explodedArchiveTests51.setarchive(explodedArchive55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = null;
        explodedArchiveTests51.archive = explodedArchive57;
        java.io.File file59 = explodedArchiveTests51.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests51.temporaryFolder;
        explodedArchiveTests35.settemporaryFolder(temporaryFolder60);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder60);
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNotNull(temporaryFolder63);
    }

    @Test
    public void test05551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05551");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = null;
        explodedArchiveTests0.setarchive(explodedArchive2);
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test05552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05552");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        java.io.File file14 = explodedArchiveTests11.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        explodedArchiveTests11.settemporaryFolder(temporaryFolder16);
        explodedArchiveTests5.temporaryFolder = temporaryFolder16;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests19.gettemporaryFolder();
        explodedArchiveTests5.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests5.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests5.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder25);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream27, outputStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
    }

    @Test
    public void test05553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05553");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test05554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05554");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file14 = null;
        explodedArchiveTests10.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests10.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests10.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests10.setarchive(explodedArchive18);
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder20;
        java.io.File file22 = null;
        explodedArchiveTests0.rootFolder = file22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests0.archive = explodedArchive24;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests0.setarchive(explodedArchive26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive28);
    }

    @Test
    public void test05555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05555");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        java.io.File file14 = explodedArchiveTests11.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests11.temporaryFolder;
        java.io.File file16 = explodedArchiveTests11.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests11.archive;
        java.io.File file18 = null;
        explodedArchiveTests11.setrootFolder(file18);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        java.io.File file23 = explodedArchiveTests20.getrootFolder();
        java.io.File file24 = explodedArchiveTests20.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests20.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests26.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests26.setarchive(explodedArchive33);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests35.setarchive(explodedArchive41);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests43.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests43.setarchive(explodedArchive50);
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests43.gettemporaryFolder();
        explodedArchiveTests35.settemporaryFolder(temporaryFolder52);
        explodedArchiveTests26.temporaryFolder = temporaryFolder52;
        explodedArchiveTests20.temporaryFolder = temporaryFolder52;
        explodedArchiveTests11.temporaryFolder = temporaryFolder52;
        explodedArchiveTests0.temporaryFolder = temporaryFolder52;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder52);
    }

    @Test
    public void test05556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05556");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = explodedArchiveTests0.rootFolder;
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test05557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05557");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests15.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        java.io.File file23 = null;
        explodedArchiveTests0.rootFolder = file23;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests26.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = null;
        explodedArchiveTests26.setarchive(explodedArchive32);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests34.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests34.setarchive(explodedArchive41);
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests34.gettemporaryFolder();
        explodedArchiveTests26.settemporaryFolder(temporaryFolder43);
        java.io.File file45 = null;
        explodedArchiveTests26.setrootFolder(file45);
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests26.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder47;
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests0.temporaryFolder;
        java.lang.Class<?> wildcardClass50 = temporaryFolder49.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test05558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05558");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests8.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        explodedArchiveTests22.settemporaryFolder(temporaryFolder27);
        explodedArchiveTests16.temporaryFolder = temporaryFolder27;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        explodedArchiveTests16.temporaryFolder = temporaryFolder33;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests37.gettemporaryFolder();
        java.io.File file44 = explodedArchiveTests37.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = null;
        explodedArchiveTests37.setarchive(explodedArchive45);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests47 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests47.temporaryFolder;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        java.io.File file51 = null;
        explodedArchiveTests0.setrootFolder(file51);
        java.io.File file53 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests54 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests54.temporaryFolder;
        java.io.File file56 = explodedArchiveTests54.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests54.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder58 = explodedArchiveTests54.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests54.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = null;
        explodedArchiveTests54.setarchive(explodedArchive60);
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests54.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder62;
        org.junit.rules.TemporaryFolder temporaryFolder64 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file65 = null;
        explodedArchiveTests0.rootFolder = file65;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNotNull(temporaryFolder58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNotNull(temporaryFolder64);
    }

    @Test
    public void test05559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05559");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        java.io.File file11 = explodedArchiveTests7.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests7.setarchive(explodedArchive12);
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests7.gettemporaryFolder();
        java.io.File file15 = explodedArchiveTests7.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests7.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests7.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests18.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = explodedArchiveTests24.getrootFolder();
        java.io.File file27 = explodedArchiveTests24.rootFolder;
        java.io.File file28 = explodedArchiveTests24.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = null;
        explodedArchiveTests24.setarchive(explodedArchive29);
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests24.gettemporaryFolder();
        explodedArchiveTests18.temporaryFolder = temporaryFolder31;
        explodedArchiveTests7.temporaryFolder = temporaryFolder31;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        java.io.File file37 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests34.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests34.archive = explodedArchive39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests34.archive = explodedArchive41;
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests34.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = null;
        explodedArchiveTests34.archive = explodedArchive44;
        java.io.File file46 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests34.temporaryFolder;
        explodedArchiveTests7.settemporaryFolder(temporaryFolder47);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder47);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream50, outputStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
    }

    @Test
    public void test05560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05560");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = null;
        explodedArchiveTests17.rootFolder = file19;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests17.getarchive();
        java.io.File file23 = null;
        explodedArchiveTests17.setrootFolder(file23);
        java.io.File file25 = explodedArchiveTests17.rootFolder;
        java.io.File file26 = explodedArchiveTests17.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        java.io.File file31 = null;
        explodedArchiveTests27.rootFolder = file31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests27.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests27.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = null;
        explodedArchiveTests27.setarchive(explodedArchive35);
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests27.temporaryFolder;
        explodedArchiveTests17.temporaryFolder = temporaryFolder37;
        explodedArchiveTests0.temporaryFolder = temporaryFolder37;
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests0.setarchive(explodedArchive41);
        java.io.File file43 = null;
        explodedArchiveTests0.setrootFolder(file43);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder40);
    }

    @Test
    public void test05561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05561");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05562");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05563");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        java.io.File file11 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests8.archive = explodedArchive13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.archive = explodedArchive15;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
    }

    @Test
    public void test05564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05564");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.archive = explodedArchive5;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
    }

    @Test
    public void test05565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05565");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        java.io.File file10 = null;
        explodedArchiveTests0.setrootFolder(file10);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
    }

    @Test
    public void test05566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05566");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
    }

    @Test
    public void test05567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05567");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        java.io.File file12 = null;
        explodedArchiveTests0.setrootFolder(file12);
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder14);
    }

    @Test
    public void test05568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05568");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream9, outputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test05569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05569");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.setarchive(explodedArchive11);
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests6.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests6.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        java.io.File file20 = explodedArchiveTests17.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests17.setarchive(explodedArchive21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = null;
        explodedArchiveTests17.archive = explodedArchive23;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        java.io.File file27 = explodedArchiveTests25.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests25.gettemporaryFolder();
        java.io.File file29 = null;
        explodedArchiveTests25.rootFolder = file29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = explodedArchiveTests25.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests25.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests33.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests33.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests33.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests39 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests39.temporaryFolder;
        java.io.File file41 = explodedArchiveTests39.getrootFolder();
        java.io.File file42 = explodedArchiveTests39.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        explodedArchiveTests39.settemporaryFolder(temporaryFolder44);
        explodedArchiveTests33.temporaryFolder = temporaryFolder44;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests47 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests47.temporaryFolder;
        java.io.File file49 = explodedArchiveTests47.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests47.gettemporaryFolder();
        explodedArchiveTests33.temporaryFolder = temporaryFolder50;
        explodedArchiveTests25.settemporaryFolder(temporaryFolder50);
        explodedArchiveTests17.temporaryFolder = temporaryFolder50;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder50);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder50);
        java.io.File file56 = null;
        explodedArchiveTests0.rootFolder = file56;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(temporaryFolder50);
    }

    @Test
    public void test05570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05570");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        java.io.File file13 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
    }

    @Test
    public void test05571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05571");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder10);
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder12);
    }

    @Test
    public void test05572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05572");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test05573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05573");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        java.io.File file12 = null;
        explodedArchiveTests0.setrootFolder(file12);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05574");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.archive = explodedArchive13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.archive;
        java.lang.Class<?> wildcardClass16 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test05575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05575");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        java.io.File file8 = null;
        explodedArchiveTests0.rootFolder = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test05576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05576");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.setarchive(explodedArchive11);
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder13;
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests17.setarchive(explodedArchive19);
        java.io.File file21 = null;
        explodedArchiveTests17.rootFolder = file21;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests23.gettemporaryFolder();
        java.io.File file30 = explodedArchiveTests23.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests23.setarchive(explodedArchive31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests23.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests23.gettemporaryFolder();
        explodedArchiveTests17.temporaryFolder = temporaryFolder34;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder34);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = null;
        explodedArchiveTests37.rootFolder = file39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = explodedArchiveTests37.archive;
        java.io.File file42 = null;
        explodedArchiveTests37.rootFolder = file42;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests44 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests44.temporaryFolder;
        java.io.File file46 = explodedArchiveTests44.getrootFolder();
        java.io.File file47 = explodedArchiveTests44.rootFolder;
        java.io.File file48 = explodedArchiveTests44.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests44.gettemporaryFolder();
        explodedArchiveTests37.settemporaryFolder(temporaryFolder49);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests51 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests51.temporaryFolder;
        java.io.File file53 = explodedArchiveTests51.getrootFolder();
        java.io.File file54 = explodedArchiveTests51.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests55 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests55.temporaryFolder;
        java.io.File file57 = explodedArchiveTests55.getrootFolder();
        java.io.File file58 = explodedArchiveTests55.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests55.temporaryFolder;
        explodedArchiveTests51.settemporaryFolder(temporaryFolder59);
        explodedArchiveTests37.settemporaryFolder(temporaryFolder59);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder59);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream63, outputStream64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
    }

    @Test
    public void test05577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05577");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests20.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests20.setarchive(explodedArchive26);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests28.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = null;
        explodedArchiveTests28.setarchive(explodedArchive35);
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests28.gettemporaryFolder();
        explodedArchiveTests20.settemporaryFolder(temporaryFolder37);
        explodedArchiveTests15.temporaryFolder = temporaryFolder37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = null;
        explodedArchiveTests15.archive = explodedArchive40;
        org.junit.rules.TemporaryFolder temporaryFolder42 = null;
        explodedArchiveTests15.settemporaryFolder(temporaryFolder42);
        java.io.File file44 = explodedArchiveTests15.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests45 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests45.temporaryFolder;
        java.io.File file47 = null;
        explodedArchiveTests45.rootFolder = file47;
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests45.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = explodedArchiveTests45.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests45.gettemporaryFolder();
        explodedArchiveTests15.settemporaryFolder(temporaryFolder51);
        explodedArchiveTests0.temporaryFolder = temporaryFolder51;
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream54, outputStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(temporaryFolder51);
    }

    @Test
    public void test05578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05578");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.File file13 = null;
        explodedArchiveTests0.rootFolder = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        java.io.File file19 = explodedArchiveTests16.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.temporaryFolder;
        java.io.File file21 = explodedArchiveTests16.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests16.archive;
        java.io.File file23 = null;
        explodedArchiveTests16.setrootFolder(file23);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        java.io.File file27 = explodedArchiveTests25.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests25.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests25.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests25.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests25.gettemporaryFolder();
        java.io.File file32 = explodedArchiveTests25.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests25.setarchive(explodedArchive33);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        explodedArchiveTests25.settemporaryFolder(temporaryFolder36);
        explodedArchiveTests16.settemporaryFolder(temporaryFolder36);
        java.io.File file39 = null;
        explodedArchiveTests16.rootFolder = file39;
        java.io.File file41 = explodedArchiveTests16.rootFolder;
        java.io.File file42 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests16.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder43;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
    }

    @Test
    public void test05579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05579");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.getarchive();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests16.gettemporaryFolder();
        java.io.File file23 = explodedArchiveTests16.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests16.setarchive(explodedArchive24);
        java.io.File file26 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests16.gettemporaryFolder();
        java.io.File file28 = null;
        explodedArchiveTests16.rootFolder = file28;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests16.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = null;
        explodedArchiveTests0.setarchive(explodedArchive32);
        java.io.File file34 = null;
        explodedArchiveTests0.setrootFolder(file34);
        java.io.File file36 = null;
        explodedArchiveTests0.rootFolder = file36;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder30);
    }

    @Test
    public void test05580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05580");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests15.archive;
        java.io.File file22 = explodedArchiveTests15.rootFolder;
        java.io.File file23 = null;
        explodedArchiveTests15.setrootFolder(file23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = explodedArchiveTests15.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = null;
        explodedArchiveTests26.rootFolder = file28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = explodedArchiveTests26.archive;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests26.gettemporaryFolder();
        explodedArchiveTests15.temporaryFolder = temporaryFolder31;
        explodedArchiveTests0.temporaryFolder = temporaryFolder31;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
    }

    @Test
    public void test05581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05581");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.archive = explodedArchive8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05582");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(temporaryFolder13);
    }

    @Test
    public void test05583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05583");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests12.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests6.temporaryFolder = temporaryFolder19;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests0.archive = explodedArchive22;
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream24, outputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
    }

    @Test
    public void test05584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05584");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.setrootFolder(file4);
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
    }

    @Test
    public void test05585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05585");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder14 = null;
        explodedArchiveTests8.temporaryFolder = temporaryFolder14;
        java.io.File file16 = explodedArchiveTests8.getrootFolder();
        java.io.File file17 = null;
        explodedArchiveTests8.setrootFolder(file17);
        java.io.File file19 = explodedArchiveTests8.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        java.io.File file23 = explodedArchiveTests20.rootFolder;
        java.io.File file24 = explodedArchiveTests20.rootFolder;
        java.io.File file25 = null;
        explodedArchiveTests20.setrootFolder(file25);
        java.io.File file27 = explodedArchiveTests20.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests20.gettemporaryFolder();
        explodedArchiveTests8.settemporaryFolder(temporaryFolder28);
        explodedArchiveTests0.temporaryFolder = temporaryFolder28;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests0.temporaryFolder;
        java.io.File file32 = null;
        explodedArchiveTests0.rootFolder = file32;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        java.io.File file37 = explodedArchiveTests34.getrootFolder();
        java.io.File file38 = explodedArchiveTests34.rootFolder;
        java.io.File file39 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests34.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = explodedArchiveTests34.archive;
        java.io.File file42 = explodedArchiveTests34.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = null;
        explodedArchiveTests43.setarchive(explodedArchive49);
        java.io.File file51 = explodedArchiveTests43.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests52 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests52.temporaryFolder;
        java.io.File file54 = explodedArchiveTests52.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests52.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests52.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests52.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder58 = explodedArchiveTests52.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = null;
        explodedArchiveTests52.setarchive(explodedArchive59);
        org.junit.rules.TemporaryFolder temporaryFolder61 = explodedArchiveTests52.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = null;
        explodedArchiveTests52.setarchive(explodedArchive62);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = explodedArchiveTests52.archive;
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests52.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests66 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder67 = explodedArchiveTests66.temporaryFolder;
        java.io.File file68 = explodedArchiveTests66.getrootFolder();
        java.io.File file69 = explodedArchiveTests66.getrootFolder();
        java.io.File file70 = explodedArchiveTests66.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests66.gettemporaryFolder();
        explodedArchiveTests52.temporaryFolder = temporaryFolder71;
        java.io.File file73 = null;
        explodedArchiveTests52.rootFolder = file73;
        java.io.File file75 = explodedArchiveTests52.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests52.temporaryFolder;
        explodedArchiveTests43.settemporaryFolder(temporaryFolder76);
        explodedArchiveTests34.temporaryFolder = temporaryFolder76;
        explodedArchiveTests0.temporaryFolder = temporaryFolder76;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNotNull(temporaryFolder58);
        org.junit.Assert.assertNotNull(temporaryFolder61);
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNotNull(temporaryFolder67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
    }

    @Test
    public void test05586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05586");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = null;
        explodedArchiveTests0.setarchive(explodedArchive2);
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file13 = explodedArchiveTests6.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests6.setarchive(explodedArchive14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests6.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests6.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05587");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        java.io.File file17 = null;
        explodedArchiveTests13.rootFolder = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests13.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        java.io.File file23 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests0.temporaryFolder;
        java.io.File file25 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests0.archive = explodedArchive26;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests0.gettemporaryFolder();
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream30, outputStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
    }

    @Test
    public void test05588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05588");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.archive = explodedArchive5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests9.setarchive(explodedArchive16);
        org.junit.rules.TemporaryFolder temporaryFolder18 = null;
        explodedArchiveTests9.temporaryFolder = temporaryFolder18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests9.setarchive(explodedArchive20);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests22.gettemporaryFolder();
        java.io.File file29 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.getrootFolder();
        java.io.File file33 = explodedArchiveTests30.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests30.temporaryFolder;
        explodedArchiveTests22.temporaryFolder = temporaryFolder34;
        explodedArchiveTests9.settemporaryFolder(temporaryFolder34);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder34);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
    }

    @Test
    public void test05589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05589");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.setrootFolder(file5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05590");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        java.io.File file12 = null;
        explodedArchiveTests0.setrootFolder(file12);
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.archive = explodedArchive15;
        java.io.File file17 = explodedArchiveTests0.getrootFolder();
        java.io.File file18 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(explodedArchive19);
    }

    @Test
    public void test05591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05591");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.archive = explodedArchive5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder10 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder10);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05592");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
    }

    @Test
    public void test05593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05593");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.setrootFolder(file5);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.archive = explodedArchive14;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive13);
    }

    @Test
    public void test05594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05594");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.archive = explodedArchive8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
    }

    @Test
    public void test05595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05595");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests12.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests6.temporaryFolder = temporaryFolder19;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder19);
        java.io.File file22 = null;
        explodedArchiveTests0.setrootFolder(file22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests0.getarchive();
        java.io.File file25 = null;
        explodedArchiveTests0.rootFolder = file25;
        java.io.File file27 = null;
        explodedArchiveTests0.setrootFolder(file27);
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests0.temporaryFolder;
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream30, outputStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(temporaryFolder29);
    }

    @Test
    public void test05596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05596");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        java.io.File file26 = explodedArchiveTests23.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        explodedArchiveTests23.settemporaryFolder(temporaryFolder28);
        explodedArchiveTests17.temporaryFolder = temporaryFolder28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests17.archive = explodedArchive31;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests17.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder33);
    }

    @Test
    public void test05597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05597");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.temporaryFolder;
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test05598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05598");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file10 = null;
        explodedArchiveTests6.rootFolder = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests6.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file14 = null;
        explodedArchiveTests6.setrootFolder(file14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests6.setarchive(explodedArchive16);
        java.io.File file18 = explodedArchiveTests6.getrootFolder();
        java.io.File file19 = null;
        explodedArchiveTests6.setrootFolder(file19);
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests6.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder21;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05599");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests9.setarchive(explodedArchive16);
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests9.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests9.archive;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = null;
        explodedArchiveTests23.rootFolder = file25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests23.getarchive();
        java.io.File file29 = null;
        explodedArchiveTests23.setrootFolder(file29);
        java.io.File file31 = explodedArchiveTests23.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = explodedArchiveTests32.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests32.gettemporaryFolder();
        java.io.File file39 = explodedArchiveTests32.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = null;
        explodedArchiveTests32.setarchive(explodedArchive40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = explodedArchiveTests32.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests32.temporaryFolder;
        explodedArchiveTests23.settemporaryFolder(temporaryFolder44);
        explodedArchiveTests9.settemporaryFolder(temporaryFolder44);
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests9.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder47);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder47);
    }

    @Test
    public void test05600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05600");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05601");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests5.gettemporaryFolder();
        java.io.File file12 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests5.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder13;
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.getarchive();
        java.io.File file18 = null;
        explodedArchiveTests0.setrootFolder(file18);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive17);
    }

    @Test
    public void test05602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05602");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
    }

    @Test
    public void test05603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05603");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test05604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05604");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        java.io.File file11 = null;
        explodedArchiveTests0.rootFolder = file11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.getrootFolder();
        java.io.File file22 = explodedArchiveTests19.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        explodedArchiveTests19.settemporaryFolder(temporaryFolder24);
        explodedArchiveTests13.temporaryFolder = temporaryFolder24;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        explodedArchiveTests13.temporaryFolder = temporaryFolder30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = explodedArchiveTests13.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.getrootFolder();
        java.io.File file36 = explodedArchiveTests33.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = null;
        explodedArchiveTests33.setarchive(explodedArchive37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests33.archive = explodedArchive39;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests41.gettemporaryFolder();
        java.io.File file45 = null;
        explodedArchiveTests41.rootFolder = file45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = explodedArchiveTests41.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests49 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests49.temporaryFolder;
        java.io.File file51 = explodedArchiveTests49.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests49.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests49.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests49.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests55 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests55.temporaryFolder;
        java.io.File file57 = explodedArchiveTests55.getrootFolder();
        java.io.File file58 = explodedArchiveTests55.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests59 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests59.temporaryFolder;
        explodedArchiveTests55.settemporaryFolder(temporaryFolder60);
        explodedArchiveTests49.temporaryFolder = temporaryFolder60;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests63 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder64 = explodedArchiveTests63.temporaryFolder;
        java.io.File file65 = explodedArchiveTests63.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder66 = explodedArchiveTests63.gettemporaryFolder();
        explodedArchiveTests49.temporaryFolder = temporaryFolder66;
        explodedArchiveTests41.settemporaryFolder(temporaryFolder66);
        explodedArchiveTests33.temporaryFolder = temporaryFolder66;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests70 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests70.temporaryFolder;
        java.io.File file72 = explodedArchiveTests70.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder73 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder75 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests70.gettemporaryFolder();
        java.io.File file77 = explodedArchiveTests70.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = null;
        explodedArchiveTests70.setarchive(explodedArchive78);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests80 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder81 = explodedArchiveTests80.temporaryFolder;
        explodedArchiveTests70.settemporaryFolder(temporaryFolder81);
        explodedArchiveTests33.settemporaryFolder(temporaryFolder81);
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests33.temporaryFolder;
        explodedArchiveTests13.temporaryFolder = temporaryFolder84;
        explodedArchiveTests0.temporaryFolder = temporaryFolder84;
        java.io.File file87 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = null;
        explodedArchiveTests0.archive = explodedArchive88;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNotNull(temporaryFolder64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(temporaryFolder66);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(temporaryFolder73);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNotNull(temporaryFolder75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(temporaryFolder81);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNull(file87);
    }

    @Test
    public void test05605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05605");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file17 = explodedArchiveTests0.getrootFolder();
        java.io.File file18 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests0.archive = explodedArchive19;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests0.archive = explodedArchive22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests0.archive = explodedArchive24;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05606");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test05607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05607");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.setrootFolder(file5);
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test05608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05608");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests0.temporaryFolder;
        java.io.File file18 = null;
        explodedArchiveTests0.setrootFolder(file18);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder17);
    }

    @Test
    public void test05609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05609");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.rootFolder = file6;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test05610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05610");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test05611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05611");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests12.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests12.setarchive(explodedArchive18);
        java.io.File file20 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        java.io.File file23 = explodedArchiveTests0.getrootFolder();
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream24, outputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test05612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05612");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder10);
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        org.springframework.boot.loader.archive.Archive archive15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap16 = explodedArchiveTests0.getEntriesMap(archive15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05613");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        java.io.File file32 = explodedArchiveTests29.getrootFolder();
        java.io.File file33 = explodedArchiveTests29.rootFolder;
        java.io.File file34 = explodedArchiveTests29.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        java.io.File file44 = explodedArchiveTests41.rootFolder;
        java.io.File file45 = explodedArchiveTests41.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests41.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests35.temporaryFolder = temporaryFolder48;
        explodedArchiveTests29.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests0.setarchive(explodedArchive52);
        java.io.File file54 = null;
        explodedArchiveTests0.rootFolder = file54;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
    }

    @Test
    public void test05614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05614");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = null;
        explodedArchiveTests0.rootFolder = file14;
        java.io.File file16 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test05615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05615");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = null;
        explodedArchiveTests0.setarchive(explodedArchive2);
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
    }

    @Test
    public void test05616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05616");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder7);
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream9, outputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test05617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05617");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests12.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests6.temporaryFolder = temporaryFolder19;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder19);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder23;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        java.io.File file29 = explodedArchiveTests26.rootFolder;
        java.io.File file30 = explodedArchiveTests26.rootFolder;
        java.io.File file31 = null;
        explodedArchiveTests26.setrootFolder(file31);
        java.io.File file33 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests26.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder34;
        java.io.File file36 = null;
        explodedArchiveTests0.rootFolder = file36;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
    }

    @Test
    public void test05618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05618");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(temporaryFolder15);
    }

    @Test
    public void test05619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05619");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        java.io.File file15 = null;
        explodedArchiveTests0.rootFolder = file15;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test05620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05620");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests12.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests6.temporaryFolder = temporaryFolder19;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder19);
        java.io.File file22 = null;
        explodedArchiveTests0.setrootFolder(file22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests27.gettemporaryFolder();
        java.io.File file34 = explodedArchiveTests27.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        java.io.File file38 = explodedArchiveTests35.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.temporaryFolder;
        explodedArchiveTests27.temporaryFolder = temporaryFolder39;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = null;
        explodedArchiveTests0.archive = explodedArchive42;
        java.io.File file44 = null;
        explodedArchiveTests0.setrootFolder(file44);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
    }

    @Test
    public void test05621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05621");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests0.archive = explodedArchive20;
        java.io.File file22 = null;
        explodedArchiveTests0.setrootFolder(file22);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(explodedArchive19);
    }

    @Test
    public void test05622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05622");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.getarchive();
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05623");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.temporaryFolder;
        java.io.File file17 = null;
        explodedArchiveTests0.setrootFolder(file17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests0.getarchive();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive20);
    }

    @Test
    public void test05624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05624");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = null;
        explodedArchiveTests19.rootFolder = file21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = explodedArchiveTests19.archive;
        java.io.File file24 = null;
        explodedArchiveTests19.setrootFolder(file24);
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests19.temporaryFolder;
        java.io.File file27 = null;
        explodedArchiveTests19.rootFolder = file27;
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests19.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = explodedArchiveTests19.archive;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests19.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder31;
        java.io.File file33 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test05625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05625");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        java.io.File file11 = null;
        explodedArchiveTests0.rootFolder = file11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.getrootFolder();
        java.io.File file22 = explodedArchiveTests19.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        explodedArchiveTests19.settemporaryFolder(temporaryFolder24);
        explodedArchiveTests13.temporaryFolder = temporaryFolder24;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        explodedArchiveTests13.temporaryFolder = temporaryFolder30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = explodedArchiveTests13.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.getrootFolder();
        java.io.File file36 = explodedArchiveTests33.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = null;
        explodedArchiveTests33.setarchive(explodedArchive37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests33.archive = explodedArchive39;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests41.gettemporaryFolder();
        java.io.File file45 = null;
        explodedArchiveTests41.rootFolder = file45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = explodedArchiveTests41.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests49 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests49.temporaryFolder;
        java.io.File file51 = explodedArchiveTests49.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests49.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests49.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests49.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests55 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests55.temporaryFolder;
        java.io.File file57 = explodedArchiveTests55.getrootFolder();
        java.io.File file58 = explodedArchiveTests55.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests59 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests59.temporaryFolder;
        explodedArchiveTests55.settemporaryFolder(temporaryFolder60);
        explodedArchiveTests49.temporaryFolder = temporaryFolder60;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests63 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder64 = explodedArchiveTests63.temporaryFolder;
        java.io.File file65 = explodedArchiveTests63.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder66 = explodedArchiveTests63.gettemporaryFolder();
        explodedArchiveTests49.temporaryFolder = temporaryFolder66;
        explodedArchiveTests41.settemporaryFolder(temporaryFolder66);
        explodedArchiveTests33.temporaryFolder = temporaryFolder66;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests70 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests70.temporaryFolder;
        java.io.File file72 = explodedArchiveTests70.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder73 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder75 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests70.gettemporaryFolder();
        java.io.File file77 = explodedArchiveTests70.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = null;
        explodedArchiveTests70.setarchive(explodedArchive78);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests80 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder81 = explodedArchiveTests80.temporaryFolder;
        explodedArchiveTests70.settemporaryFolder(temporaryFolder81);
        explodedArchiveTests33.settemporaryFolder(temporaryFolder81);
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests33.temporaryFolder;
        explodedArchiveTests13.temporaryFolder = temporaryFolder84;
        explodedArchiveTests0.temporaryFolder = temporaryFolder84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = null;
        explodedArchiveTests0.setarchive(explodedArchive87);
        java.io.File file89 = explodedArchiveTests0.getrootFolder();
        java.io.File file90 = explodedArchiveTests0.getrootFolder();
        java.io.File file91 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.Archive archive92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap93 = explodedArchiveTests0.getEntriesMap(archive92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNotNull(temporaryFolder64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(temporaryFolder66);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(temporaryFolder73);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNotNull(temporaryFolder75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(temporaryFolder81);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNull(file91);
    }

    @Test
    public void test05626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05626");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests12.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests6.temporaryFolder = temporaryFolder19;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder19);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder23;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
    }

    @Test
    public void test05627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05627");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file17 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests10.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests10.archive;
        java.io.File file20 = explodedArchiveTests10.rootFolder;
        java.io.File file21 = null;
        explodedArchiveTests10.rootFolder = file21;
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder24;
        java.io.File file26 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = null;
        explodedArchiveTests0.setarchive(explodedArchive28);
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests0.gettemporaryFolder();
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream31, outputStream32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(temporaryFolder30);
    }

    @Test
    public void test05628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05628");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
    }

    @Test
    public void test05629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05629");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        java.io.File file23 = explodedArchiveTests20.rootFolder;
        java.io.File file24 = explodedArchiveTests20.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests20.gettemporaryFolder();
        java.io.File file26 = explodedArchiveTests20.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests20.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        java.io.File file29 = null;
        explodedArchiveTests0.setrootFolder(file29);
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests0.temporaryFolder;
        java.io.File file32 = null;
        explodedArchiveTests0.setrootFolder(file32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = explodedArchiveTests0.getarchive();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(explodedArchive34);
    }

    @Test
    public void test05630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05630");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.archive = explodedArchive13;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05631");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests0.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests0.temporaryFolder;
        java.io.File file21 = null;
        explodedArchiveTests0.setrootFolder(file21);
        java.io.File file23 = null;
        explodedArchiveTests0.setrootFolder(file23);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
    }

    @Test
    public void test05632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05632");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
    }

    @Test
    public void test05633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05633");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = null;
        explodedArchiveTests0.setarchive(explodedArchive2);
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
    }

    @Test
    public void test05634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05634");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests4 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests4.temporaryFolder;
        java.io.File file6 = explodedArchiveTests4.getrootFolder();
        java.io.File file7 = explodedArchiveTests4.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests4.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder8);
        java.io.File file10 = null;
        explodedArchiveTests0.setrootFolder(file10);
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05635");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests4 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests4.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder5);
        org.springframework.boot.loader.archive.Archive archive7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap8 = explodedArchiveTests0.getEntriesMap(archive7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder5);
    }

    @Test
    public void test05636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05636");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests0.archive = explodedArchive16;
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file19 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.Archive archive20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap21 = explodedArchiveTests0.getEntriesMap(archive20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test05637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05637");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
    }

    @Test
    public void test05638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05638");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        java.lang.Class<?> wildcardClass11 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test05639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05639");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        java.io.File file11 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
    }

    @Test
    public void test05640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05640");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        java.io.File file11 = explodedArchiveTests7.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder12);
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        java.io.File file15 = null;
        explodedArchiveTests0.rootFolder = file15;
        java.io.File file17 = null;
        explodedArchiveTests0.rootFolder = file17;
        java.io.File file19 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test05641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05641");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file17 = explodedArchiveTests10.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests10.setarchive(explodedArchive18);
        java.io.File file20 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder21;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05642");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.archive = explodedArchive8;
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05643");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        java.io.File file19 = explodedArchiveTests0.getrootFolder();
        java.io.File file20 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder21 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        java.io.File file26 = explodedArchiveTests23.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.temporaryFolder;
        java.io.File file28 = explodedArchiveTests23.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests23.archive;
        java.io.File file30 = null;
        explodedArchiveTests23.setrootFolder(file30);
        java.io.File file32 = null;
        explodedArchiveTests23.rootFolder = file32;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests34.temporaryFolder;
        explodedArchiveTests23.settemporaryFolder(temporaryFolder40);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests42 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests42.temporaryFolder;
        java.io.File file44 = null;
        explodedArchiveTests42.rootFolder = file44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = explodedArchiveTests42.archive;
        java.io.File file47 = null;
        explodedArchiveTests42.rootFolder = file47;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests49 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests49.temporaryFolder;
        java.io.File file51 = explodedArchiveTests49.getrootFolder();
        java.io.File file52 = explodedArchiveTests49.rootFolder;
        java.io.File file53 = explodedArchiveTests49.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests49.gettemporaryFolder();
        explodedArchiveTests42.settemporaryFolder(temporaryFolder54);
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests42.temporaryFolder;
        explodedArchiveTests23.temporaryFolder = temporaryFolder56;
        java.io.File file58 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests23.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder59;
        java.io.File file61 = null;
        explodedArchiveTests0.setrootFolder(file61);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
    }

    @Test
    public void test05644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05644");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(explodedArchive11);
    }

    @Test
    public void test05645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05645");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05646");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder11);
    }

    @Test
    public void test05647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05647");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        java.io.File file15 = explodedArchiveTests0.rootFolder;
        java.io.File file16 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test05648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05648");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05649");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        java.io.File file11 = null;
        explodedArchiveTests0.rootFolder = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.archive;
        java.io.File file14 = null;
        explodedArchiveTests0.setrootFolder(file14);
        java.io.File file16 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive18);
    }

    @Test
    public void test05650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05650");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = null;
        explodedArchiveTests0.setrootFolder(file5);
        java.lang.Class<?> wildcardClass7 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05651");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = null;
        explodedArchiveTests8.rootFolder = file10;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests8.getarchive();
        java.io.File file14 = null;
        explodedArchiveTests8.setrootFolder(file14);
        java.io.File file16 = explodedArchiveTests8.rootFolder;
        java.io.File file17 = explodedArchiveTests8.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests18.gettemporaryFolder();
        java.io.File file22 = null;
        explodedArchiveTests18.rootFolder = file22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests18.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests18.setarchive(explodedArchive26);
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests8.temporaryFolder = temporaryFolder28;
        java.io.File file30 = null;
        explodedArchiveTests8.rootFolder = file30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = null;
        explodedArchiveTests8.archive = explodedArchive32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = null;
        explodedArchiveTests8.setarchive(explodedArchive34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = explodedArchiveTests8.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        java.io.File file40 = explodedArchiveTests37.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.temporaryFolder;
        java.io.File file42 = explodedArchiveTests37.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = explodedArchiveTests37.archive;
        java.io.File file44 = null;
        explodedArchiveTests37.setrootFolder(file44);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests46 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests46.temporaryFolder;
        java.io.File file48 = null;
        explodedArchiveTests46.rootFolder = file48;
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests46.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = explodedArchiveTests46.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests46.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests46.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests46.gettemporaryFolder();
        explodedArchiveTests37.temporaryFolder = temporaryFolder54;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder54);
        explodedArchiveTests0.temporaryFolder = temporaryFolder54;
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
    }

    @Test
    public void test05652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05652");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        java.io.File file11 = null;
        explodedArchiveTests0.rootFolder = file11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.getrootFolder();
        java.io.File file22 = explodedArchiveTests19.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        explodedArchiveTests19.settemporaryFolder(temporaryFolder24);
        explodedArchiveTests13.temporaryFolder = temporaryFolder24;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        explodedArchiveTests13.temporaryFolder = temporaryFolder30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = explodedArchiveTests13.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.getrootFolder();
        java.io.File file36 = explodedArchiveTests33.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = null;
        explodedArchiveTests33.setarchive(explodedArchive37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests33.archive = explodedArchive39;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests41.gettemporaryFolder();
        java.io.File file45 = null;
        explodedArchiveTests41.rootFolder = file45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = explodedArchiveTests41.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests49 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests49.temporaryFolder;
        java.io.File file51 = explodedArchiveTests49.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests49.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests49.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests49.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests55 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests55.temporaryFolder;
        java.io.File file57 = explodedArchiveTests55.getrootFolder();
        java.io.File file58 = explodedArchiveTests55.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests59 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests59.temporaryFolder;
        explodedArchiveTests55.settemporaryFolder(temporaryFolder60);
        explodedArchiveTests49.temporaryFolder = temporaryFolder60;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests63 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder64 = explodedArchiveTests63.temporaryFolder;
        java.io.File file65 = explodedArchiveTests63.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder66 = explodedArchiveTests63.gettemporaryFolder();
        explodedArchiveTests49.temporaryFolder = temporaryFolder66;
        explodedArchiveTests41.settemporaryFolder(temporaryFolder66);
        explodedArchiveTests33.temporaryFolder = temporaryFolder66;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests70 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests70.temporaryFolder;
        java.io.File file72 = explodedArchiveTests70.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder73 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder75 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests70.gettemporaryFolder();
        java.io.File file77 = explodedArchiveTests70.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = null;
        explodedArchiveTests70.setarchive(explodedArchive78);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests80 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder81 = explodedArchiveTests80.temporaryFolder;
        explodedArchiveTests70.settemporaryFolder(temporaryFolder81);
        explodedArchiveTests33.settemporaryFolder(temporaryFolder81);
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests33.temporaryFolder;
        explodedArchiveTests13.temporaryFolder = temporaryFolder84;
        explodedArchiveTests0.temporaryFolder = temporaryFolder84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = null;
        explodedArchiveTests0.setarchive(explodedArchive87);
        java.io.File file89 = explodedArchiveTests0.getrootFolder();
        java.io.File file90 = explodedArchiveTests0.getrootFolder();
        java.io.File file91 = explodedArchiveTests0.rootFolder;
        java.lang.Class<?> wildcardClass92 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNotNull(temporaryFolder64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(temporaryFolder66);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(temporaryFolder73);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNotNull(temporaryFolder75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(temporaryFolder81);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNull(file91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test05653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05653");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.File file13 = null;
        explodedArchiveTests0.rootFolder = file13;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests21 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests21.temporaryFolder;
        java.io.File file23 = explodedArchiveTests21.getrootFolder();
        java.io.File file24 = explodedArchiveTests21.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        explodedArchiveTests21.settemporaryFolder(temporaryFolder26);
        explodedArchiveTests15.temporaryFolder = temporaryFolder26;
        java.io.File file29 = explodedArchiveTests15.getrootFolder();
        java.io.File file30 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = null;
        explodedArchiveTests32.rootFolder = file34;
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests32.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = explodedArchiveTests32.getarchive();
        java.io.File file38 = null;
        explodedArchiveTests32.setrootFolder(file38);
        java.io.File file40 = explodedArchiveTests32.rootFolder;
        java.io.File file41 = explodedArchiveTests32.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests42 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests42.temporaryFolder;
        java.io.File file44 = explodedArchiveTests42.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests42.gettemporaryFolder();
        java.io.File file46 = null;
        explodedArchiveTests42.rootFolder = file46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = explodedArchiveTests42.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests42.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests42.setarchive(explodedArchive50);
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests42.temporaryFolder;
        explodedArchiveTests32.temporaryFolder = temporaryFolder52;
        explodedArchiveTests15.temporaryFolder = temporaryFolder52;
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests15.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder55);
        org.junit.rules.TemporaryFolder temporaryFolder57 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder57);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNotNull(temporaryFolder55);
    }

    @Test
    public void test05654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05654");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05655");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05656");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file17 = explodedArchiveTests0.getrootFolder();
        java.io.File file18 = explodedArchiveTests0.getrootFolder();
        java.io.File file19 = explodedArchiveTests0.rootFolder;
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream20, outputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test05657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05657");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests7.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder13;
        java.io.File file15 = null;
        explodedArchiveTests0.rootFolder = file15;
        java.io.File file17 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.getrootFolder();
        java.io.File file22 = explodedArchiveTests19.rootFolder;
        java.io.File file23 = explodedArchiveTests19.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests19.setarchive(explodedArchive24);
        java.io.File file26 = explodedArchiveTests19.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests19.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
    }

    @Test
    public void test05658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05658");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream8, outputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05659");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.setarchive(explodedArchive14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests0.archive;
        java.io.File file17 = null;
        explodedArchiveTests0.rootFolder = file17;
        org.springframework.boot.loader.archive.Archive archive19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap20 = explodedArchiveTests0.getEntriesMap(archive19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive16);
    }

    @Test
    public void test05660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05660");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        java.io.File file14 = null;
        explodedArchiveTests0.setrootFolder(file14);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder11);
    }

    @Test
    public void test05661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05661");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive11);
    }

    @Test
    public void test05662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05662");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file10 = null;
        explodedArchiveTests6.rootFolder = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests6.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests14.setarchive(explodedArchive21);
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests6.settemporaryFolder(temporaryFolder23);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder23);
        java.io.File file26 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
    }

    @Test
    public void test05663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05663");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file14 = null;
        explodedArchiveTests10.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests10.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests10.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests10.setarchive(explodedArchive18);
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder20;
        java.io.File file22 = null;
        explodedArchiveTests0.rootFolder = file22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests0.archive = explodedArchive24;
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder26);
    }

    @Test
    public void test05664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05664");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
    }

    @Test
    public void test05665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05665");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        java.io.File file14 = explodedArchiveTests11.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests11.setarchive(explodedArchive15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests11.archive = explodedArchive17;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests19.gettemporaryFolder();
        java.io.File file23 = null;
        explodedArchiveTests19.rootFolder = file23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = explodedArchiveTests19.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests19.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests27.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.getrootFolder();
        java.io.File file36 = explodedArchiveTests33.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        explodedArchiveTests33.settemporaryFolder(temporaryFolder38);
        explodedArchiveTests27.temporaryFolder = temporaryFolder38;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests27.temporaryFolder = temporaryFolder44;
        explodedArchiveTests19.settemporaryFolder(temporaryFolder44);
        explodedArchiveTests11.temporaryFolder = temporaryFolder44;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder44);
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests0.archive = explodedArchive50;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder49);
    }

    @Test
    public void test05666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05666");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream6, outputStream7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test05667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05667");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.archive = explodedArchive5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests14.setarchive(explodedArchive21);
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests14.setarchive(explodedArchive24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = explodedArchiveTests14.archive;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests14.gettemporaryFolder();
        java.io.File file28 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests29.gettemporaryFolder();
        explodedArchiveTests14.settemporaryFolder(temporaryFolder35);
        explodedArchiveTests0.temporaryFolder = temporaryFolder35;
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests0.temporaryFolder;
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder38);
    }

    @Test
    public void test05668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05668");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        java.io.File file14 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests11.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests11.archive = explodedArchive16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests11.archive = explodedArchive18;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests11.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = null;
        explodedArchiveTests0.setarchive(explodedArchive23);
        java.io.File file25 = null;
        explodedArchiveTests0.rootFolder = file25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(temporaryFolder8);
        org.junit.Assert.assertNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder27);
    }

    @Test
    public void test05669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05669");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file14 = null;
        explodedArchiveTests10.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests10.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests10.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests10.setarchive(explodedArchive18);
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder20;
        java.io.File file22 = null;
        explodedArchiveTests0.rootFolder = file22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests0.archive = explodedArchive24;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests0.setarchive(explodedArchive26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        java.io.File file32 = explodedArchiveTests29.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests29.temporaryFolder;
        java.io.File file34 = explodedArchiveTests29.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = explodedArchiveTests29.archive;
        java.io.File file36 = null;
        explodedArchiveTests29.setrootFolder(file36);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests38 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests38.temporaryFolder;
        java.io.File file40 = null;
        explodedArchiveTests38.rootFolder = file40;
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests38.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = explodedArchiveTests38.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests38.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests38.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests38.gettemporaryFolder();
        explodedArchiveTests29.temporaryFolder = temporaryFolder46;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = null;
        explodedArchiveTests0.archive = explodedArchive49;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
    }

    @Test
    public void test05670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05670");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file10 = null;
        explodedArchiveTests6.rootFolder = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests6.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests14.setarchive(explodedArchive21);
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests6.settemporaryFolder(temporaryFolder23);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder23);
        java.io.File file26 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests0.gettemporaryFolder();
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream30, outputStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
    }

    @Test
    public void test05671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05671");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.setarchive(explodedArchive15);
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream17, outputStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test05672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05672");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        java.io.File file12 = null;
        explodedArchiveTests0.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.archive = explodedArchive14;
        java.io.File file16 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests0.archive = explodedArchive17;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test05673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05673");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.archive = explodedArchive8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        java.io.File file12 = null;
        explodedArchiveTests0.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.setarchive(explodedArchive14);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test05674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05674");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.Archive archive11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap12 = explodedArchiveTests0.getEntriesMap(archive11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test05675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05675");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder10 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder10);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05676");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.archive = explodedArchive5;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder11);
        java.io.File file13 = explodedArchiveTests0.rootFolder;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test05677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05677");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        java.io.File file11 = explodedArchiveTests8.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests8.setarchive(explodedArchive12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests8.archive = explodedArchive14;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        java.io.File file20 = null;
        explodedArchiveTests16.rootFolder = file20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests16.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = explodedArchiveTests24.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests24.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.getrootFolder();
        java.io.File file33 = explodedArchiveTests30.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        explodedArchiveTests30.settemporaryFolder(temporaryFolder35);
        explodedArchiveTests24.temporaryFolder = temporaryFolder35;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests38 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests38.temporaryFolder;
        java.io.File file40 = explodedArchiveTests38.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests38.gettemporaryFolder();
        explodedArchiveTests24.temporaryFolder = temporaryFolder41;
        explodedArchiveTests16.settemporaryFolder(temporaryFolder41);
        explodedArchiveTests8.temporaryFolder = temporaryFolder41;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests45 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests45.temporaryFolder;
        java.io.File file47 = explodedArchiveTests45.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests45.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests45.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests45.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests45.gettemporaryFolder();
        java.io.File file52 = explodedArchiveTests45.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = null;
        explodedArchiveTests45.setarchive(explodedArchive53);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests55 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests55.temporaryFolder;
        explodedArchiveTests45.settemporaryFolder(temporaryFolder56);
        explodedArchiveTests8.settemporaryFolder(temporaryFolder56);
        java.io.File file59 = null;
        explodedArchiveTests8.setrootFolder(file59);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = explodedArchiveTests8.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests62 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests62.temporaryFolder;
        java.io.File file64 = explodedArchiveTests62.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests62.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder66 = explodedArchiveTests62.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder67 = explodedArchiveTests62.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = explodedArchiveTests62.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder69 = explodedArchiveTests62.temporaryFolder;
        explodedArchiveTests8.temporaryFolder = temporaryFolder69;
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests8.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder71;
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream73, outputStream74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNotNull(temporaryFolder66);
        org.junit.Assert.assertNotNull(temporaryFolder67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(temporaryFolder69);
        org.junit.Assert.assertNotNull(temporaryFolder71);
    }

    @Test
    public void test05678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05678");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests11.gettemporaryFolder();
        java.io.File file15 = null;
        explodedArchiveTests11.rootFolder = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests11.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests11.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests20.gettemporaryFolder();
        java.io.File file27 = explodedArchiveTests20.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests20.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests20.archive;
        java.io.File file30 = explodedArchiveTests20.rootFolder;
        java.io.File file31 = null;
        explodedArchiveTests20.rootFolder = file31;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests20.gettemporaryFolder();
        explodedArchiveTests11.settemporaryFolder(temporaryFolder33);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests43.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests43.setarchive(explodedArchive50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = explodedArchiveTests43.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests53 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests53.temporaryFolder;
        java.io.File file55 = explodedArchiveTests53.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests53.gettemporaryFolder();
        explodedArchiveTests43.settemporaryFolder(temporaryFolder56);
        explodedArchiveTests35.temporaryFolder = temporaryFolder56;
        explodedArchiveTests11.settemporaryFolder(temporaryFolder56);
        explodedArchiveTests0.temporaryFolder = temporaryFolder56;
        java.io.File file61 = null;
        explodedArchiveTests0.rootFolder = file61;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
    }

    @Test
    public void test05679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05679");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.Archive archive13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap14 = explodedArchiveTests0.getEntriesMap(archive13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05680");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.archive = explodedArchive14;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
    }

    @Test
    public void test05681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05681");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.gettemporaryFolder();
        java.lang.Class<?> wildcardClass15 = temporaryFolder14.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test05682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05682");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        java.io.File file23 = explodedArchiveTests20.rootFolder;
        java.io.File file24 = explodedArchiveTests20.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests20.gettemporaryFolder();
        java.io.File file26 = explodedArchiveTests20.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests20.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        java.io.File file29 = null;
        explodedArchiveTests0.setrootFolder(file29);
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests0.temporaryFolder;
        java.io.File file32 = null;
        explodedArchiveTests0.setrootFolder(file32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = null;
        explodedArchiveTests0.setarchive(explodedArchive34);
        java.io.File file36 = null;
        explodedArchiveTests0.setrootFolder(file36);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
    }

    @Test
    public void test05683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05683");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        java.io.File file15 = explodedArchiveTests8.getrootFolder();
        java.io.File file16 = explodedArchiveTests8.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests17.setarchive(explodedArchive20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests17.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        java.io.File file26 = explodedArchiveTests23.getrootFolder();
        java.io.File file27 = explodedArchiveTests23.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        explodedArchiveTests17.settemporaryFolder(temporaryFolder28);
        explodedArchiveTests8.temporaryFolder = temporaryFolder28;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests8.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests0.setarchive(explodedArchive33);
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder35);
    }

    @Test
    public void test05684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05684");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        java.io.File file12 = null;
        explodedArchiveTests0.setrootFolder(file12);
        java.io.File file14 = null;
        explodedArchiveTests0.setrootFolder(file14);
        org.springframework.boot.loader.archive.Archive archive16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap17 = explodedArchiveTests0.getEntriesMap(archive16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05685");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        java.io.File file9 = explodedArchiveTests0.getrootFolder();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test05686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05686");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder15);
    }

    @Test
    public void test05687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05687");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file16 = explodedArchiveTests0.rootFolder;
        java.io.File file17 = null;
        explodedArchiveTests0.setrootFolder(file17);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test05688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05688");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.temporaryFolder;
        explodedArchiveTests8.temporaryFolder = temporaryFolder18;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder18);
        java.io.File file21 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
    }

    @Test
    public void test05689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05689");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        java.io.File file18 = explodedArchiveTests15.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests15.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests15.archive = explodedArchive21;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        java.io.File file27 = null;
        explodedArchiveTests23.rootFolder = file27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests23.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests23.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = explodedArchiveTests31.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests31.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests31.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests31.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        java.io.File file40 = explodedArchiveTests37.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder42);
        explodedArchiveTests31.temporaryFolder = temporaryFolder42;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests45 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests45.temporaryFolder;
        java.io.File file47 = explodedArchiveTests45.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests45.gettemporaryFolder();
        explodedArchiveTests31.temporaryFolder = temporaryFolder48;
        explodedArchiveTests23.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests15.temporaryFolder = temporaryFolder48;
        explodedArchiveTests0.temporaryFolder = temporaryFolder48;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
    }

    @Test
    public void test05690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05690");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
    }

    @Test
    public void test05691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05691");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests0.temporaryFolder;
        java.io.File file18 = null;
        explodedArchiveTests0.setrootFolder(file18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive20);
    }

    @Test
    public void test05692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05692");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05693");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder11);
    }

    @Test
    public void test05694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05694");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.archive = explodedArchive14;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = null;
        explodedArchiveTests16.setarchive(explodedArchive23);
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests16.setarchive(explodedArchive26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests16.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests29.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = null;
        explodedArchiveTests29.setarchive(explodedArchive35);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests37.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = null;
        explodedArchiveTests37.setarchive(explodedArchive44);
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests37.gettemporaryFolder();
        explodedArchiveTests29.settemporaryFolder(temporaryFolder46);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests48 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests48.temporaryFolder;
        explodedArchiveTests29.settemporaryFolder(temporaryFolder49);
        explodedArchiveTests16.temporaryFolder = temporaryFolder49;
        explodedArchiveTests0.temporaryFolder = temporaryFolder49;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder49);
    }

    @Test
    public void test05695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05695");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.setarchive(explodedArchive11);
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests6.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests6.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        java.io.File file20 = explodedArchiveTests17.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests17.setarchive(explodedArchive21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = null;
        explodedArchiveTests17.archive = explodedArchive23;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        java.io.File file27 = explodedArchiveTests25.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests25.gettemporaryFolder();
        java.io.File file29 = null;
        explodedArchiveTests25.rootFolder = file29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = explodedArchiveTests25.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests25.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests33.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests33.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests33.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests39 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests39.temporaryFolder;
        java.io.File file41 = explodedArchiveTests39.getrootFolder();
        java.io.File file42 = explodedArchiveTests39.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        explodedArchiveTests39.settemporaryFolder(temporaryFolder44);
        explodedArchiveTests33.temporaryFolder = temporaryFolder44;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests47 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests47.temporaryFolder;
        java.io.File file49 = explodedArchiveTests47.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests47.gettemporaryFolder();
        explodedArchiveTests33.temporaryFolder = temporaryFolder50;
        explodedArchiveTests25.settemporaryFolder(temporaryFolder50);
        explodedArchiveTests17.temporaryFolder = temporaryFolder50;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder50);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder50);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(temporaryFolder50);
    }

    @Test
    public void test05696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05696");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests4 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests4.temporaryFolder;
        java.io.File file6 = explodedArchiveTests4.getrootFolder();
        java.io.File file7 = explodedArchiveTests4.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests4.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder8);
        java.io.File file10 = null;
        explodedArchiveTests0.setrootFolder(file10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
    }

    @Test
    public void test05697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05697");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
    }

    @Test
    public void test05698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05698");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests9.setarchive(explodedArchive16);
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests9.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests9.archive;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        java.io.File file26 = explodedArchiveTests23.getrootFolder();
        java.io.File file27 = explodedArchiveTests23.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        explodedArchiveTests9.temporaryFolder = temporaryFolder28;
        java.io.File file30 = null;
        explodedArchiveTests9.rootFolder = file30;
        java.io.File file32 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests9.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder33);
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder35);
    }

    @Test
    public void test05699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05699");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        java.io.File file8 = null;
        explodedArchiveTests0.rootFolder = file8;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
    }

    @Test
    public void test05700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05700");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.temporaryFolder;
        explodedArchiveTests8.temporaryFolder = temporaryFolder18;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder18);
        java.io.File file21 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
    }

    @Test
    public void test05701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05701");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        java.io.File file15 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests8.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests8.archive;
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests8.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests19.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests19.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests19.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests19.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests19.setarchive(explodedArchive26);
        org.junit.rules.TemporaryFolder temporaryFolder28 = null;
        explodedArchiveTests19.temporaryFolder = temporaryFolder28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = null;
        explodedArchiveTests19.setarchive(explodedArchive30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = null;
        explodedArchiveTests19.setarchive(explodedArchive32);
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests19.gettemporaryFolder();
        java.io.File file35 = explodedArchiveTests19.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = null;
        explodedArchiveTests19.setarchive(explodedArchive36);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests38 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests38.temporaryFolder;
        java.io.File file40 = null;
        explodedArchiveTests38.rootFolder = file40;
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests38.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = explodedArchiveTests38.getarchive();
        java.io.File file44 = null;
        explodedArchiveTests38.setrootFolder(file44);
        java.io.File file46 = explodedArchiveTests38.rootFolder;
        java.io.File file47 = explodedArchiveTests38.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests38.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = null;
        explodedArchiveTests38.archive = explodedArchive49;
        java.io.File file51 = null;
        explodedArchiveTests38.rootFolder = file51;
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests38.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests38.temporaryFolder;
        explodedArchiveTests19.settemporaryFolder(temporaryFolder54);
        explodedArchiveTests8.settemporaryFolder(temporaryFolder54);
        explodedArchiveTests0.temporaryFolder = temporaryFolder54;
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream58, outputStream59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
    }

    @Test
    public void test05702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05702");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file5 = explodedArchiveTests0.rootFolder;
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test05703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05703");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        java.io.File file13 = explodedArchiveTests10.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.temporaryFolder;
        explodedArchiveTests10.settemporaryFolder(temporaryFolder18);
        java.io.File file20 = null;
        explodedArchiveTests10.setrootFolder(file20);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = null;
        explodedArchiveTests22.rootFolder = file24;
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests22.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests22.getarchive();
        java.io.File file28 = null;
        explodedArchiveTests22.setrootFolder(file28);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.getrootFolder();
        java.io.File file33 = explodedArchiveTests30.getrootFolder();
        java.io.File file34 = explodedArchiveTests30.rootFolder;
        java.io.File file35 = explodedArchiveTests30.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests36 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests36.temporaryFolder;
        java.io.File file38 = explodedArchiveTests36.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests36.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests36.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests36.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests42 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests42.temporaryFolder;
        java.io.File file44 = explodedArchiveTests42.getrootFolder();
        java.io.File file45 = explodedArchiveTests42.rootFolder;
        java.io.File file46 = explodedArchiveTests42.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = null;
        explodedArchiveTests42.setarchive(explodedArchive47);
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests42.gettemporaryFolder();
        explodedArchiveTests36.temporaryFolder = temporaryFolder49;
        explodedArchiveTests30.settemporaryFolder(temporaryFolder49);
        explodedArchiveTests22.temporaryFolder = temporaryFolder49;
        explodedArchiveTests10.settemporaryFolder(temporaryFolder49);
        explodedArchiveTests0.temporaryFolder = temporaryFolder49;
        java.io.File file55 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests56 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests56.temporaryFolder;
        java.io.File file58 = explodedArchiveTests56.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests56.gettemporaryFolder();
        java.io.File file60 = null;
        explodedArchiveTests56.rootFolder = file60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = explodedArchiveTests56.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests56.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder64 = explodedArchiveTests56.gettemporaryFolder();
        java.io.File file65 = null;
        explodedArchiveTests56.rootFolder = file65;
        org.junit.rules.TemporaryFolder temporaryFolder67 = explodedArchiveTests56.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder67);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(temporaryFolder8);
        org.junit.Assert.assertNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNotNull(temporaryFolder64);
        org.junit.Assert.assertNotNull(temporaryFolder67);
    }

    @Test
    public void test05704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05704");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05705");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.setrootFolder(file4);
        java.io.File file6 = null;
        explodedArchiveTests0.rootFolder = file6;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests8.setarchive(explodedArchive18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests8.archive;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder21;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05706");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests7.setarchive(explodedArchive11);
        java.io.File file13 = explodedArchiveTests7.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests14.gettemporaryFolder();
        java.io.File file21 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests14.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests14.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests14.setarchive(explodedArchive24);
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests14.temporaryFolder;
        explodedArchiveTests7.temporaryFolder = temporaryFolder26;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests7.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder28;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
    }

    @Test
    public void test05707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05707");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        java.io.File file13 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        java.io.File file15 = null;
        explodedArchiveTests0.rootFolder = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.getarchive();
        java.io.File file18 = null;
        explodedArchiveTests0.setrootFolder(file18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests0.setarchive(explodedArchive21);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive20);
    }

    @Test
    public void test05708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05708");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.temporaryFolder;
        explodedArchiveTests8.temporaryFolder = temporaryFolder18;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder18);
        java.io.File file21 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
    }

    @Test
    public void test05709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05709");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = null;
        explodedArchiveTests0.setarchive(explodedArchive2);
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test05710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05710");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file5 = null;
        explodedArchiveTests0.setrootFolder(file5);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
    }

    @Test
    public void test05711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05711");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests9.setarchive(explodedArchive16);
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests9.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests9.archive;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        java.io.File file26 = explodedArchiveTests23.getrootFolder();
        java.io.File file27 = explodedArchiveTests23.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        explodedArchiveTests9.temporaryFolder = temporaryFolder28;
        java.io.File file30 = null;
        explodedArchiveTests9.rootFolder = file30;
        java.io.File file32 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests9.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder33);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        java.io.File file38 = explodedArchiveTests35.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests39 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests39.temporaryFolder;
        explodedArchiveTests35.settemporaryFolder(temporaryFolder40);
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests35.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder42;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
    }

    @Test
    public void test05712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05712");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = null;
        explodedArchiveTests0.setarchive(explodedArchive2);
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        java.io.File file11 = explodedArchiveTests8.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.temporaryFolder;
        java.io.File file13 = explodedArchiveTests8.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        java.io.File file15 = explodedArchiveTests8.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        java.io.File file19 = explodedArchiveTests16.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests16.setarchive(explodedArchive20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests16.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = explodedArchiveTests16.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = explodedArchiveTests24.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests24.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = null;
        explodedArchiveTests24.setarchive(explodedArchive30);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = explodedArchiveTests32.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests32.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests32.setarchive(explodedArchive39);
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests32.gettemporaryFolder();
        explodedArchiveTests24.settemporaryFolder(temporaryFolder41);
        explodedArchiveTests16.temporaryFolder = temporaryFolder41;
        explodedArchiveTests8.temporaryFolder = temporaryFolder41;
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests8.archive = explodedArchive46;
        java.io.File file48 = null;
        explodedArchiveTests8.rootFolder = file48;
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests8.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder50;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder50);
    }

    @Test
    public void test05713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05713");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        java.io.File file13 = explodedArchiveTests10.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder14);
        java.io.File file16 = null;
        explodedArchiveTests6.setrootFolder(file16);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = null;
        explodedArchiveTests18.rootFolder = file20;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = explodedArchiveTests18.getarchive();
        java.io.File file24 = null;
        explodedArchiveTests18.setrootFolder(file24);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        java.io.File file29 = explodedArchiveTests26.getrootFolder();
        java.io.File file30 = explodedArchiveTests26.rootFolder;
        java.io.File file31 = explodedArchiveTests26.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = explodedArchiveTests32.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests32.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests38 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests38.temporaryFolder;
        java.io.File file40 = explodedArchiveTests38.getrootFolder();
        java.io.File file41 = explodedArchiveTests38.rootFolder;
        java.io.File file42 = explodedArchiveTests38.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = null;
        explodedArchiveTests38.setarchive(explodedArchive43);
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests38.gettemporaryFolder();
        explodedArchiveTests32.temporaryFolder = temporaryFolder45;
        explodedArchiveTests26.settemporaryFolder(temporaryFolder45);
        explodedArchiveTests18.temporaryFolder = temporaryFolder45;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder45);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests6.archive = explodedArchive50;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests52 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests52.temporaryFolder;
        java.io.File file54 = explodedArchiveTests52.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests52.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests52.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests52.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests58 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests58.temporaryFolder;
        java.io.File file60 = explodedArchiveTests58.getrootFolder();
        java.io.File file61 = explodedArchiveTests58.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests62 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests62.temporaryFolder;
        explodedArchiveTests58.settemporaryFolder(temporaryFolder63);
        explodedArchiveTests52.temporaryFolder = temporaryFolder63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = explodedArchiveTests52.getarchive();
        java.io.File file67 = explodedArchiveTests52.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests68 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder69 = explodedArchiveTests68.temporaryFolder;
        java.io.File file70 = explodedArchiveTests68.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests68.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder72 = explodedArchiveTests68.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder73 = explodedArchiveTests68.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests68.gettemporaryFolder();
        java.io.File file75 = explodedArchiveTests68.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = null;
        explodedArchiveTests68.setarchive(explodedArchive76);
        java.io.File file78 = explodedArchiveTests68.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder79 = explodedArchiveTests68.gettemporaryFolder();
        java.io.File file80 = null;
        explodedArchiveTests68.rootFolder = file80;
        org.junit.rules.TemporaryFolder temporaryFolder82 = explodedArchiveTests68.temporaryFolder;
        explodedArchiveTests52.temporaryFolder = temporaryFolder82;
        explodedArchiveTests6.temporaryFolder = temporaryFolder82;
        explodedArchiveTests0.temporaryFolder = temporaryFolder82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder87 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(temporaryFolder69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNotNull(temporaryFolder72);
        org.junit.Assert.assertNotNull(temporaryFolder73);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(temporaryFolder79);
        org.junit.Assert.assertNotNull(temporaryFolder82);
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNotNull(temporaryFolder87);
    }

    @Test
    public void test05714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05714");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.Archive archive10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap11 = explodedArchiveTests0.getEntriesMap(archive10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test05715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05715");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.archive = explodedArchive8;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05716");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        java.io.File file12 = null;
        explodedArchiveTests0.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.archive = explodedArchive14;
        java.io.File file16 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests0.archive = explodedArchive17;
        java.io.File file19 = null;
        explodedArchiveTests0.setrootFolder(file19);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests21 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests21.temporaryFolder;
        java.io.File file23 = explodedArchiveTests21.getrootFolder();
        java.io.File file24 = explodedArchiveTests21.rootFolder;
        java.io.File file25 = explodedArchiveTests21.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests21.setarchive(explodedArchive26);
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests21.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests21.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = null;
        explodedArchiveTests21.setarchive(explodedArchive30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = explodedArchiveTests21.archive;
        java.io.File file33 = explodedArchiveTests21.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests34.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests34.setarchive(explodedArchive41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = explodedArchiveTests34.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests44 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests44.temporaryFolder;
        java.io.File file46 = explodedArchiveTests44.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests44.gettemporaryFolder();
        explodedArchiveTests34.settemporaryFolder(temporaryFolder47);
        java.io.File file49 = null;
        explodedArchiveTests34.setrootFolder(file49);
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests34.temporaryFolder;
        java.io.File file52 = null;
        explodedArchiveTests34.setrootFolder(file52);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests54 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests54.temporaryFolder;
        java.io.File file56 = explodedArchiveTests54.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests54.gettemporaryFolder();
        java.io.File file58 = null;
        explodedArchiveTests54.rootFolder = file58;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = explodedArchiveTests54.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder61 = explodedArchiveTests54.gettemporaryFolder();
        java.io.File file62 = explodedArchiveTests54.rootFolder;
        java.io.File file63 = null;
        explodedArchiveTests54.rootFolder = file63;
        java.io.File file65 = explodedArchiveTests54.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder66 = explodedArchiveTests54.gettemporaryFolder();
        explodedArchiveTests34.settemporaryFolder(temporaryFolder66);
        explodedArchiveTests21.settemporaryFolder(temporaryFolder66);
        explodedArchiveTests0.temporaryFolder = temporaryFolder66;
        java.lang.Class<?> wildcardClass70 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(temporaryFolder61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(temporaryFolder66);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test05717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05717");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.setrootFolder(file5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream10, outputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05718");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        java.io.File file11 = null;
        explodedArchiveTests0.rootFolder = file11;
        org.springframework.boot.loader.archive.Archive archive13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap14 = explodedArchiveTests0.getEntriesMap(archive13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
    }

    @Test
    public void test05719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05719");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05720");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream12, outputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test05721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05721");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests7.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests7.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = null;
        explodedArchiveTests15.rootFolder = file17;
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests15.getarchive();
        java.io.File file21 = null;
        explodedArchiveTests15.setrootFolder(file21);
        java.io.File file23 = explodedArchiveTests15.rootFolder;
        java.io.File file24 = explodedArchiveTests15.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        java.io.File file27 = explodedArchiveTests25.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests25.gettemporaryFolder();
        java.io.File file29 = null;
        explodedArchiveTests25.rootFolder = file29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = explodedArchiveTests25.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests25.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests25.setarchive(explodedArchive33);
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests25.temporaryFolder;
        explodedArchiveTests15.temporaryFolder = temporaryFolder35;
        explodedArchiveTests7.temporaryFolder = temporaryFolder35;
        explodedArchiveTests0.temporaryFolder = temporaryFolder35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests0.archive = explodedArchive39;
        java.io.File file41 = explodedArchiveTests0.getrootFolder();
        java.io.File file42 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.Archive archive44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap45 = explodedArchiveTests0.getEntriesMap(archive44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(explodedArchive43);
    }

    @Test
    public void test05722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05722");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests8.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        explodedArchiveTests22.settemporaryFolder(temporaryFolder27);
        explodedArchiveTests16.temporaryFolder = temporaryFolder27;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        explodedArchiveTests16.temporaryFolder = temporaryFolder33;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
    }

    @Test
    public void test05723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05723");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests0.archive = explodedArchive17;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
    }

    @Test
    public void test05724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05724");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream11, outputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test05725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05725");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests12.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests6.temporaryFolder = temporaryFolder19;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder19);
        java.io.File file22 = null;
        explodedArchiveTests0.setrootFolder(file22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        java.io.File file27 = null;
        explodedArchiveTests0.rootFolder = file27;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive24);
    }

    @Test
    public void test05726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05726");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        java.io.File file11 = explodedArchiveTests8.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests8.setarchive(explodedArchive12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests8.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests16.setarchive(explodedArchive22);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = explodedArchiveTests24.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests24.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests24.setarchive(explodedArchive31);
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests24.gettemporaryFolder();
        explodedArchiveTests16.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests8.temporaryFolder = temporaryFolder33;
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = null;
        explodedArchiveTests0.archive = explodedArchive38;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests40 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests40.temporaryFolder;
        java.io.File file42 = explodedArchiveTests40.getrootFolder();
        java.io.File file43 = explodedArchiveTests40.getrootFolder();
        java.io.File file44 = explodedArchiveTests40.rootFolder;
        java.io.File file45 = explodedArchiveTests40.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests40.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = explodedArchiveTests40.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests48 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests48.temporaryFolder;
        java.io.File file50 = null;
        explodedArchiveTests48.rootFolder = file50;
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests48.temporaryFolder;
        explodedArchiveTests40.settemporaryFolder(temporaryFolder52);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder52);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder52);
    }

    @Test
    public void test05727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05727");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        java.io.File file19 = null;
        explodedArchiveTests0.setrootFolder(file19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive21);
    }

    @Test
    public void test05728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05728");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests7.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests7.setarchive(explodedArchive14);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests16.setarchive(explodedArchive22);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = explodedArchiveTests24.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests24.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests24.setarchive(explodedArchive31);
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests24.gettemporaryFolder();
        explodedArchiveTests16.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests7.temporaryFolder = temporaryFolder33;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder33);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
    }

    @Test
    public void test05729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05729");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        java.io.File file8 = null;
        explodedArchiveTests0.rootFolder = file8;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.archive = explodedArchive13;
        java.io.File file15 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test05730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05730");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.archive = explodedArchive8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(temporaryFolder14);
    }

    @Test
    public void test05731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05731");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.archive = explodedArchive8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.Archive archive11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap12 = explodedArchiveTests0.getEntriesMap(archive11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test05732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05732");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests7.setarchive(explodedArchive11);
        java.io.File file13 = explodedArchiveTests7.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests14.gettemporaryFolder();
        java.io.File file21 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests14.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests14.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests14.setarchive(explodedArchive24);
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests14.temporaryFolder;
        explodedArchiveTests7.temporaryFolder = temporaryFolder26;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests7.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive30);
    }

    @Test
    public void test05733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05733");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file17 = explodedArchiveTests10.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests10.setarchive(explodedArchive18);
        java.io.File file20 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder21;
        org.springframework.boot.loader.archive.Archive archive23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap24 = explodedArchiveTests0.getEntriesMap(archive23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05734");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.setrootFolder(file10);
        java.io.File file12 = null;
        explodedArchiveTests0.rootFolder = file12;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
    }

    @Test
    public void test05735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05735");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.archive = explodedArchive5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNull(explodedArchive14);
    }

    @Test
    public void test05736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05736");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.File file13 = null;
        explodedArchiveTests0.setrootFolder(file13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.setarchive(explodedArchive15);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests0.getarchive();
        java.io.File file25 = null;
        explodedArchiveTests0.setrootFolder(file25);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive24);
    }

    @Test
    public void test05737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05737");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test05738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05738");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test05739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05739");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.getarchive();
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive17);
    }

    @Test
    public void test05740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05740");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = null;
        explodedArchiveTests0.setarchive(explodedArchive2);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = null;
        explodedArchiveTests6.temporaryFolder = temporaryFolder12;
        java.io.File file14 = explodedArchiveTests6.getrootFolder();
        java.io.File file15 = null;
        explodedArchiveTests6.setrootFolder(file15);
        java.io.File file17 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        java.io.File file21 = explodedArchiveTests18.rootFolder;
        java.io.File file22 = explodedArchiveTests18.rootFolder;
        java.io.File file23 = null;
        explodedArchiveTests18.setrootFolder(file23);
        java.io.File file25 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests18.gettemporaryFolder();
        explodedArchiveTests6.settemporaryFolder(temporaryFolder26);
        explodedArchiveTests0.temporaryFolder = temporaryFolder26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests0.archive;
        java.io.File file30 = null;
        explodedArchiveTests0.setrootFolder(file30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive32);
    }

    @Test
    public void test05741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05741");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.archive = explodedArchive9;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream12, outputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder11);
    }

    @Test
    public void test05742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05742");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        java.lang.Class<?> wildcardClass12 = temporaryFolder11.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test05743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05743");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests8.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        explodedArchiveTests22.settemporaryFolder(temporaryFolder27);
        explodedArchiveTests16.temporaryFolder = temporaryFolder27;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        explodedArchiveTests16.temporaryFolder = temporaryFolder33;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests37.gettemporaryFolder();
        java.io.File file44 = explodedArchiveTests37.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = null;
        explodedArchiveTests37.setarchive(explodedArchive45);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests47 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests47.temporaryFolder;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        java.io.File file51 = null;
        explodedArchiveTests0.setrootFolder(file51);
        java.io.File file53 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests54 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests54.temporaryFolder;
        java.io.File file56 = explodedArchiveTests54.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests54.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder58 = explodedArchiveTests54.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests54.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = null;
        explodedArchiveTests54.setarchive(explodedArchive60);
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests54.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder62;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNotNull(temporaryFolder58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder62);
    }

    @Test
    public void test05744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05744");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests13.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        explodedArchiveTests13.settemporaryFolder(temporaryFolder26);
        java.io.File file28 = null;
        explodedArchiveTests13.setrootFolder(file28);
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests13.temporaryFolder;
        java.io.File file31 = null;
        explodedArchiveTests13.setrootFolder(file31);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests33.gettemporaryFolder();
        java.io.File file37 = null;
        explodedArchiveTests33.rootFolder = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = explodedArchiveTests33.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests33.gettemporaryFolder();
        java.io.File file41 = explodedArchiveTests33.rootFolder;
        java.io.File file42 = null;
        explodedArchiveTests33.rootFolder = file42;
        java.io.File file44 = explodedArchiveTests33.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests33.gettemporaryFolder();
        explodedArchiveTests13.settemporaryFolder(temporaryFolder45);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder45);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
    }

    @Test
    public void test05745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05745");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        java.io.File file11 = explodedArchiveTests0.rootFolder;
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.archive = explodedArchive13;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05746");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream9, outputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test05747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05747");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream7, outputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test05748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05748");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05749");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder14 = null;
        explodedArchiveTests8.temporaryFolder = temporaryFolder14;
        java.io.File file16 = explodedArchiveTests8.getrootFolder();
        java.io.File file17 = null;
        explodedArchiveTests8.setrootFolder(file17);
        java.io.File file19 = explodedArchiveTests8.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        java.io.File file23 = explodedArchiveTests20.rootFolder;
        java.io.File file24 = explodedArchiveTests20.rootFolder;
        java.io.File file25 = null;
        explodedArchiveTests20.setrootFolder(file25);
        java.io.File file27 = explodedArchiveTests20.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests20.gettemporaryFolder();
        explodedArchiveTests8.settemporaryFolder(temporaryFolder28);
        explodedArchiveTests0.temporaryFolder = temporaryFolder28;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests0.temporaryFolder;
        java.io.File file32 = null;
        explodedArchiveTests0.rootFolder = file32;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        java.io.File file37 = explodedArchiveTests34.getrootFolder();
        java.io.File file38 = explodedArchiveTests34.rootFolder;
        java.io.File file39 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests34.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = explodedArchiveTests34.archive;
        java.io.File file42 = explodedArchiveTests34.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = null;
        explodedArchiveTests43.setarchive(explodedArchive49);
        java.io.File file51 = explodedArchiveTests43.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests52 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests52.temporaryFolder;
        java.io.File file54 = explodedArchiveTests52.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests52.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests52.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests52.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder58 = explodedArchiveTests52.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = null;
        explodedArchiveTests52.setarchive(explodedArchive59);
        org.junit.rules.TemporaryFolder temporaryFolder61 = explodedArchiveTests52.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = null;
        explodedArchiveTests52.setarchive(explodedArchive62);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = explodedArchiveTests52.archive;
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests52.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests66 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder67 = explodedArchiveTests66.temporaryFolder;
        java.io.File file68 = explodedArchiveTests66.getrootFolder();
        java.io.File file69 = explodedArchiveTests66.getrootFolder();
        java.io.File file70 = explodedArchiveTests66.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests66.gettemporaryFolder();
        explodedArchiveTests52.temporaryFolder = temporaryFolder71;
        java.io.File file73 = null;
        explodedArchiveTests52.rootFolder = file73;
        java.io.File file75 = explodedArchiveTests52.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests52.temporaryFolder;
        explodedArchiveTests43.settemporaryFolder(temporaryFolder76);
        explodedArchiveTests34.temporaryFolder = temporaryFolder76;
        explodedArchiveTests0.temporaryFolder = temporaryFolder76;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNotNull(temporaryFolder58);
        org.junit.Assert.assertNotNull(temporaryFolder61);
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNotNull(temporaryFolder67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
    }

    @Test
    public void test05750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05750");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.setarchive(explodedArchive11);
        java.io.File file13 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.archive = explodedArchive14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(explodedArchive16);
    }

    @Test
    public void test05751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05751");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
    }

    @Test
    public void test05752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05752");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.Archive archive12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap13 = explodedArchiveTests0.getEntriesMap(archive12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
    }

    @Test
    public void test05753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05753");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests14.setarchive(explodedArchive18);
        java.io.File file20 = explodedArchiveTests14.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests14.archive = explodedArchive21;
        java.io.File file23 = null;
        explodedArchiveTests14.rootFolder = file23;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests14.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = null;
        explodedArchiveTests0.archive = explodedArchive27;
        java.lang.Class<?> wildcardClass29 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test05754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05754");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests9.setarchive(explodedArchive15);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests17.setarchive(explodedArchive24);
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests17.gettemporaryFolder();
        explodedArchiveTests9.settemporaryFolder(temporaryFolder26);
        explodedArchiveTests0.temporaryFolder = temporaryFolder26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests0.getarchive();
        java.io.File file30 = explodedArchiveTests0.rootFolder;
        java.io.File file31 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
    }

    @Test
    public void test05755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05755");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests12.gettemporaryFolder();
        java.io.File file19 = explodedArchiveTests12.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests12.setarchive(explodedArchive20);
        java.io.File file22 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(explodedArchive25);
    }

    @Test
    public void test05756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05756");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.setarchive(explodedArchive11);
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.archive = explodedArchive15;
        java.io.File file17 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test05757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05757");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests9.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests17.setarchive(explodedArchive24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = explodedArchiveTests17.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        explodedArchiveTests17.settemporaryFolder(temporaryFolder30);
        explodedArchiveTests9.temporaryFolder = temporaryFolder30;
        explodedArchiveTests0.temporaryFolder = temporaryFolder30;
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = null;
        explodedArchiveTests0.setarchive(explodedArchive35);
        java.io.File file37 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(explodedArchive38);
    }

    @Test
    public void test05758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05758");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests9.setarchive(explodedArchive15);
        java.io.File file17 = explodedArchiveTests9.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests18.setarchive(explodedArchive25);
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = null;
        explodedArchiveTests18.setarchive(explodedArchive28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = explodedArchiveTests18.archive;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = explodedArchiveTests32.getrootFolder();
        java.io.File file35 = explodedArchiveTests32.getrootFolder();
        java.io.File file36 = explodedArchiveTests32.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests32.gettemporaryFolder();
        explodedArchiveTests18.temporaryFolder = temporaryFolder37;
        java.io.File file39 = null;
        explodedArchiveTests18.rootFolder = file39;
        java.io.File file41 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests9.settemporaryFolder(temporaryFolder42);
        explodedArchiveTests0.temporaryFolder = temporaryFolder42;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
    }

    @Test
    public void test05759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05759");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests20.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests20.setarchive(explodedArchive26);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests28.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = null;
        explodedArchiveTests28.setarchive(explodedArchive35);
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests28.gettemporaryFolder();
        explodedArchiveTests20.settemporaryFolder(temporaryFolder37);
        explodedArchiveTests15.temporaryFolder = temporaryFolder37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = null;
        explodedArchiveTests15.archive = explodedArchive40;
        org.junit.rules.TemporaryFolder temporaryFolder42 = null;
        explodedArchiveTests15.settemporaryFolder(temporaryFolder42);
        java.io.File file44 = explodedArchiveTests15.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests45 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests45.temporaryFolder;
        java.io.File file47 = null;
        explodedArchiveTests45.rootFolder = file47;
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests45.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = explodedArchiveTests45.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests45.gettemporaryFolder();
        explodedArchiveTests15.settemporaryFolder(temporaryFolder51);
        explodedArchiveTests0.temporaryFolder = temporaryFolder51;
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
    }

    @Test
    public void test05760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05760");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.setarchive(explodedArchive11);
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests6.archive = explodedArchive15;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = null;
        explodedArchiveTests17.rootFolder = file19;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests22.gettemporaryFolder();
        java.io.File file29 = explodedArchiveTests22.getrootFolder();
        java.io.File file30 = explodedArchiveTests22.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = explodedArchiveTests31.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = null;
        explodedArchiveTests31.setarchive(explodedArchive34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = explodedArchiveTests31.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        java.io.File file40 = explodedArchiveTests37.getrootFolder();
        java.io.File file41 = explodedArchiveTests37.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests37.gettemporaryFolder();
        explodedArchiveTests31.settemporaryFolder(temporaryFolder42);
        explodedArchiveTests22.temporaryFolder = temporaryFolder42;
        explodedArchiveTests17.settemporaryFolder(temporaryFolder42);
        explodedArchiveTests6.settemporaryFolder(temporaryFolder42);
        explodedArchiveTests0.temporaryFolder = temporaryFolder42;
        java.io.File file48 = null;
        explodedArchiveTests0.rootFolder = file48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests0.setarchive(explodedArchive50);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
    }

    @Test
    public void test05761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05761");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.getarchive();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests16.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests16.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.getrootFolder();
        java.io.File file26 = explodedArchiveTests22.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests16.settemporaryFolder(temporaryFolder27);
        explodedArchiveTests0.temporaryFolder = temporaryFolder27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests33.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests33.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests33.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests33.gettemporaryFolder();
        java.io.File file40 = explodedArchiveTests33.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests33.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests33.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = null;
        explodedArchiveTests33.setarchive(explodedArchive43);
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests33.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests46 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests46.temporaryFolder;
        java.io.File file48 = explodedArchiveTests46.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests46.gettemporaryFolder();
        java.io.File file50 = null;
        explodedArchiveTests46.rootFolder = file50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = explodedArchiveTests46.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests46.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests46.gettemporaryFolder();
        explodedArchiveTests33.settemporaryFolder(temporaryFolder54);
        java.io.File file56 = explodedArchiveTests33.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests33.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder57;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
    }

    @Test
    public void test05762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05762");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests14.settemporaryFolder(temporaryFolder19);
        explodedArchiveTests8.temporaryFolder = temporaryFolder19;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests8.temporaryFolder = temporaryFolder25;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder25);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests28.gettemporaryFolder();
        java.io.File file35 = explodedArchiveTests28.getrootFolder();
        java.io.File file36 = explodedArchiveTests28.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = null;
        explodedArchiveTests37.setarchive(explodedArchive40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = explodedArchiveTests37.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        java.io.File file46 = explodedArchiveTests43.getrootFolder();
        java.io.File file47 = explodedArchiveTests43.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        explodedArchiveTests37.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests28.temporaryFolder = temporaryFolder48;
        explodedArchiveTests0.temporaryFolder = temporaryFolder48;
        java.io.File file52 = explodedArchiveTests0.rootFolder;
        java.io.File file53 = null;
        explodedArchiveTests0.rootFolder = file53;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file52);
    }

    @Test
    public void test05763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05763");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = null;
        explodedArchiveTests12.rootFolder = file14;
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests12.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests12.archive;
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder19;
        java.io.File file21 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test05764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05764");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = null;
        explodedArchiveTests9.rootFolder = file11;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests9.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests9.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests9.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests0.archive = explodedArchive19;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
    }

    @Test
    public void test05765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05765");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = null;
        explodedArchiveTests9.rootFolder = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests9.archive;
        java.io.File file14 = null;
        explodedArchiveTests9.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        java.io.File file19 = explodedArchiveTests16.rootFolder;
        java.io.File file20 = explodedArchiveTests16.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        explodedArchiveTests9.settemporaryFolder(temporaryFolder21);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05766");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(temporaryFolder8);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test05767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05767");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests7.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests7.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = null;
        explodedArchiveTests15.rootFolder = file17;
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests15.getarchive();
        java.io.File file21 = null;
        explodedArchiveTests15.setrootFolder(file21);
        java.io.File file23 = explodedArchiveTests15.rootFolder;
        java.io.File file24 = explodedArchiveTests15.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        java.io.File file27 = explodedArchiveTests25.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests25.gettemporaryFolder();
        java.io.File file29 = null;
        explodedArchiveTests25.rootFolder = file29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = explodedArchiveTests25.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests25.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests25.setarchive(explodedArchive33);
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests25.temporaryFolder;
        explodedArchiveTests15.temporaryFolder = temporaryFolder35;
        explodedArchiveTests7.temporaryFolder = temporaryFolder35;
        explodedArchiveTests0.temporaryFolder = temporaryFolder35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = explodedArchiveTests0.archive;
        java.lang.Class<?> wildcardClass40 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test05768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05768");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05769");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05770");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        java.io.File file16 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests9.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests9.archive;
        java.io.File file19 = explodedArchiveTests9.rootFolder;
        java.io.File file20 = null;
        explodedArchiveTests9.rootFolder = file20;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests9.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder22);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = explodedArchiveTests24.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests24.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = explodedArchiveTests32.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests32.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests32.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests32.setarchive(explodedArchive39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = explodedArchiveTests32.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests42 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests42.temporaryFolder;
        java.io.File file44 = explodedArchiveTests42.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests42.gettemporaryFolder();
        explodedArchiveTests32.settemporaryFolder(temporaryFolder45);
        explodedArchiveTests24.temporaryFolder = temporaryFolder45;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder45);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests49 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests49.temporaryFolder;
        java.io.File file51 = explodedArchiveTests49.getrootFolder();
        java.io.File file52 = explodedArchiveTests49.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests49.temporaryFolder;
        java.io.File file54 = explodedArchiveTests49.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = explodedArchiveTests49.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = null;
        explodedArchiveTests49.archive = explodedArchive56;
        java.io.File file58 = null;
        explodedArchiveTests49.setrootFolder(file58);
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests49.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNull(explodedArchive62);
    }

    @Test
    public void test05771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05771");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        java.io.File file11 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test05772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05772");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        java.io.File file8 = null;
        explodedArchiveTests0.rootFolder = file8;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.archive = explodedArchive13;
        org.springframework.boot.loader.archive.Archive archive15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap16 = explodedArchiveTests0.getEntriesMap(archive15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test05773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05773");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder20);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
    }

    @Test
    public void test05774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05774");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05775");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests11.gettemporaryFolder();
        java.io.File file15 = null;
        explodedArchiveTests11.rootFolder = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests11.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests11.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests20.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests20.gettemporaryFolder();
        java.io.File file27 = explodedArchiveTests20.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests20.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests20.archive;
        java.io.File file30 = explodedArchiveTests20.rootFolder;
        java.io.File file31 = null;
        explodedArchiveTests20.rootFolder = file31;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests20.gettemporaryFolder();
        explodedArchiveTests11.settemporaryFolder(temporaryFolder33);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests43.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests43.setarchive(explodedArchive50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = explodedArchiveTests43.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests53 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests53.temporaryFolder;
        java.io.File file55 = explodedArchiveTests53.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests53.gettemporaryFolder();
        explodedArchiveTests43.settemporaryFolder(temporaryFolder56);
        explodedArchiveTests35.temporaryFolder = temporaryFolder56;
        explodedArchiveTests11.settemporaryFolder(temporaryFolder56);
        explodedArchiveTests0.temporaryFolder = temporaryFolder56;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
    }

    @Test
    public void test05776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05776");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests15.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        java.io.File file23 = null;
        explodedArchiveTests0.rootFolder = file23;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests26.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = null;
        explodedArchiveTests26.setarchive(explodedArchive32);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests34.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests34.setarchive(explodedArchive41);
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests34.gettemporaryFolder();
        explodedArchiveTests26.settemporaryFolder(temporaryFolder43);
        java.io.File file45 = null;
        explodedArchiveTests26.setrootFolder(file45);
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests26.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder47;
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests0.temporaryFolder;
        java.lang.Class<?> wildcardClass50 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test05777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05777");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests0.archive = explodedArchive22;
        java.io.File file24 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNull(file24);
    }

    @Test
    public void test05778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05778");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.File file13 = null;
        explodedArchiveTests0.rootFolder = file13;
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests0.archive = explodedArchive18;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(explodedArchive17);
    }

    @Test
    public void test05779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05779");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests9.setarchive(explodedArchive16);
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests9.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests9.archive;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        java.io.File file26 = explodedArchiveTests23.getrootFolder();
        java.io.File file27 = explodedArchiveTests23.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        explodedArchiveTests9.temporaryFolder = temporaryFolder28;
        java.io.File file30 = null;
        explodedArchiveTests9.rootFolder = file30;
        java.io.File file32 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests9.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder33);
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests0.temporaryFolder;
        java.io.File file36 = null;
        explodedArchiveTests0.setrootFolder(file36);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests38 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests38.temporaryFolder;
        java.io.File file40 = explodedArchiveTests38.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests38.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests38.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests38.temporaryFolder;
        java.io.File file44 = explodedArchiveTests38.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests45 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests45.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = null;
        explodedArchiveTests45.setarchive(explodedArchive47);
        java.io.File file49 = null;
        explodedArchiveTests45.rootFolder = file49;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests51 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests51.temporaryFolder;
        java.io.File file53 = explodedArchiveTests51.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests51.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests51.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests51.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests51.gettemporaryFolder();
        java.io.File file58 = explodedArchiveTests51.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = null;
        explodedArchiveTests51.setarchive(explodedArchive59);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = explodedArchiveTests51.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests51.gettemporaryFolder();
        explodedArchiveTests45.temporaryFolder = temporaryFolder62;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests64 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests64.temporaryFolder;
        java.io.File file66 = explodedArchiveTests64.getrootFolder();
        java.io.File file67 = explodedArchiveTests64.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder68 = explodedArchiveTests64.temporaryFolder;
        java.io.File file69 = explodedArchiveTests64.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = explodedArchiveTests64.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = null;
        explodedArchiveTests64.setarchive(explodedArchive71);
        java.io.File file73 = explodedArchiveTests64.getrootFolder();
        java.io.File file74 = null;
        explodedArchiveTests64.rootFolder = file74;
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests64.gettemporaryFolder();
        explodedArchiveTests45.temporaryFolder = temporaryFolder76;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests78 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder79 = explodedArchiveTests78.temporaryFolder;
        java.io.File file80 = explodedArchiveTests78.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder81 = explodedArchiveTests78.gettemporaryFolder();
        java.io.File file82 = null;
        explodedArchiveTests78.rootFolder = file82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = explodedArchiveTests78.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder85 = explodedArchiveTests78.gettemporaryFolder();
        java.io.File file86 = null;
        explodedArchiveTests78.setrootFolder(file86);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests88 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder89 = explodedArchiveTests88.temporaryFolder;
        java.io.File file90 = explodedArchiveTests88.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder91 = explodedArchiveTests88.gettemporaryFolder();
        explodedArchiveTests78.settemporaryFolder(temporaryFolder91);
        org.junit.rules.TemporaryFolder temporaryFolder93 = explodedArchiveTests78.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder94 = explodedArchiveTests78.temporaryFolder;
        explodedArchiveTests45.settemporaryFolder(temporaryFolder94);
        explodedArchiveTests38.temporaryFolder = temporaryFolder94;
        explodedArchiveTests0.temporaryFolder = temporaryFolder94;
        org.springframework.boot.loader.archive.Archive archive98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap99 = explodedArchiveTests0.getEntriesMap(archive98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(temporaryFolder68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(temporaryFolder76);
        org.junit.Assert.assertNotNull(temporaryFolder79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(temporaryFolder81);
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNotNull(temporaryFolder85);
        org.junit.Assert.assertNotNull(temporaryFolder89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(temporaryFolder91);
        org.junit.Assert.assertNotNull(temporaryFolder93);
        org.junit.Assert.assertNotNull(temporaryFolder94);
    }

    @Test
    public void test05780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05780");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.archive = explodedArchive9;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder11);
    }

    @Test
    public void test05781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05781");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.getarchive();
        java.lang.Class<?> wildcardClass14 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test05782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05782");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream13, outputStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test05783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05783");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests2 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests2.temporaryFolder;
        java.io.File file4 = explodedArchiveTests2.getrootFolder();
        java.io.File file5 = explodedArchiveTests2.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests2.temporaryFolder;
        java.io.File file7 = explodedArchiveTests2.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests2.archive;
        java.io.File file9 = null;
        explodedArchiveTests2.setrootFolder(file9);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        java.io.File file14 = explodedArchiveTests11.getrootFolder();
        java.io.File file15 = explodedArchiveTests11.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests11.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests17.setarchive(explodedArchive24);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests26.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = null;
        explodedArchiveTests26.setarchive(explodedArchive32);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests34.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests34.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests34.setarchive(explodedArchive41);
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests34.gettemporaryFolder();
        explodedArchiveTests26.settemporaryFolder(temporaryFolder43);
        explodedArchiveTests17.temporaryFolder = temporaryFolder43;
        explodedArchiveTests11.temporaryFolder = temporaryFolder43;
        explodedArchiveTests2.temporaryFolder = temporaryFolder43;
        explodedArchiveTests0.temporaryFolder = temporaryFolder43;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder43);
    }

    @Test
    public void test05784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05784");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder9);
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests0.setrootFolder(file12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
    }

    @Test
    public void test05785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05785");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        java.io.File file12 = null;
        explodedArchiveTests0.setrootFolder(file12);
        org.springframework.boot.loader.archive.Archive archive14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap15 = explodedArchiveTests0.getEntriesMap(archive14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05786");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests14.settemporaryFolder(temporaryFolder19);
        explodedArchiveTests8.temporaryFolder = temporaryFolder19;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests8.temporaryFolder = temporaryFolder25;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder25);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests28.gettemporaryFolder();
        java.io.File file35 = explodedArchiveTests28.getrootFolder();
        java.io.File file36 = explodedArchiveTests28.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = null;
        explodedArchiveTests37.setarchive(explodedArchive40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = explodedArchiveTests37.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        java.io.File file46 = explodedArchiveTests43.getrootFolder();
        java.io.File file47 = explodedArchiveTests43.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        explodedArchiveTests37.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests28.temporaryFolder = temporaryFolder48;
        explodedArchiveTests0.temporaryFolder = temporaryFolder48;
        java.io.File file52 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file52);
    }

    @Test
    public void test05787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05787");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        java.io.File file13 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        java.io.File file15 = null;
        explodedArchiveTests0.rootFolder = file15;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests0.temporaryFolder;
        java.io.File file18 = null;
        explodedArchiveTests0.rootFolder = file18;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
    }

    @Test
    public void test05788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05788");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test05789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05789");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        java.io.File file11 = null;
        explodedArchiveTests0.setrootFolder(file11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        java.io.File file16 = explodedArchiveTests13.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.temporaryFolder;
        java.io.File file18 = explodedArchiveTests13.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests13.archive;
        java.io.File file20 = null;
        explodedArchiveTests13.setrootFolder(file20);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = null;
        explodedArchiveTests22.rootFolder = file24;
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests22.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests22.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests22.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests13.temporaryFolder = temporaryFolder30;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder30);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
    }

    @Test
    public void test05790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05790");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test05791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05791");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        java.io.File file29 = null;
        explodedArchiveTests0.rootFolder = file29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = null;
        explodedArchiveTests0.archive = explodedArchive32;
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream34, outputStream35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive31);
    }

    @Test
    public void test05792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05792");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.setrootFolder(file5);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.getrootFolder();
        java.io.File file22 = explodedArchiveTests19.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        explodedArchiveTests19.settemporaryFolder(temporaryFolder24);
        explodedArchiveTests13.temporaryFolder = temporaryFolder24;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        explodedArchiveTests13.temporaryFolder = temporaryFolder30;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = null;
        explodedArchiveTests32.rootFolder = file34;
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests32.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = explodedArchiveTests32.getarchive();
        java.io.File file38 = null;
        explodedArchiveTests32.setrootFolder(file38);
        java.io.File file40 = explodedArchiveTests32.rootFolder;
        java.io.File file41 = explodedArchiveTests32.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests42 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests42.temporaryFolder;
        java.io.File file44 = explodedArchiveTests42.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests42.gettemporaryFolder();
        java.io.File file46 = null;
        explodedArchiveTests42.rootFolder = file46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = explodedArchiveTests42.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests42.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests42.setarchive(explodedArchive50);
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests42.temporaryFolder;
        explodedArchiveTests32.temporaryFolder = temporaryFolder52;
        java.io.File file54 = null;
        explodedArchiveTests32.rootFolder = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = null;
        explodedArchiveTests32.archive = explodedArchive56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = null;
        explodedArchiveTests32.setarchive(explodedArchive58);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = explodedArchiveTests32.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests61 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests61.temporaryFolder;
        java.io.File file63 = explodedArchiveTests61.getrootFolder();
        java.io.File file64 = explodedArchiveTests61.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests61.temporaryFolder;
        java.io.File file66 = explodedArchiveTests61.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = explodedArchiveTests61.archive;
        java.io.File file68 = null;
        explodedArchiveTests61.setrootFolder(file68);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests70 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests70.temporaryFolder;
        java.io.File file72 = null;
        explodedArchiveTests70.rootFolder = file72;
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests70.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = explodedArchiveTests70.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests70.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests70.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder78 = explodedArchiveTests70.gettemporaryFolder();
        explodedArchiveTests61.temporaryFolder = temporaryFolder78;
        explodedArchiveTests32.settemporaryFolder(temporaryFolder78);
        explodedArchiveTests13.settemporaryFolder(temporaryFolder78);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder78);
        java.io.File file83 = null;
        explodedArchiveTests0.rootFolder = file83;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
        org.junit.Assert.assertNotNull(temporaryFolder77);
        org.junit.Assert.assertNotNull(temporaryFolder78);
    }

    @Test
    public void test05793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05793");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests11.gettemporaryFolder();
        java.io.File file18 = explodedArchiveTests11.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = null;
        explodedArchiveTests19.rootFolder = file21;
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests19.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests19.getarchive();
        java.io.File file25 = null;
        explodedArchiveTests19.setrootFolder(file25);
        java.io.File file27 = explodedArchiveTests19.rootFolder;
        java.io.File file28 = explodedArchiveTests19.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests29.gettemporaryFolder();
        java.io.File file33 = null;
        explodedArchiveTests29.rootFolder = file33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = explodedArchiveTests29.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests29.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = null;
        explodedArchiveTests29.setarchive(explodedArchive37);
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests29.temporaryFolder;
        explodedArchiveTests19.temporaryFolder = temporaryFolder39;
        explodedArchiveTests11.temporaryFolder = temporaryFolder39;
        java.io.File file42 = null;
        explodedArchiveTests11.rootFolder = file42;
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests11.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder44);
        java.io.File file46 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
    }

    @Test
    public void test05794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05794");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test05795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05795");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests0.archive = explodedArchive17;
        java.io.File file19 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.Archive archive20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap21 = explodedArchiveTests0.getEntriesMap(archive20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test05796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05796");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
    }

    @Test
    public void test05797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05797");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(explodedArchive10);
    }

    @Test
    public void test05798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05798");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        java.io.File file14 = explodedArchiveTests11.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests11.setarchive(explodedArchive15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests11.archive = explodedArchive17;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests19.gettemporaryFolder();
        java.io.File file23 = null;
        explodedArchiveTests19.rootFolder = file23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = explodedArchiveTests19.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests19.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests27.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests33 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests33.temporaryFolder;
        java.io.File file35 = explodedArchiveTests33.getrootFolder();
        java.io.File file36 = explodedArchiveTests33.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        explodedArchiveTests33.settemporaryFolder(temporaryFolder38);
        explodedArchiveTests27.temporaryFolder = temporaryFolder38;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests27.temporaryFolder = temporaryFolder44;
        explodedArchiveTests19.settemporaryFolder(temporaryFolder44);
        explodedArchiveTests11.temporaryFolder = temporaryFolder44;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder44);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
    }

    @Test
    public void test05799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05799");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.archive;
        java.io.File file16 = null;
        explodedArchiveTests0.setrootFolder(file16);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive15);
    }

    @Test
    public void test05800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05800");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(temporaryFolder13);
    }

    @Test
    public void test05801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05801");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests15.gettemporaryFolder();
        java.io.File file22 = explodedArchiveTests15.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests28.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = null;
        explodedArchiveTests28.setarchive(explodedArchive34);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests36 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests36.temporaryFolder;
        java.io.File file38 = explodedArchiveTests36.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests36.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests36.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests36.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests36.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = null;
        explodedArchiveTests36.setarchive(explodedArchive43);
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests36.gettemporaryFolder();
        explodedArchiveTests28.settemporaryFolder(temporaryFolder45);
        explodedArchiveTests23.temporaryFolder = temporaryFolder45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests23.archive = explodedArchive48;
        org.junit.rules.TemporaryFolder temporaryFolder50 = null;
        explodedArchiveTests23.settemporaryFolder(temporaryFolder50);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests52 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests52.temporaryFolder;
        java.io.File file54 = explodedArchiveTests52.getrootFolder();
        java.io.File file55 = explodedArchiveTests52.getrootFolder();
        java.io.File file56 = explodedArchiveTests52.rootFolder;
        java.io.File file57 = explodedArchiveTests52.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests58 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests58.temporaryFolder;
        java.io.File file60 = explodedArchiveTests58.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder61 = explodedArchiveTests58.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests58.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests58.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests64 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests64.temporaryFolder;
        java.io.File file66 = explodedArchiveTests64.getrootFolder();
        java.io.File file67 = explodedArchiveTests64.rootFolder;
        java.io.File file68 = explodedArchiveTests64.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = null;
        explodedArchiveTests64.setarchive(explodedArchive69);
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests64.gettemporaryFolder();
        explodedArchiveTests58.temporaryFolder = temporaryFolder71;
        explodedArchiveTests52.settemporaryFolder(temporaryFolder71);
        explodedArchiveTests23.settemporaryFolder(temporaryFolder71);
        explodedArchiveTests15.temporaryFolder = temporaryFolder71;
        explodedArchiveTests0.temporaryFolder = temporaryFolder71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = null;
        explodedArchiveTests0.setarchive(explodedArchive78);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(temporaryFolder61);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNull(explodedArchive77);
    }

    @Test
    public void test05802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05802");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests0.setarchive(explodedArchive17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive21);
    }

    @Test
    public void test05803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05803");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = null;
        explodedArchiveTests15.rootFolder = file17;
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder19;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.rootFolder;
        java.io.File file26 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = null;
        explodedArchiveTests22.setarchive(explodedArchive27);
        java.io.File file29 = null;
        explodedArchiveTests22.rootFolder = file29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests22.setarchive(explodedArchive31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests22.archive;
        java.io.File file34 = null;
        explodedArchiveTests22.rootFolder = file34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = null;
        explodedArchiveTests22.archive = explodedArchive36;
        java.io.File file38 = explodedArchiveTests22.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests22.archive = explodedArchive39;
        java.io.File file41 = null;
        explodedArchiveTests22.setrootFolder(file41);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        java.io.File file46 = explodedArchiveTests43.rootFolder;
        java.io.File file47 = explodedArchiveTests43.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests43.setarchive(explodedArchive48);
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests43.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = explodedArchiveTests43.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests43.setarchive(explodedArchive52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = explodedArchiveTests43.archive;
        java.io.File file55 = explodedArchiveTests43.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests56 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests56.temporaryFolder;
        java.io.File file58 = explodedArchiveTests56.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests56.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests56.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder61 = explodedArchiveTests56.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests56.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = null;
        explodedArchiveTests56.setarchive(explodedArchive63);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = explodedArchiveTests56.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests66 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder67 = explodedArchiveTests66.temporaryFolder;
        java.io.File file68 = explodedArchiveTests66.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder69 = explodedArchiveTests66.gettemporaryFolder();
        explodedArchiveTests56.settemporaryFolder(temporaryFolder69);
        java.io.File file71 = null;
        explodedArchiveTests56.setrootFolder(file71);
        org.junit.rules.TemporaryFolder temporaryFolder73 = explodedArchiveTests56.temporaryFolder;
        java.io.File file74 = null;
        explodedArchiveTests56.setrootFolder(file74);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests76 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests76.temporaryFolder;
        java.io.File file78 = explodedArchiveTests76.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder79 = explodedArchiveTests76.gettemporaryFolder();
        java.io.File file80 = null;
        explodedArchiveTests76.rootFolder = file80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = explodedArchiveTests76.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder83 = explodedArchiveTests76.gettemporaryFolder();
        java.io.File file84 = explodedArchiveTests76.rootFolder;
        java.io.File file85 = null;
        explodedArchiveTests76.rootFolder = file85;
        java.io.File file87 = explodedArchiveTests76.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder88 = explodedArchiveTests76.gettemporaryFolder();
        explodedArchiveTests56.settemporaryFolder(temporaryFolder88);
        explodedArchiveTests43.settemporaryFolder(temporaryFolder88);
        explodedArchiveTests22.temporaryFolder = temporaryFolder88;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder88);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNotNull(temporaryFolder61);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNotNull(temporaryFolder67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(temporaryFolder69);
        org.junit.Assert.assertNotNull(temporaryFolder73);
        org.junit.Assert.assertNotNull(temporaryFolder77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(temporaryFolder79);
        org.junit.Assert.assertNull(explodedArchive82);
        org.junit.Assert.assertNotNull(temporaryFolder83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(temporaryFolder88);
    }

    @Test
    public void test05804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05804");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder10);
    }

    @Test
    public void test05805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05805");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        java.io.File file29 = null;
        explodedArchiveTests0.rootFolder = file29;
        java.io.File file31 = null;
        explodedArchiveTests0.rootFolder = file31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(temporaryFolder34);
    }

    @Test
    public void test05806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05806");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests8.setarchive(explodedArchive14);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = null;
        explodedArchiveTests16.setarchive(explodedArchive23);
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests16.gettemporaryFolder();
        explodedArchiveTests8.settemporaryFolder(temporaryFolder25);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder28);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder28);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = null;
        explodedArchiveTests31.rootFolder = file33;
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests31.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = explodedArchiveTests31.getarchive();
        java.io.File file37 = null;
        explodedArchiveTests31.setrootFolder(file37);
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests31.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = explodedArchiveTests31.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests31.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder41;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests49 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests49.temporaryFolder;
        java.io.File file51 = explodedArchiveTests49.getrootFolder();
        java.io.File file52 = explodedArchiveTests49.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests53 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests53.temporaryFolder;
        explodedArchiveTests49.settemporaryFolder(temporaryFolder54);
        explodedArchiveTests43.temporaryFolder = temporaryFolder54;
        java.io.File file57 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder58 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests43.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder59);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream61, outputStream62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(temporaryFolder58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
    }

    @Test
    public void test05807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05807");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file16 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.archive;
        java.io.File file18 = null;
        explodedArchiveTests0.rootFolder = file18;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(explodedArchive17);
    }

    @Test
    public void test05808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05808");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests14.setarchive(explodedArchive21);
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests14.setarchive(explodedArchive24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = explodedArchiveTests14.archive;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests14.gettemporaryFolder();
        java.io.File file28 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests29.gettemporaryFolder();
        java.io.File file36 = explodedArchiveTests29.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests42 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests42.temporaryFolder;
        java.io.File file44 = explodedArchiveTests42.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests42.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests42.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests42.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests42.setarchive(explodedArchive48);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests50 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests50.temporaryFolder;
        java.io.File file52 = explodedArchiveTests50.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests50.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = null;
        explodedArchiveTests50.setarchive(explodedArchive57);
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests50.gettemporaryFolder();
        explodedArchiveTests42.settemporaryFolder(temporaryFolder59);
        explodedArchiveTests37.temporaryFolder = temporaryFolder59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = null;
        explodedArchiveTests37.archive = explodedArchive62;
        org.junit.rules.TemporaryFolder temporaryFolder64 = null;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder64);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests66 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder67 = explodedArchiveTests66.temporaryFolder;
        java.io.File file68 = explodedArchiveTests66.getrootFolder();
        java.io.File file69 = explodedArchiveTests66.getrootFolder();
        java.io.File file70 = explodedArchiveTests66.rootFolder;
        java.io.File file71 = explodedArchiveTests66.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests72 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder73 = explodedArchiveTests72.temporaryFolder;
        java.io.File file74 = explodedArchiveTests72.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder75 = explodedArchiveTests72.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests72.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests72.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests78 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder79 = explodedArchiveTests78.temporaryFolder;
        java.io.File file80 = explodedArchiveTests78.getrootFolder();
        java.io.File file81 = explodedArchiveTests78.rootFolder;
        java.io.File file82 = explodedArchiveTests78.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = null;
        explodedArchiveTests78.setarchive(explodedArchive83);
        org.junit.rules.TemporaryFolder temporaryFolder85 = explodedArchiveTests78.gettemporaryFolder();
        explodedArchiveTests72.temporaryFolder = temporaryFolder85;
        explodedArchiveTests66.settemporaryFolder(temporaryFolder85);
        explodedArchiveTests37.settemporaryFolder(temporaryFolder85);
        explodedArchiveTests29.temporaryFolder = temporaryFolder85;
        explodedArchiveTests14.temporaryFolder = temporaryFolder85;
        explodedArchiveTests10.settemporaryFolder(temporaryFolder85);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder85);
        org.junit.rules.TemporaryFolder temporaryFolder93 = explodedArchiveTests0.temporaryFolder;
        java.io.File file94 = null;
        explodedArchiveTests0.rootFolder = file94;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(temporaryFolder73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(temporaryFolder75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
        org.junit.Assert.assertNotNull(temporaryFolder77);
        org.junit.Assert.assertNotNull(temporaryFolder79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(temporaryFolder85);
        org.junit.Assert.assertNotNull(temporaryFolder93);
    }

    @Test
    public void test05809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05809");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests9.setarchive(explodedArchive15);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests17.setarchive(explodedArchive24);
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests17.gettemporaryFolder();
        explodedArchiveTests9.settemporaryFolder(temporaryFolder26);
        explodedArchiveTests0.temporaryFolder = temporaryFolder26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = null;
        explodedArchiveTests0.archive = explodedArchive30;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive29);
    }

    @Test
    public void test05810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05810");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test05811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05811");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        java.io.File file19 = explodedArchiveTests0.getrootFolder();
        java.io.File file20 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
    }

    @Test
    public void test05812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05812");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test05813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05813");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test05814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05814");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder20);
        java.io.File file22 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test05815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05815");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        java.io.File file11 = explodedArchiveTests8.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests8.setarchive(explodedArchive12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests8.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests16.setarchive(explodedArchive22);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = explodedArchiveTests24.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests24.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests24.setarchive(explodedArchive31);
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests24.gettemporaryFolder();
        explodedArchiveTests16.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests8.temporaryFolder = temporaryFolder33;
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = null;
        explodedArchiveTests0.archive = explodedArchive38;
        java.io.File file40 = null;
        explodedArchiveTests0.rootFolder = file40;
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file43 = explodedArchiveTests0.rootFolder;
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream44, outputStream45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
    }

    @Test
    public void test05816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05816");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.archive = explodedArchive13;
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.temporaryFolder;
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream16, outputStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder15);
    }

    @Test
    public void test05817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05817");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests0.temporaryFolder;
        java.lang.Class<?> wildcardClass21 = temporaryFolder20.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test05818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05818");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests8.setarchive(explodedArchive14);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = null;
        explodedArchiveTests16.setarchive(explodedArchive23);
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests16.gettemporaryFolder();
        explodedArchiveTests8.settemporaryFolder(temporaryFolder25);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder28);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder28);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = null;
        explodedArchiveTests31.rootFolder = file33;
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests31.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = explodedArchiveTests31.getarchive();
        java.io.File file37 = null;
        explodedArchiveTests31.setrootFolder(file37);
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests31.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = explodedArchiveTests31.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests31.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder41;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder48;
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
    }

    @Test
    public void test05819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05819");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        java.io.File file13 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.archive;
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(explodedArchive14);
    }

    @Test
    public void test05820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05820");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        java.io.File file11 = null;
        explodedArchiveTests0.rootFolder = file11;
        java.io.File file13 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test05821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05821");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.setarchive(explodedArchive11);
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder13;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        java.io.File file18 = explodedArchiveTests15.rootFolder;
        java.io.File file19 = explodedArchiveTests15.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests15.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests22.temporaryFolder;
        explodedArchiveTests15.temporaryFolder = temporaryFolder28;
        explodedArchiveTests0.temporaryFolder = temporaryFolder28;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = explodedArchiveTests31.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests31.gettemporaryFolder();
        java.io.File file35 = null;
        explodedArchiveTests31.rootFolder = file35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = explodedArchiveTests31.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests31.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests39 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests39.temporaryFolder;
        java.io.File file41 = explodedArchiveTests39.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests39.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests39.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests39.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests45 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests45.temporaryFolder;
        java.io.File file47 = explodedArchiveTests45.getrootFolder();
        java.io.File file48 = explodedArchiveTests45.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests49 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests49.temporaryFolder;
        explodedArchiveTests45.settemporaryFolder(temporaryFolder50);
        explodedArchiveTests39.temporaryFolder = temporaryFolder50;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests53 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests53.temporaryFolder;
        java.io.File file55 = explodedArchiveTests53.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests53.gettemporaryFolder();
        explodedArchiveTests39.temporaryFolder = temporaryFolder56;
        explodedArchiveTests31.settemporaryFolder(temporaryFolder56);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests59 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests59.temporaryFolder;
        java.io.File file61 = explodedArchiveTests59.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder64 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests59.gettemporaryFolder();
        java.io.File file66 = explodedArchiveTests59.getrootFolder();
        java.io.File file67 = explodedArchiveTests59.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests68 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder69 = explodedArchiveTests68.temporaryFolder;
        java.io.File file70 = explodedArchiveTests68.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = null;
        explodedArchiveTests68.setarchive(explodedArchive71);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = explodedArchiveTests68.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests74 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder75 = explodedArchiveTests74.temporaryFolder;
        java.io.File file76 = explodedArchiveTests74.getrootFolder();
        java.io.File file77 = explodedArchiveTests74.getrootFolder();
        java.io.File file78 = explodedArchiveTests74.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder79 = explodedArchiveTests74.gettemporaryFolder();
        explodedArchiveTests68.settemporaryFolder(temporaryFolder79);
        explodedArchiveTests59.temporaryFolder = temporaryFolder79;
        explodedArchiveTests31.temporaryFolder = temporaryFolder79;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = null;
        explodedArchiveTests31.archive = explodedArchive83;
        org.junit.rules.TemporaryFolder temporaryFolder85 = explodedArchiveTests31.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder85;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(temporaryFolder50);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNotNull(temporaryFolder64);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(temporaryFolder69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNotNull(temporaryFolder75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(temporaryFolder79);
        org.junit.Assert.assertNotNull(temporaryFolder85);
    }

    @Test
    public void test05822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05822");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        java.io.File file14 = explodedArchiveTests11.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests11.temporaryFolder;
        java.io.File file16 = explodedArchiveTests11.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests11.archive;
        java.io.File file18 = null;
        explodedArchiveTests11.setrootFolder(file18);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        java.io.File file23 = explodedArchiveTests20.getrootFolder();
        java.io.File file24 = explodedArchiveTests20.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests20.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests26.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests26.setarchive(explodedArchive33);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests35.setarchive(explodedArchive41);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests43.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests43.setarchive(explodedArchive50);
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests43.gettemporaryFolder();
        explodedArchiveTests35.settemporaryFolder(temporaryFolder52);
        explodedArchiveTests26.temporaryFolder = temporaryFolder52;
        explodedArchiveTests20.temporaryFolder = temporaryFolder52;
        explodedArchiveTests11.temporaryFolder = temporaryFolder52;
        explodedArchiveTests0.temporaryFolder = temporaryFolder52;
        java.io.File file58 = explodedArchiveTests0.rootFolder;
        java.io.File file59 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
    }

    @Test
    public void test05823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05823");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        java.io.File file26 = explodedArchiveTests23.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        explodedArchiveTests23.settemporaryFolder(temporaryFolder28);
        explodedArchiveTests17.temporaryFolder = temporaryFolder28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests17.archive = explodedArchive31;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests17.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder33);
    }

    @Test
    public void test05824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05824");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = null;
        explodedArchiveTests0.setarchive(explodedArchive29);
        java.lang.Class<?> wildcardClass31 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test05825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05825");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.temporaryFolder;
        java.io.File file11 = explodedArchiveTests6.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests6.archive;
        java.io.File file13 = null;
        explodedArchiveTests6.setrootFolder(file13);
        java.io.File file15 = null;
        explodedArchiveTests6.rootFolder = file15;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests17.gettemporaryFolder();
        java.io.File file24 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests17.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests17.temporaryFolder;
        explodedArchiveTests6.temporaryFolder = temporaryFolder26;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder26);
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file30 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test05826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05826");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests12.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        java.io.File file21 = explodedArchiveTests18.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        explodedArchiveTests18.settemporaryFolder(temporaryFolder23);
        explodedArchiveTests12.temporaryFolder = temporaryFolder23;
        java.io.File file26 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder27;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
    }

    @Test
    public void test05827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05827");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.archive = explodedArchive15;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
    }

    @Test
    public void test05828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05828");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = explodedArchiveTests19.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests19.setarchive(explodedArchive22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests19.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        java.io.File file27 = explodedArchiveTests25.getrootFolder();
        java.io.File file28 = explodedArchiveTests25.getrootFolder();
        java.io.File file29 = explodedArchiveTests25.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests25.gettemporaryFolder();
        explodedArchiveTests19.settemporaryFolder(temporaryFolder30);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder30);
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
    }

    @Test
    public void test05829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05829");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(temporaryFolder12);
    }

    @Test
    public void test05830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05830");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.setarchive(explodedArchive14);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        java.io.File file19 = explodedArchiveTests16.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.temporaryFolder;
        java.io.File file21 = explodedArchiveTests16.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests16.archive;
        java.io.File file23 = null;
        explodedArchiveTests16.setrootFolder(file23);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        java.io.File file27 = explodedArchiveTests25.getrootFolder();
        java.io.File file28 = explodedArchiveTests25.getrootFolder();
        java.io.File file29 = explodedArchiveTests25.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests25.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = explodedArchiveTests31.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests31.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests31.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests31.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests31.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = null;
        explodedArchiveTests31.setarchive(explodedArchive38);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests40 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests40.temporaryFolder;
        java.io.File file42 = explodedArchiveTests40.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests40.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests40.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests40.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests40.setarchive(explodedArchive46);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests48 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests48.temporaryFolder;
        java.io.File file50 = explodedArchiveTests48.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests48.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests48.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests48.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests48.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = null;
        explodedArchiveTests48.setarchive(explodedArchive55);
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests48.gettemporaryFolder();
        explodedArchiveTests40.settemporaryFolder(temporaryFolder57);
        explodedArchiveTests31.temporaryFolder = temporaryFolder57;
        explodedArchiveTests25.temporaryFolder = temporaryFolder57;
        explodedArchiveTests16.temporaryFolder = temporaryFolder57;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder57);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder57);
    }

    @Test
    public void test05831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05831");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests7.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests7.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests7.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests7.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests7.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder19;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05832");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests15.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        java.io.File file23 = null;
        explodedArchiveTests0.rootFolder = file23;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file26 = null;
        explodedArchiveTests0.rootFolder = file26;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder25);
    }

    @Test
    public void test05833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05833");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file17 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests10.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests10.archive;
        java.io.File file20 = explodedArchiveTests10.rootFolder;
        java.io.File file21 = null;
        explodedArchiveTests10.rootFolder = file21;
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests10.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder24;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests26.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = explodedArchiveTests31.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests31.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests31.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests31.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = null;
        explodedArchiveTests31.setarchive(explodedArchive37);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests39 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests39.temporaryFolder;
        java.io.File file41 = explodedArchiveTests39.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests39.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests39.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests39.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests39.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests39.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests39.gettemporaryFolder();
        explodedArchiveTests31.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests26.temporaryFolder = temporaryFolder48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = explodedArchiveTests26.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests52 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests52.temporaryFolder;
        java.io.File file54 = explodedArchiveTests52.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests52.gettemporaryFolder();
        java.io.File file56 = null;
        explodedArchiveTests52.rootFolder = file56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = explodedArchiveTests52.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests52.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests52.gettemporaryFolder();
        explodedArchiveTests26.temporaryFolder = temporaryFolder60;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder60);
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNotNull(temporaryFolder63);
    }

    @Test
    public void test05834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05834");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder10;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests12.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests12.setarchive(explodedArchive18);
        java.io.File file20 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests12.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests22.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests22.gettemporaryFolder();
        java.io.File file29 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.getrootFolder();
        java.io.File file33 = explodedArchiveTests30.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests30.temporaryFolder;
        explodedArchiveTests22.temporaryFolder = temporaryFolder34;
        explodedArchiveTests12.temporaryFolder = temporaryFolder34;
        explodedArchiveTests0.temporaryFolder = temporaryFolder34;
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
    }

    @Test
    public void test05835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05835");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests12.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        java.io.File file21 = explodedArchiveTests18.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        explodedArchiveTests18.settemporaryFolder(temporaryFolder23);
        explodedArchiveTests12.temporaryFolder = temporaryFolder23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = explodedArchiveTests12.getarchive();
        java.io.File file27 = explodedArchiveTests12.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests28.gettemporaryFolder();
        java.io.File file35 = explodedArchiveTests28.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = null;
        explodedArchiveTests28.setarchive(explodedArchive36);
        java.io.File file38 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests28.gettemporaryFolder();
        java.io.File file40 = null;
        explodedArchiveTests28.rootFolder = file40;
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests28.temporaryFolder;
        explodedArchiveTests12.temporaryFolder = temporaryFolder42;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder42);
        java.io.File file45 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file45);
    }

    @Test
    public void test05836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05836");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        java.lang.Class<?> wildcardClass12 = temporaryFolder11.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test05837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05837");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.Archive archive11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap12 = explodedArchiveTests0.getEntriesMap(archive11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder10);
    }

    @Test
    public void test05838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05838");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests11.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = null;
        explodedArchiveTests19.rootFolder = file21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = explodedArchiveTests19.archive;
        java.io.File file24 = null;
        explodedArchiveTests19.rootFolder = file24;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        java.io.File file29 = explodedArchiveTests26.rootFolder;
        java.io.File file30 = explodedArchiveTests26.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests26.gettemporaryFolder();
        explodedArchiveTests19.settemporaryFolder(temporaryFolder31);
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests19.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        java.io.File file35 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests36 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests36.temporaryFolder;
        java.io.File file38 = explodedArchiveTests36.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests36.gettemporaryFolder();
        java.io.File file40 = null;
        explodedArchiveTests36.rootFolder = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = explodedArchiveTests36.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests36.gettemporaryFolder();
        java.io.File file44 = null;
        explodedArchiveTests36.setrootFolder(file44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests36.setarchive(explodedArchive46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests36.setarchive(explodedArchive48);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests50 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests50.temporaryFolder;
        java.io.File file52 = explodedArchiveTests50.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests50.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests55 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests55.temporaryFolder;
        java.io.File file57 = explodedArchiveTests55.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder58 = explodedArchiveTests55.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests55.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests55.temporaryFolder;
        explodedArchiveTests50.temporaryFolder = temporaryFolder60;
        explodedArchiveTests36.temporaryFolder = temporaryFolder60;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder60);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests64 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests64.temporaryFolder;
        java.io.File file66 = explodedArchiveTests64.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder67 = explodedArchiveTests64.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder68 = explodedArchiveTests64.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder69 = explodedArchiveTests64.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder70 = explodedArchiveTests64.gettemporaryFolder();
        java.io.File file71 = explodedArchiveTests64.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = null;
        explodedArchiveTests64.setarchive(explodedArchive72);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = explodedArchiveTests64.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = explodedArchiveTests64.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = explodedArchiveTests64.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests64.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder77);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(temporaryFolder58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(temporaryFolder67);
        org.junit.Assert.assertNotNull(temporaryFolder68);
        org.junit.Assert.assertNotNull(temporaryFolder69);
        org.junit.Assert.assertNotNull(temporaryFolder70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(temporaryFolder77);
    }

    @Test
    public void test05839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05839");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        java.io.File file14 = null;
        explodedArchiveTests0.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests0.archive = explodedArchive16;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests18.gettemporaryFolder();
        java.io.File file25 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests18.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests18.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = null;
        explodedArchiveTests18.setarchive(explodedArchive28);
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests18.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests18.archive = explodedArchive31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests18.archive = explodedArchive33;
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests36 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests36.temporaryFolder;
        java.io.File file38 = explodedArchiveTests36.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests36.gettemporaryFolder();
        java.io.File file40 = null;
        explodedArchiveTests36.rootFolder = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = explodedArchiveTests36.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests36.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests44 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests44.temporaryFolder;
        java.io.File file46 = explodedArchiveTests44.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests44.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests44.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests44.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests50 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests50.temporaryFolder;
        java.io.File file52 = explodedArchiveTests50.getrootFolder();
        java.io.File file53 = explodedArchiveTests50.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests54 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests54.temporaryFolder;
        explodedArchiveTests50.settemporaryFolder(temporaryFolder55);
        explodedArchiveTests44.temporaryFolder = temporaryFolder55;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests58 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests58.temporaryFolder;
        java.io.File file60 = explodedArchiveTests58.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder61 = explodedArchiveTests58.gettemporaryFolder();
        explodedArchiveTests44.temporaryFolder = temporaryFolder61;
        explodedArchiveTests36.settemporaryFolder(temporaryFolder61);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests64 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests64.temporaryFolder;
        java.io.File file66 = explodedArchiveTests64.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder67 = explodedArchiveTests64.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder68 = explodedArchiveTests64.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder69 = explodedArchiveTests64.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder70 = explodedArchiveTests64.gettemporaryFolder();
        java.io.File file71 = explodedArchiveTests64.getrootFolder();
        java.io.File file72 = explodedArchiveTests64.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests73 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests73.temporaryFolder;
        java.io.File file75 = explodedArchiveTests73.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = null;
        explodedArchiveTests73.setarchive(explodedArchive76);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = explodedArchiveTests73.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests79 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder80 = explodedArchiveTests79.temporaryFolder;
        java.io.File file81 = explodedArchiveTests79.getrootFolder();
        java.io.File file82 = explodedArchiveTests79.getrootFolder();
        java.io.File file83 = explodedArchiveTests79.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests79.gettemporaryFolder();
        explodedArchiveTests73.settemporaryFolder(temporaryFolder84);
        explodedArchiveTests64.temporaryFolder = temporaryFolder84;
        explodedArchiveTests36.temporaryFolder = temporaryFolder84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = null;
        explodedArchiveTests36.archive = explodedArchive88;
        org.junit.rules.TemporaryFolder temporaryFolder90 = explodedArchiveTests36.gettemporaryFolder();
        explodedArchiveTests18.temporaryFolder = temporaryFolder90;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder90);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(temporaryFolder61);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(temporaryFolder67);
        org.junit.Assert.assertNotNull(temporaryFolder68);
        org.junit.Assert.assertNotNull(temporaryFolder69);
        org.junit.Assert.assertNotNull(temporaryFolder70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(temporaryFolder80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNotNull(temporaryFolder90);
    }

    @Test
    public void test05840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05840");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.File file13 = null;
        explodedArchiveTests0.setrootFolder(file13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.setarchive(explodedArchive15);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests0.getarchive();
        java.io.File file25 = null;
        explodedArchiveTests0.setrootFolder(file25);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive24);
    }

    @Test
    public void test05841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05841");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests12.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests6.temporaryFolder = temporaryFolder19;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder19);
        java.io.File file22 = null;
        explodedArchiveTests0.setrootFolder(file22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests27.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests27.gettemporaryFolder();
        java.io.File file34 = explodedArchiveTests27.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        java.io.File file38 = explodedArchiveTests35.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.temporaryFolder;
        explodedArchiveTests27.temporaryFolder = temporaryFolder39;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = null;
        explodedArchiveTests0.archive = explodedArchive42;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
    }

    @Test
    public void test05842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05842");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream7, outputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
    }

    @Test
    public void test05843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05843");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = null;
        explodedArchiveTests0.setarchive(explodedArchive1);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05844");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test05845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05845");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = null;
        explodedArchiveTests0.setarchive(explodedArchive2);
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05846");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        java.io.File file32 = explodedArchiveTests29.getrootFolder();
        java.io.File file33 = explodedArchiveTests29.rootFolder;
        java.io.File file34 = explodedArchiveTests29.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        java.io.File file44 = explodedArchiveTests41.rootFolder;
        java.io.File file45 = explodedArchiveTests41.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests41.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests35.temporaryFolder = temporaryFolder48;
        explodedArchiveTests29.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests0.setarchive(explodedArchive52);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
    }

    @Test
    public void test05847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05847");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        java.io.File file13 = explodedArchiveTests0.getrootFolder();
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.setarchive(explodedArchive15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests0.getarchive();
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream19, outputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive18);
    }

    @Test
    public void test05848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05848");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.setrootFolder(file10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test05849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05849");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests8.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        explodedArchiveTests22.settemporaryFolder(temporaryFolder27);
        explodedArchiveTests16.temporaryFolder = temporaryFolder27;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        explodedArchiveTests16.temporaryFolder = temporaryFolder33;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests37.gettemporaryFolder();
        java.io.File file44 = explodedArchiveTests37.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = null;
        explodedArchiveTests37.setarchive(explodedArchive45);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests47 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests47.temporaryFolder;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        java.io.File file51 = null;
        explodedArchiveTests0.setrootFolder(file51);
        java.io.File file53 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests54 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests54.temporaryFolder;
        java.io.File file56 = explodedArchiveTests54.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests54.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder58 = explodedArchiveTests54.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests54.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = null;
        explodedArchiveTests54.setarchive(explodedArchive60);
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests54.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder62;
        java.lang.Class<?> wildcardClass64 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNotNull(temporaryFolder58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test05850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05850");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        java.io.File file11 = explodedArchiveTests7.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.Archive archive15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap16 = explodedArchiveTests0.getEntriesMap(archive15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive14);
    }

    @Test
    public void test05851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05851");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.Archive archive8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap9 = explodedArchiveTests0.getEntriesMap(archive8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
    }

    @Test
    public void test05852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05852");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        java.io.File file23 = explodedArchiveTests20.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        explodedArchiveTests20.settemporaryFolder(temporaryFolder25);
        explodedArchiveTests14.temporaryFolder = temporaryFolder25;
        java.io.File file28 = explodedArchiveTests14.getrootFolder();
        java.io.File file29 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = explodedArchiveTests14.getarchive();
        java.io.File file32 = null;
        explodedArchiveTests14.setrootFolder(file32);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        java.io.File file37 = explodedArchiveTests34.rootFolder;
        java.io.File file38 = explodedArchiveTests34.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests34.setarchive(explodedArchive39);
        java.io.File file41 = null;
        explodedArchiveTests34.rootFolder = file41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = explodedArchiveTests34.archive;
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests34.temporaryFolder;
        explodedArchiveTests14.temporaryFolder = temporaryFolder44;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder44);
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.Archive archive49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap50 = explodedArchiveTests0.getEntriesMap(archive49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNull(explodedArchive48);
    }

    @Test
    public void test05853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05853");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.lang.Class<?> wildcardClass9 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test05854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05854");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests14.setarchive(explodedArchive21);
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests14.setarchive(explodedArchive24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = explodedArchiveTests14.archive;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests14.gettemporaryFolder();
        java.io.File file28 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests29.gettemporaryFolder();
        java.io.File file36 = explodedArchiveTests29.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests42 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests42.temporaryFolder;
        java.io.File file44 = explodedArchiveTests42.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests42.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests42.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests42.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests42.setarchive(explodedArchive48);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests50 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests50.temporaryFolder;
        java.io.File file52 = explodedArchiveTests50.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests50.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = null;
        explodedArchiveTests50.setarchive(explodedArchive57);
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests50.gettemporaryFolder();
        explodedArchiveTests42.settemporaryFolder(temporaryFolder59);
        explodedArchiveTests37.temporaryFolder = temporaryFolder59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = null;
        explodedArchiveTests37.archive = explodedArchive62;
        org.junit.rules.TemporaryFolder temporaryFolder64 = null;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder64);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests66 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder67 = explodedArchiveTests66.temporaryFolder;
        java.io.File file68 = explodedArchiveTests66.getrootFolder();
        java.io.File file69 = explodedArchiveTests66.getrootFolder();
        java.io.File file70 = explodedArchiveTests66.rootFolder;
        java.io.File file71 = explodedArchiveTests66.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests72 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder73 = explodedArchiveTests72.temporaryFolder;
        java.io.File file74 = explodedArchiveTests72.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder75 = explodedArchiveTests72.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests72.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests72.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests78 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder79 = explodedArchiveTests78.temporaryFolder;
        java.io.File file80 = explodedArchiveTests78.getrootFolder();
        java.io.File file81 = explodedArchiveTests78.rootFolder;
        java.io.File file82 = explodedArchiveTests78.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = null;
        explodedArchiveTests78.setarchive(explodedArchive83);
        org.junit.rules.TemporaryFolder temporaryFolder85 = explodedArchiveTests78.gettemporaryFolder();
        explodedArchiveTests72.temporaryFolder = temporaryFolder85;
        explodedArchiveTests66.settemporaryFolder(temporaryFolder85);
        explodedArchiveTests37.settemporaryFolder(temporaryFolder85);
        explodedArchiveTests29.temporaryFolder = temporaryFolder85;
        explodedArchiveTests14.temporaryFolder = temporaryFolder85;
        explodedArchiveTests10.settemporaryFolder(temporaryFolder85);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder85);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive93 = null;
        explodedArchiveTests0.setarchive(explodedArchive93);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive95 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(temporaryFolder73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(temporaryFolder75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
        org.junit.Assert.assertNotNull(temporaryFolder77);
        org.junit.Assert.assertNotNull(temporaryFolder79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(temporaryFolder85);
        org.junit.Assert.assertNull(explodedArchive95);
    }

    @Test
    public void test05855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05855");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test05856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05856");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.archive;
        java.io.File file18 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.Archive archive19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap20 = explodedArchiveTests0.getEntriesMap(archive19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test05857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05857");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests7.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests7.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests7.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests7.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests7.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive21);
    }

    @Test
    public void test05858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05858");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        java.io.File file8 = null;
        explodedArchiveTests0.rootFolder = file8;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.archive = explodedArchive13;
        java.io.File file15 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test05859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05859");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        java.io.File file9 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test05860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05860");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        java.io.File file11 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.getarchive();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test05861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05861");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests4 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests4.temporaryFolder;
        java.io.File file6 = explodedArchiveTests4.getrootFolder();
        java.io.File file7 = explodedArchiveTests4.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests4.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder8);
        java.io.File file10 = null;
        explodedArchiveTests0.setrootFolder(file10);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = null;
        explodedArchiveTests12.rootFolder = file14;
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests12.getarchive();
        java.io.File file18 = null;
        explodedArchiveTests12.setrootFolder(file18);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        java.io.File file23 = explodedArchiveTests20.getrootFolder();
        java.io.File file24 = explodedArchiveTests20.rootFolder;
        java.io.File file25 = explodedArchiveTests20.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests26.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = explodedArchiveTests32.getrootFolder();
        java.io.File file35 = explodedArchiveTests32.rootFolder;
        java.io.File file36 = explodedArchiveTests32.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = null;
        explodedArchiveTests32.setarchive(explodedArchive37);
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests32.gettemporaryFolder();
        explodedArchiveTests26.temporaryFolder = temporaryFolder39;
        explodedArchiveTests20.settemporaryFolder(temporaryFolder39);
        explodedArchiveTests12.temporaryFolder = temporaryFolder39;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder39);
        java.io.File file44 = null;
        explodedArchiveTests0.setrootFolder(file44);
        java.io.File file46 = null;
        explodedArchiveTests0.rootFolder = file46;
        java.io.File file48 = explodedArchiveTests0.getrootFolder();
        java.io.File file49 = null;
        explodedArchiveTests0.rootFolder = file49;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(file48);
    }

    @Test
    public void test05862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05862");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        java.io.File file9 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test05863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05863");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests9.setarchive(explodedArchive15);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests17.setarchive(explodedArchive24);
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests17.gettemporaryFolder();
        explodedArchiveTests9.settemporaryFolder(temporaryFolder26);
        explodedArchiveTests0.temporaryFolder = temporaryFolder26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = null;
        explodedArchiveTests0.archive = explodedArchive29;
        java.io.File file31 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file31);
    }

    @Test
    public void test05864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05864");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests7.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        java.io.File file16 = explodedArchiveTests13.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        explodedArchiveTests13.settemporaryFolder(temporaryFolder18);
        explodedArchiveTests7.temporaryFolder = temporaryFolder18;
        java.io.File file21 = explodedArchiveTests7.getrootFolder();
        java.io.File file22 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests7.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = null;
        explodedArchiveTests24.rootFolder = file26;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests24.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests24.getarchive();
        java.io.File file30 = null;
        explodedArchiveTests24.setrootFolder(file30);
        java.io.File file32 = explodedArchiveTests24.rootFolder;
        java.io.File file33 = explodedArchiveTests24.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests34 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests34.temporaryFolder;
        java.io.File file36 = explodedArchiveTests34.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests34.gettemporaryFolder();
        java.io.File file38 = null;
        explodedArchiveTests34.rootFolder = file38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = explodedArchiveTests34.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests34.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = null;
        explodedArchiveTests34.setarchive(explodedArchive42);
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests34.temporaryFolder;
        explodedArchiveTests24.temporaryFolder = temporaryFolder44;
        explodedArchiveTests7.temporaryFolder = temporaryFolder44;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder44);
        java.io.File file48 = null;
        explodedArchiveTests0.rootFolder = file48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(explodedArchive50);
    }

    @Test
    public void test05865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05865");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.setarchive(explodedArchive11);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
    }

    @Test
    public void test05866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05866");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests9.setarchive(explodedArchive16);
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests9.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests9.archive;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        java.io.File file26 = explodedArchiveTests23.getrootFolder();
        java.io.File file27 = explodedArchiveTests23.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        explodedArchiveTests9.temporaryFolder = temporaryFolder28;
        java.io.File file30 = null;
        explodedArchiveTests9.rootFolder = file30;
        java.io.File file32 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests9.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder33);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
    }

    @Test
    public void test05867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05867");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05868");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.setrootFolder(file5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        java.io.File file8 = null;
        explodedArchiveTests0.rootFolder = file8;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        java.io.File file14 = explodedArchiveTests11.rootFolder;
        java.io.File file15 = explodedArchiveTests11.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests11.archive = explodedArchive16;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        java.io.File file21 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests18.gettemporaryFolder();
        explodedArchiveTests11.settemporaryFolder(temporaryFolder22);
        java.io.File file24 = explodedArchiveTests11.rootFolder;
        java.io.File file25 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests11.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder26);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
    }

    @Test
    public void test05869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05869");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = explodedArchive9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05870");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.rootFolder;
        java.io.File file13 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test05871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05871");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05872");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        java.io.File file13 = null;
        explodedArchiveTests9.rootFolder = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests9.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests9.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file22 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = null;
        explodedArchiveTests23.rootFolder = file25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests23.getarchive();
        java.io.File file29 = null;
        explodedArchiveTests23.setrootFolder(file29);
        java.io.File file31 = explodedArchiveTests23.rootFolder;
        java.io.File file32 = explodedArchiveTests23.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests23.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = null;
        explodedArchiveTests23.archive = explodedArchive34;
        java.io.File file36 = null;
        explodedArchiveTests23.rootFolder = file36;
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests23.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = explodedArchiveTests23.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests23.archive = explodedArchive41;
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests23.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder43);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(temporaryFolder43);
    }

    @Test
    public void test05873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05873");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        java.io.File file32 = explodedArchiveTests29.getrootFolder();
        java.io.File file33 = explodedArchiveTests29.rootFolder;
        java.io.File file34 = explodedArchiveTests29.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        java.io.File file44 = explodedArchiveTests41.rootFolder;
        java.io.File file45 = explodedArchiveTests41.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests41.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests35.temporaryFolder = temporaryFolder48;
        explodedArchiveTests29.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests0.setarchive(explodedArchive52);
        java.io.File file54 = null;
        explodedArchiveTests0.rootFolder = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = null;
        explodedArchiveTests0.setarchive(explodedArchive56);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests58 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests58.temporaryFolder;
        java.io.File file60 = null;
        explodedArchiveTests58.rootFolder = file60;
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests58.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = explodedArchiveTests58.getarchive();
        java.io.File file64 = null;
        explodedArchiveTests58.setrootFolder(file64);
        org.junit.rules.TemporaryFolder temporaryFolder66 = explodedArchiveTests58.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = explodedArchiveTests58.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests68 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder69 = explodedArchiveTests68.temporaryFolder;
        java.io.File file70 = explodedArchiveTests68.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests68.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder72 = explodedArchiveTests68.gettemporaryFolder();
        explodedArchiveTests58.temporaryFolder = temporaryFolder72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = null;
        explodedArchiveTests58.setarchive(explodedArchive74);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests76 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests76.temporaryFolder;
        java.io.File file78 = explodedArchiveTests76.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder79 = explodedArchiveTests76.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder80 = explodedArchiveTests76.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests81 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder82 = explodedArchiveTests81.temporaryFolder;
        java.io.File file83 = explodedArchiveTests81.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests81.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder85 = explodedArchiveTests81.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder86 = explodedArchiveTests81.temporaryFolder;
        explodedArchiveTests76.temporaryFolder = temporaryFolder86;
        explodedArchiveTests58.settemporaryFolder(temporaryFolder86);
        org.junit.rules.TemporaryFolder temporaryFolder89 = explodedArchiveTests58.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder89;
        java.io.File file91 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertNotNull(temporaryFolder66);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(temporaryFolder69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNotNull(temporaryFolder72);
        org.junit.Assert.assertNotNull(temporaryFolder77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(temporaryFolder79);
        org.junit.Assert.assertNotNull(temporaryFolder80);
        org.junit.Assert.assertNotNull(temporaryFolder82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNotNull(temporaryFolder85);
        org.junit.Assert.assertNotNull(temporaryFolder86);
        org.junit.Assert.assertNotNull(temporaryFolder89);
        org.junit.Assert.assertNull(file91);
    }

    @Test
    public void test05874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05874");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.getrootFolder();
        java.io.File file11 = explodedArchiveTests7.rootFolder;
        java.io.File file12 = explodedArchiveTests7.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests7.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        java.io.File file16 = null;
        explodedArchiveTests0.rootFolder = file16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests0.setarchive(explodedArchive18);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test05875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05875");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
    }

    @Test
    public void test05876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05876");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file14 = null;
        explodedArchiveTests10.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests10.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests10.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests10.setarchive(explodedArchive18);
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder20;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder22);
    }

    @Test
    public void test05877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05877");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        java.io.File file11 = explodedArchiveTests7.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder12);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        java.io.File file21 = explodedArchiveTests18.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests14.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder22);
        java.io.File file25 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests0.setarchive(explodedArchive26);
        java.lang.Class<?> wildcardClass28 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test05878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05878");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests12.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests6.temporaryFolder = temporaryFolder19;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder19);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder23;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        java.io.File file29 = explodedArchiveTests26.rootFolder;
        java.io.File file30 = explodedArchiveTests26.rootFolder;
        java.io.File file31 = null;
        explodedArchiveTests26.setrootFolder(file31);
        java.io.File file33 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests26.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder34;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
    }

    @Test
    public void test05879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05879");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        java.io.File file19 = explodedArchiveTests0.getrootFolder();
        java.io.File file20 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests0.getarchive();
        java.io.File file22 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
    }

    @Test
    public void test05880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05880");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
    }

    @Test
    public void test05881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05881");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
    }

    @Test
    public void test05882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05882");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests13.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests21 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests21.temporaryFolder;
        java.io.File file23 = explodedArchiveTests21.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests21.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests21.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests21.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests21.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = null;
        explodedArchiveTests21.setarchive(explodedArchive28);
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests21.gettemporaryFolder();
        explodedArchiveTests13.settemporaryFolder(temporaryFolder30);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        explodedArchiveTests13.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        java.io.File file36 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = explodedArchiveTests0.archive;
        java.io.File file38 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = null;
        explodedArchiveTests0.setarchive(explodedArchive39);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream41, outputStream42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(file38);
    }

    @Test
    public void test05883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05883");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file17 = explodedArchiveTests0.getrootFolder();
        java.io.File file18 = explodedArchiveTests0.rootFolder;
        java.io.File file19 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.Archive archive20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap21 = explodedArchiveTests0.getEntriesMap(archive20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test05884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05884");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        java.io.File file19 = explodedArchiveTests0.getrootFolder();
        java.io.File file20 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder21 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        java.io.File file23 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test05885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05885");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests5.temporaryFolder;
        java.io.File file13 = explodedArchiveTests5.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests5.archive;
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests5.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        java.io.File file20 = null;
        explodedArchiveTests16.rootFolder = file20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests16.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests16.setarchive(explodedArchive24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests16.archive = explodedArchive26;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests16.temporaryFolder;
        explodedArchiveTests5.temporaryFolder = temporaryFolder28;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder28);
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder31);
    }

    @Test
    public void test05886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05886");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests14.settemporaryFolder(temporaryFolder19);
        explodedArchiveTests8.temporaryFolder = temporaryFolder19;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests8.temporaryFolder = temporaryFolder25;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = null;
        explodedArchiveTests0.setarchive(explodedArchive29);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(explodedArchive28);
    }

    @Test
    public void test05887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05887");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        java.io.File file16 = explodedArchiveTests9.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests9.setarchive(explodedArchive17);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        explodedArchiveTests9.settemporaryFolder(temporaryFolder20);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder20);
        java.io.File file23 = explodedArchiveTests0.rootFolder;
        java.lang.Class<?> wildcardClass24 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test05888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05888");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests8.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        explodedArchiveTests22.settemporaryFolder(temporaryFolder27);
        explodedArchiveTests16.temporaryFolder = temporaryFolder27;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        explodedArchiveTests16.temporaryFolder = temporaryFolder33;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests37.gettemporaryFolder();
        java.io.File file44 = explodedArchiveTests37.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = null;
        explodedArchiveTests37.setarchive(explodedArchive45);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests47 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests47.temporaryFolder;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        java.io.File file51 = null;
        explodedArchiveTests0.setrootFolder(file51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests56 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests56.temporaryFolder;
        java.io.File file58 = explodedArchiveTests56.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests56.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests56.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder61 = explodedArchiveTests56.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder61;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNotNull(temporaryFolder61);
    }

    @Test
    public void test05889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05889");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        java.io.File file11 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.getarchive();
        java.io.File file13 = null;
        explodedArchiveTests0.setrootFolder(file13);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test05890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05890");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        java.lang.Class<?> wildcardClass15 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test05891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05891");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = null;
        explodedArchiveTests0.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests0.archive = explodedArchive16;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
    }

    @Test
    public void test05892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05892");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests9.setarchive(explodedArchive16);
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests9.setarchive(explodedArchive19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests9.archive;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        java.io.File file26 = explodedArchiveTests23.getrootFolder();
        java.io.File file27 = explodedArchiveTests23.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        explodedArchiveTests9.temporaryFolder = temporaryFolder28;
        java.io.File file30 = null;
        explodedArchiveTests9.rootFolder = file30;
        java.io.File file32 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests9.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder33);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        java.io.File file38 = explodedArchiveTests35.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests39 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests39.temporaryFolder;
        explodedArchiveTests35.settemporaryFolder(temporaryFolder40);
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests35.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass45 = explodedArchive44.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(explodedArchive44);
    }

    @Test
    public void test05893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05893");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.setarchive(explodedArchive6);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests8.setarchive(explodedArchive15);
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests8.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        java.io.File file19 = explodedArchiveTests0.getrootFolder();
        java.io.File file20 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file23 = explodedArchiveTests0.getrootFolder();
        java.io.File file24 = null;
        explodedArchiveTests0.rootFolder = file24;
        java.io.File file26 = null;
        explodedArchiveTests0.rootFolder = file26;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        java.io.File file31 = explodedArchiveTests28.rootFolder;
        java.io.File file32 = explodedArchiveTests28.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests28.setarchive(explodedArchive33);
        java.io.File file35 = null;
        explodedArchiveTests28.rootFolder = file35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = explodedArchiveTests28.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests38 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests38.temporaryFolder;
        java.io.File file40 = explodedArchiveTests38.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests38.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests38.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests38.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests38.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = null;
        explodedArchiveTests38.setarchive(explodedArchive45);
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests38.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests38.setarchive(explodedArchive48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = explodedArchiveTests38.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests51 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests51.temporaryFolder;
        java.io.File file53 = explodedArchiveTests51.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests51.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests51.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests51.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = null;
        explodedArchiveTests51.setarchive(explodedArchive57);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests59 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests59.temporaryFolder;
        java.io.File file61 = explodedArchiveTests59.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder64 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests59.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = null;
        explodedArchiveTests59.setarchive(explodedArchive66);
        org.junit.rules.TemporaryFolder temporaryFolder68 = explodedArchiveTests59.gettemporaryFolder();
        explodedArchiveTests51.settemporaryFolder(temporaryFolder68);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests70 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests70.temporaryFolder;
        explodedArchiveTests51.settemporaryFolder(temporaryFolder71);
        explodedArchiveTests38.temporaryFolder = temporaryFolder71;
        explodedArchiveTests28.temporaryFolder = temporaryFolder71;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder71);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream76, outputStream77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNotNull(temporaryFolder64);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNotNull(temporaryFolder68);
        org.junit.Assert.assertNotNull(temporaryFolder71);
    }

    @Test
    public void test05894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05894");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.temporaryFolder;
        java.lang.Class<?> wildcardClass14 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test05895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05895");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = null;
        explodedArchiveTests16.rootFolder = file18;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests16.getarchive();
        java.io.File file22 = null;
        explodedArchiveTests16.setrootFolder(file22);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = explodedArchiveTests24.getrootFolder();
        java.io.File file27 = explodedArchiveTests24.getrootFolder();
        java.io.File file28 = explodedArchiveTests24.rootFolder;
        java.io.File file29 = explodedArchiveTests24.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests30.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests30.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests36 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests36.temporaryFolder;
        java.io.File file38 = explodedArchiveTests36.getrootFolder();
        java.io.File file39 = explodedArchiveTests36.rootFolder;
        java.io.File file40 = explodedArchiveTests36.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = null;
        explodedArchiveTests36.setarchive(explodedArchive41);
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests36.gettemporaryFolder();
        explodedArchiveTests30.temporaryFolder = temporaryFolder43;
        explodedArchiveTests24.settemporaryFolder(temporaryFolder43);
        explodedArchiveTests16.temporaryFolder = temporaryFolder43;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder43);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(temporaryFolder43);
    }

    @Test
    public void test05896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05896");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = null;
        explodedArchiveTests14.rootFolder = file16;
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests14.getarchive();
        java.io.File file20 = null;
        explodedArchiveTests14.setrootFolder(file20);
        java.io.File file22 = explodedArchiveTests14.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests23.gettemporaryFolder();
        java.io.File file30 = explodedArchiveTests23.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests23.setarchive(explodedArchive31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests23.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests23.temporaryFolder;
        explodedArchiveTests14.settemporaryFolder(temporaryFolder35);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder35);
        org.springframework.boot.loader.archive.Archive archive38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap39 = explodedArchiveTests0.getEntriesMap(archive38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
    }

    @Test
    public void test05897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05897");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.temporaryFolder;
        java.io.File file11 = explodedArchiveTests6.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests6.archive;
        java.io.File file13 = null;
        explodedArchiveTests6.setrootFolder(file13);
        java.io.File file15 = null;
        explodedArchiveTests6.rootFolder = file15;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests17.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests17.gettemporaryFolder();
        java.io.File file24 = explodedArchiveTests17.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests17.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests17.temporaryFolder;
        explodedArchiveTests6.temporaryFolder = temporaryFolder26;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder26);
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(explodedArchive30);
    }

    @Test
    public void test05898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05898");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(explodedArchive14);
    }

    @Test
    public void test05899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05899");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        java.io.File file10 = null;
        explodedArchiveTests0.setrootFolder(file10);
        java.io.File file12 = null;
        explodedArchiveTests0.setrootFolder(file12);
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test05900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05900");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests8.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        explodedArchiveTests22.settemporaryFolder(temporaryFolder27);
        explodedArchiveTests16.temporaryFolder = temporaryFolder27;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        explodedArchiveTests16.temporaryFolder = temporaryFolder33;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests37.gettemporaryFolder();
        java.io.File file44 = explodedArchiveTests37.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = null;
        explodedArchiveTests37.setarchive(explodedArchive45);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests47 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests47.temporaryFolder;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        java.io.File file51 = null;
        explodedArchiveTests0.setrootFolder(file51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
    }

    @Test
    public void test05901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05901");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        java.io.File file32 = explodedArchiveTests29.getrootFolder();
        java.io.File file33 = explodedArchiveTests29.rootFolder;
        java.io.File file34 = explodedArchiveTests29.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        java.io.File file44 = explodedArchiveTests41.rootFolder;
        java.io.File file45 = explodedArchiveTests41.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests41.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests35.temporaryFolder = temporaryFolder48;
        explodedArchiveTests29.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests0.setarchive(explodedArchive52);
        java.io.File file54 = null;
        explodedArchiveTests0.rootFolder = file54;
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = null;
        explodedArchiveTests0.archive = explodedArchive57;
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests0.temporaryFolder;
        java.lang.Class<?> wildcardClass60 = temporaryFolder59.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test05902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05902");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        java.io.File file32 = explodedArchiveTests29.getrootFolder();
        java.io.File file33 = explodedArchiveTests29.rootFolder;
        java.io.File file34 = explodedArchiveTests29.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        java.io.File file44 = explodedArchiveTests41.rootFolder;
        java.io.File file45 = explodedArchiveTests41.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests41.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests35.temporaryFolder = temporaryFolder48;
        explodedArchiveTests29.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests0.setarchive(explodedArchive52);
        java.io.File file54 = explodedArchiveTests0.rootFolder;
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream55, outputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNull(file54);
    }

    @Test
    public void test05903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05903");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        java.io.File file13 = null;
        explodedArchiveTests9.rootFolder = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests9.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests9.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(explodedArchive20);
    }

    @Test
    public void test05904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05904");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        java.io.File file32 = explodedArchiveTests29.getrootFolder();
        java.io.File file33 = explodedArchiveTests29.rootFolder;
        java.io.File file34 = explodedArchiveTests29.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        java.io.File file44 = explodedArchiveTests41.rootFolder;
        java.io.File file45 = explodedArchiveTests41.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests41.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests35.temporaryFolder = temporaryFolder48;
        explodedArchiveTests29.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests0.setarchive(explodedArchive52);
        java.io.File file54 = null;
        explodedArchiveTests0.rootFolder = file54;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
    }

    @Test
    public void test05905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05905");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive13);
    }

    @Test
    public void test05906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05906");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        java.io.File file16 = explodedArchiveTests9.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests9.setarchive(explodedArchive17);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        explodedArchiveTests9.settemporaryFolder(temporaryFolder20);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder20);
        java.io.File file23 = null;
        explodedArchiveTests0.rootFolder = file23;
        java.io.File file25 = null;
        explodedArchiveTests0.rootFolder = file25;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        java.io.File file30 = explodedArchiveTests27.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests27.temporaryFolder;
        java.io.File file32 = explodedArchiveTests27.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests27.archive;
        java.io.File file34 = null;
        explodedArchiveTests27.setrootFolder(file34);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests36 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests36.temporaryFolder;
        java.io.File file38 = explodedArchiveTests36.getrootFolder();
        java.io.File file39 = explodedArchiveTests36.getrootFolder();
        java.io.File file40 = explodedArchiveTests36.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests36.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests42 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests42.temporaryFolder;
        java.io.File file44 = explodedArchiveTests42.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests42.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests42.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder47 = explodedArchiveTests42.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests42.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = null;
        explodedArchiveTests42.setarchive(explodedArchive49);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests51 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests51.temporaryFolder;
        java.io.File file53 = explodedArchiveTests51.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests51.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests51.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests51.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = null;
        explodedArchiveTests51.setarchive(explodedArchive57);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests59 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests59.temporaryFolder;
        java.io.File file61 = explodedArchiveTests59.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder64 = explodedArchiveTests59.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests59.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = null;
        explodedArchiveTests59.setarchive(explodedArchive66);
        org.junit.rules.TemporaryFolder temporaryFolder68 = explodedArchiveTests59.gettemporaryFolder();
        explodedArchiveTests51.settemporaryFolder(temporaryFolder68);
        explodedArchiveTests42.temporaryFolder = temporaryFolder68;
        explodedArchiveTests36.temporaryFolder = temporaryFolder68;
        explodedArchiveTests27.temporaryFolder = temporaryFolder68;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests73 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests73.temporaryFolder;
        java.io.File file75 = null;
        explodedArchiveTests73.rootFolder = file75;
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests73.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = explodedArchiveTests73.getarchive();
        java.io.File file79 = null;
        explodedArchiveTests73.setrootFolder(file79);
        java.io.File file81 = explodedArchiveTests73.rootFolder;
        java.io.File file82 = null;
        explodedArchiveTests73.rootFolder = file82;
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests73.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder85 = explodedArchiveTests73.gettemporaryFolder();
        explodedArchiveTests27.temporaryFolder = temporaryFolder85;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder85);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNotNull(temporaryFolder47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNotNull(temporaryFolder64);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNotNull(temporaryFolder68);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNotNull(temporaryFolder77);
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNotNull(temporaryFolder85);
    }

    @Test
    public void test05907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05907");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = file10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test05908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05908");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = null;
        explodedArchiveTests9.rootFolder = file11;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests9.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests9.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests9.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests0.archive = explodedArchive19;
        java.io.File file21 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests0.archive = explodedArchive22;
        org.springframework.boot.loader.archive.Archive archive24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap25 = explodedArchiveTests0.getEntriesMap(archive24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test05909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05909");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.File file13 = null;
        explodedArchiveTests0.rootFolder = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        java.io.File file19 = explodedArchiveTests16.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.temporaryFolder;
        java.io.File file21 = explodedArchiveTests16.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests16.archive;
        java.io.File file23 = null;
        explodedArchiveTests16.setrootFolder(file23);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        java.io.File file27 = explodedArchiveTests25.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests25.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests25.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests25.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests25.gettemporaryFolder();
        java.io.File file32 = explodedArchiveTests25.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests25.setarchive(explodedArchive33);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        explodedArchiveTests25.settemporaryFolder(temporaryFolder36);
        explodedArchiveTests16.settemporaryFolder(temporaryFolder36);
        java.io.File file39 = null;
        explodedArchiveTests16.rootFolder = file39;
        java.io.File file41 = explodedArchiveTests16.rootFolder;
        java.io.File file42 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests16.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder43;
        java.io.File file45 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file45);
    }

    @Test
    public void test05910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05910");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        java.io.File file11 = null;
        explodedArchiveTests0.rootFolder = file11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        java.io.File file16 = explodedArchiveTests13.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests13.setarchive(explodedArchive17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests13.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests13.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests21 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests21.temporaryFolder;
        java.io.File file23 = explodedArchiveTests21.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests21.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests21.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests21.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = null;
        explodedArchiveTests21.setarchive(explodedArchive27);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests29.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests29.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = null;
        explodedArchiveTests29.setarchive(explodedArchive36);
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests29.gettemporaryFolder();
        explodedArchiveTests21.settemporaryFolder(temporaryFolder38);
        explodedArchiveTests13.temporaryFolder = temporaryFolder38;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder38);
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder42);
    }

    @Test
    public void test05911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05911");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        java.io.File file12 = null;
        explodedArchiveTests0.setrootFolder(file12);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05912");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.temporaryFolder;
        java.io.File file17 = null;
        explodedArchiveTests0.setrootFolder(file17);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
    }

    @Test
    public void test05913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05913");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream12, outputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05914");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file10 = null;
        explodedArchiveTests6.rootFolder = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests6.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests14.setarchive(explodedArchive21);
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests6.settemporaryFolder(temporaryFolder23);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder23);
        java.io.File file26 = null;
        explodedArchiveTests0.setrootFolder(file26);
        java.io.File file28 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file31 = null;
        explodedArchiveTests0.setrootFolder(file31);
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
    }

    @Test
    public void test05915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05915");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests15.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        java.io.File file23 = null;
        explodedArchiveTests0.rootFolder = file23;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder25);
    }

    @Test
    public void test05916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05916");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests11.gettemporaryFolder();
        java.io.File file18 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests11.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests11.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder20;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
    }

    @Test
    public void test05917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05917");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.getrootFolder();
        java.io.File file18 = explodedArchiveTests14.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder19;
        java.io.File file21 = null;
        explodedArchiveTests0.rootFolder = file21;
        java.io.File file23 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.Archive archive25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap26 = explodedArchiveTests0.getEntriesMap(archive25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
    }

    @Test
    public void test05918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05918");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test05919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05919");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder11);
    }

    @Test
    public void test05920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05920");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests4 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests4.temporaryFolder;
        java.io.File file6 = explodedArchiveTests4.getrootFolder();
        java.io.File file7 = explodedArchiveTests4.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests4.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder14);
    }

    @Test
    public void test05921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05921");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = null;
        explodedArchiveTests17.rootFolder = file19;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests17.getarchive();
        java.io.File file23 = null;
        explodedArchiveTests17.setrootFolder(file23);
        java.io.File file25 = explodedArchiveTests17.rootFolder;
        java.io.File file26 = explodedArchiveTests17.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        java.io.File file31 = null;
        explodedArchiveTests27.rootFolder = file31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests27.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests27.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = null;
        explodedArchiveTests27.setarchive(explodedArchive35);
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests27.temporaryFolder;
        explodedArchiveTests17.temporaryFolder = temporaryFolder37;
        explodedArchiveTests0.temporaryFolder = temporaryFolder37;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests40 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests40.temporaryFolder;
        java.io.File file42 = null;
        explodedArchiveTests40.rootFolder = file42;
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests40.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = explodedArchiveTests40.getarchive();
        java.io.File file46 = null;
        explodedArchiveTests40.setrootFolder(file46);
        java.io.File file48 = explodedArchiveTests40.rootFolder;
        java.io.File file49 = explodedArchiveTests40.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests50 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests50.temporaryFolder;
        java.io.File file52 = explodedArchiveTests50.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests50.gettemporaryFolder();
        java.io.File file54 = null;
        explodedArchiveTests50.rootFolder = file54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = explodedArchiveTests50.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder57 = explodedArchiveTests50.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = null;
        explodedArchiveTests50.setarchive(explodedArchive58);
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests50.temporaryFolder;
        explodedArchiveTests40.temporaryFolder = temporaryFolder60;
        explodedArchiveTests0.temporaryFolder = temporaryFolder60;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(temporaryFolder57);
        org.junit.Assert.assertNotNull(temporaryFolder60);
    }

    @Test
    public void test05922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05922");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = explodedArchiveTests11.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests11.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests11.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder17);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests19 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests19.temporaryFolder;
        java.io.File file21 = null;
        explodedArchiveTests19.rootFolder = file21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = explodedArchiveTests19.archive;
        java.io.File file24 = null;
        explodedArchiveTests19.rootFolder = file24;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        java.io.File file29 = explodedArchiveTests26.rootFolder;
        java.io.File file30 = explodedArchiveTests26.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests26.gettemporaryFolder();
        explodedArchiveTests19.settemporaryFolder(temporaryFolder31);
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests19.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        java.io.File file35 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests36 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests36.temporaryFolder;
        java.io.File file38 = explodedArchiveTests36.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests36.gettemporaryFolder();
        java.io.File file40 = null;
        explodedArchiveTests36.rootFolder = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = explodedArchiveTests36.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests36.gettemporaryFolder();
        java.io.File file44 = null;
        explodedArchiveTests36.setrootFolder(file44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests36.setarchive(explodedArchive46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests36.setarchive(explodedArchive48);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests50 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests50.temporaryFolder;
        java.io.File file52 = explodedArchiveTests50.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests50.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests55 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests55.temporaryFolder;
        java.io.File file57 = explodedArchiveTests55.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder58 = explodedArchiveTests55.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests55.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder60 = explodedArchiveTests55.temporaryFolder;
        explodedArchiveTests50.temporaryFolder = temporaryFolder60;
        explodedArchiveTests36.temporaryFolder = temporaryFolder60;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder60);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(temporaryFolder58);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNotNull(temporaryFolder60);
    }

    @Test
    public void test05923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05923");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests9.setarchive(explodedArchive12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests9.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        java.io.File file18 = explodedArchiveTests15.getrootFolder();
        java.io.File file19 = explodedArchiveTests15.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        explodedArchiveTests9.settemporaryFolder(temporaryFolder20);
        explodedArchiveTests0.temporaryFolder = temporaryFolder20;
        java.io.File file23 = null;
        explodedArchiveTests0.setrootFolder(file23);
        java.io.File file25 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test05924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05924");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests5.gettemporaryFolder();
        java.io.File file12 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests5.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder13;
        java.io.File file15 = null;
        explodedArchiveTests0.rootFolder = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests0.archive = explodedArchive17;
        java.lang.Class<?> wildcardClass19 = explodedArchiveTests0.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test05925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05925");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests29 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests29.temporaryFolder;
        java.io.File file31 = explodedArchiveTests29.getrootFolder();
        java.io.File file32 = explodedArchiveTests29.getrootFolder();
        java.io.File file33 = explodedArchiveTests29.rootFolder;
        java.io.File file34 = explodedArchiveTests29.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests35 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests35.temporaryFolder;
        java.io.File file37 = explodedArchiveTests35.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests35.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests35.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests41 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests41.temporaryFolder;
        java.io.File file43 = explodedArchiveTests41.getrootFolder();
        java.io.File file44 = explodedArchiveTests41.rootFolder;
        java.io.File file45 = explodedArchiveTests41.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = null;
        explodedArchiveTests41.setarchive(explodedArchive46);
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests41.gettemporaryFolder();
        explodedArchiveTests35.temporaryFolder = temporaryFolder48;
        explodedArchiveTests29.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = null;
        explodedArchiveTests0.setarchive(explodedArchive52);
        java.io.File file54 = null;
        explodedArchiveTests0.rootFolder = file54;
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = null;
        explodedArchiveTests0.archive = explodedArchive57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNull(explodedArchive59);
    }

    @Test
    public void test05926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05926");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        java.io.File file16 = explodedArchiveTests9.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests9.setarchive(explodedArchive17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests9.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests9.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        java.io.File file23 = null;
        explodedArchiveTests0.rootFolder = file23;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
    }

    @Test
    public void test05927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05927");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests9.gettemporaryFolder();
        java.io.File file16 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests9.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests9.archive;
        java.io.File file19 = explodedArchiveTests9.rootFolder;
        java.io.File file20 = null;
        explodedArchiveTests9.rootFolder = file20;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests9.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests0.archive = explodedArchive24;
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder26);
    }

    @Test
    public void test05928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05928");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.archive = explodedArchive5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
    }

    @Test
    public void test05929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05929");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        java.io.File file6 = explodedArchiveTests0.rootFolder;
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05930");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        java.io.File file11 = null;
        explodedArchiveTests0.rootFolder = file11;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file15 = null;
        explodedArchiveTests0.setrootFolder(file15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests0.archive = explodedArchive17;
        java.io.File file19 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder20;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test05931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05931");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        java.io.File file12 = null;
        explodedArchiveTests0.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.archive = explodedArchive14;
        java.io.File file16 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test05932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05932");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests0.setarchive(explodedArchive17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
    }

    @Test
    public void test05933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05933");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests11 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests11.temporaryFolder;
        java.io.File file13 = null;
        explodedArchiveTests11.rootFolder = file13;
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests11.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests11.getarchive();
        java.io.File file17 = null;
        explodedArchiveTests11.setrootFolder(file17);
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests11.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder19;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
    }

    @Test
    public void test05934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05934");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test05935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05935");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file26 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
    }

    @Test
    public void test05936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05936");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = null;
        explodedArchiveTests8.rootFolder = file10;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests8.getarchive();
        java.io.File file14 = null;
        explodedArchiveTests8.setrootFolder(file14);
        java.io.File file16 = explodedArchiveTests8.rootFolder;
        java.io.File file17 = explodedArchiveTests8.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests18.gettemporaryFolder();
        java.io.File file22 = null;
        explodedArchiveTests18.rootFolder = file22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests18.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests18.setarchive(explodedArchive26);
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests8.temporaryFolder = temporaryFolder28;
        explodedArchiveTests0.temporaryFolder = temporaryFolder28;
        java.lang.Class<?> wildcardClass31 = temporaryFolder28.getClass();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test05937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05937");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
    }

    @Test
    public void test05938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05938");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.getarchive();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests16.gettemporaryFolder();
        java.io.File file23 = explodedArchiveTests16.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = null;
        explodedArchiveTests16.setarchive(explodedArchive24);
        java.io.File file26 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests16.gettemporaryFolder();
        java.io.File file28 = null;
        explodedArchiveTests16.rootFolder = file28;
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests16.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder30;
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder32);
    }

    @Test
    public void test05939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05939");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder6 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder6;
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        java.io.File file11 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        java.io.File file17 = null;
        explodedArchiveTests12.setrootFolder(file17);
        java.io.File file19 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder20);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = null;
        explodedArchiveTests22.setarchive(explodedArchive26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests22.getarchive();
        java.io.File file29 = null;
        explodedArchiveTests22.setrootFolder(file29);
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = null;
        explodedArchiveTests0.setarchive(explodedArchive33);
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file36 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(file36);
    }

    @Test
    public void test05940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05940");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05941");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive13);
    }

    @Test
    public void test05942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05942");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.archive = explodedArchive8;
        java.io.File file10 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test05943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05943");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests8.setarchive(explodedArchive14);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = null;
        explodedArchiveTests16.setarchive(explodedArchive23);
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests16.gettemporaryFolder();
        explodedArchiveTests8.settemporaryFolder(temporaryFolder25);
        explodedArchiveTests0.temporaryFolder = temporaryFolder25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(explodedArchive28);
    }

    @Test
    public void test05944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05944");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNull(explodedArchive21);
    }

    @Test
    public void test05945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05945");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        java.io.File file8 = null;
        explodedArchiveTests0.setrootFolder(file8);
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test05946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05946");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        java.io.File file13 = null;
        explodedArchiveTests9.rootFolder = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests9.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests9.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
    }

    @Test
    public void test05947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05947");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.rootFolder = file4;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        java.io.File file17 = explodedArchiveTests14.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        explodedArchiveTests14.settemporaryFolder(temporaryFolder19);
        explodedArchiveTests8.temporaryFolder = temporaryFolder19;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests22.gettemporaryFolder();
        explodedArchiveTests8.temporaryFolder = temporaryFolder25;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = explodedArchiveTests0.getarchive();
        java.io.File file29 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(explodedArchive30);
    }

    @Test
    public void test05948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05948");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test05949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05949");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        java.io.File file9 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test05950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05950");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(explodedArchive15);
    }

    @Test
    public void test05951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05951");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.setup();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(explodedArchive17);
    }

    @Test
    public void test05952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05952");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.getrootFolder();
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests6.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.setarchive(explodedArchive13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.getarchive();
        java.io.File file16 = null;
        explodedArchiveTests0.rootFolder = file16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = null;
        explodedArchiveTests0.setarchive(explodedArchive18);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive15);
    }

    @Test
    public void test05953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05953");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        java.io.File file29 = null;
        explodedArchiveTests0.rootFolder = file29;
        java.io.File file31 = explodedArchiveTests0.getrootFolder();
        java.io.File file32 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(explodedArchive33);
    }

    @Test
    public void test05954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05954");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        java.io.File file10 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
    }

    @Test
    public void test05955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05955");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.junit.rules.TemporaryFolder temporaryFolder11 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test05956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05956");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        java.io.File file11 = explodedArchiveTests8.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests8.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNull(explodedArchive16);
    }

    @Test
    public void test05957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05957");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = explodedArchiveTests20.getrootFolder();
        java.io.File file23 = explodedArchiveTests20.rootFolder;
        java.io.File file24 = explodedArchiveTests20.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests20.gettemporaryFolder();
        java.io.File file26 = explodedArchiveTests20.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests20.temporaryFolder;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        java.io.File file29 = null;
        explodedArchiveTests0.setrootFolder(file29);
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests0.temporaryFolder;
        java.io.File file32 = null;
        explodedArchiveTests0.setrootFolder(file32);
        java.io.File file34 = null;
        explodedArchiveTests0.setrootFolder(file34);
        java.io.File file36 = null;
        explodedArchiveTests0.rootFolder = file36;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
    }

    @Test
    public void test05958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05958");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests15.gettemporaryFolder();
        java.io.File file22 = explodedArchiveTests15.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests28.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = null;
        explodedArchiveTests28.setarchive(explodedArchive34);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests36 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests36.temporaryFolder;
        java.io.File file38 = explodedArchiveTests36.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests36.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests36.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests36.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests36.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = null;
        explodedArchiveTests36.setarchive(explodedArchive43);
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests36.gettemporaryFolder();
        explodedArchiveTests28.settemporaryFolder(temporaryFolder45);
        explodedArchiveTests23.temporaryFolder = temporaryFolder45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests23.archive = explodedArchive48;
        org.junit.rules.TemporaryFolder temporaryFolder50 = null;
        explodedArchiveTests23.settemporaryFolder(temporaryFolder50);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests52 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests52.temporaryFolder;
        java.io.File file54 = explodedArchiveTests52.getrootFolder();
        java.io.File file55 = explodedArchiveTests52.getrootFolder();
        java.io.File file56 = explodedArchiveTests52.rootFolder;
        java.io.File file57 = explodedArchiveTests52.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests58 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests58.temporaryFolder;
        java.io.File file60 = explodedArchiveTests58.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder61 = explodedArchiveTests58.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder62 = explodedArchiveTests58.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests58.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests64 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests64.temporaryFolder;
        java.io.File file66 = explodedArchiveTests64.getrootFolder();
        java.io.File file67 = explodedArchiveTests64.rootFolder;
        java.io.File file68 = explodedArchiveTests64.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = null;
        explodedArchiveTests64.setarchive(explodedArchive69);
        org.junit.rules.TemporaryFolder temporaryFolder71 = explodedArchiveTests64.gettemporaryFolder();
        explodedArchiveTests58.temporaryFolder = temporaryFolder71;
        explodedArchiveTests52.settemporaryFolder(temporaryFolder71);
        explodedArchiveTests23.settemporaryFolder(temporaryFolder71);
        explodedArchiveTests15.temporaryFolder = temporaryFolder71;
        explodedArchiveTests0.temporaryFolder = temporaryFolder71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = explodedArchiveTests0.getarchive();
        java.io.File file78 = null;
        explodedArchiveTests0.setrootFolder(file78);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(temporaryFolder61);
        org.junit.Assert.assertNotNull(temporaryFolder62);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(temporaryFolder71);
        org.junit.Assert.assertNull(explodedArchive77);
    }

    @Test
    public void test05959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05959");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests15.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder21);
        java.io.File file23 = null;
        explodedArchiveTests0.rootFolder = file23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = explodedArchiveTests0.archive;
        java.io.File file27 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNull(file27);
    }

    @Test
    public void test05960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05960");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.setarchive(explodedArchive11);
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.archive = explodedArchive15;
        java.io.File file17 = explodedArchiveTests0.getrootFolder();
        java.io.File file18 = explodedArchiveTests0.rootFolder;
        java.io.File file19 = null;
        explodedArchiveTests0.rootFolder = file19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests0.setarchive(explodedArchive21);
        java.io.File file23 = null;
        explodedArchiveTests0.rootFolder = file23;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test05961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05961");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.rootFolder;
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.getarchive();
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream9, outputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test05962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05962");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests7 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests7.temporaryFolder;
        java.io.File file9 = explodedArchiveTests7.getrootFolder();
        java.io.File file10 = explodedArchiveTests7.rootFolder;
        java.io.File file11 = explodedArchiveTests7.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests7.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder12);
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests0.archive = explodedArchive16;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
    }

    @Test
    public void test05963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05963");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = null;
        explodedArchiveTests17.rootFolder = file19;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = explodedArchiveTests17.getarchive();
        java.io.File file23 = null;
        explodedArchiveTests17.setrootFolder(file23);
        java.io.File file25 = explodedArchiveTests17.rootFolder;
        java.io.File file26 = explodedArchiveTests17.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests27 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests27.temporaryFolder;
        java.io.File file29 = explodedArchiveTests27.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests27.gettemporaryFolder();
        java.io.File file31 = null;
        explodedArchiveTests27.rootFolder = file31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = explodedArchiveTests27.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests27.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = null;
        explodedArchiveTests27.setarchive(explodedArchive35);
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests27.temporaryFolder;
        explodedArchiveTests17.temporaryFolder = temporaryFolder37;
        explodedArchiveTests0.temporaryFolder = temporaryFolder37;
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = explodedArchiveTests0.getarchive();
        java.io.File file43 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNestedArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(file43);
    }

    @Test
    public void test05964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05964");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        java.io.File file9 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = file9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test05965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05965");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.archive = explodedArchive5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStreamNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder9);
    }

    @Test
    public void test05966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05966");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass30 = temporaryFolder29.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(temporaryFolder29);
    }

    @Test
    public void test05967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05967");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests5.gettemporaryFolder();
        java.io.File file12 = explodedArchiveTests5.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = null;
        explodedArchiveTests13.rootFolder = file15;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests13.getarchive();
        java.io.File file19 = null;
        explodedArchiveTests13.setrootFolder(file19);
        java.io.File file21 = explodedArchiveTests13.rootFolder;
        java.io.File file22 = explodedArchiveTests13.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        java.io.File file27 = null;
        explodedArchiveTests23.rootFolder = file27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = explodedArchiveTests23.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests23.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = null;
        explodedArchiveTests23.setarchive(explodedArchive31);
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests23.temporaryFolder;
        explodedArchiveTests13.temporaryFolder = temporaryFolder33;
        explodedArchiveTests5.temporaryFolder = temporaryFolder33;
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        java.io.File file37 = null;
        explodedArchiveTests0.rootFolder = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = explodedArchiveTests0.archive;
        java.io.File file40 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.Archive archive41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap42 = explodedArchiveTests0.getEntriesMap(archive41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNull(file40);
    }

    @Test
    public void test05968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05968");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.archive = explodedArchive5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests0.temporaryFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
    }

    @Test
    public void test05969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05969");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests6.gettemporaryFolder();
        java.io.File file10 = null;
        explodedArchiveTests6.rootFolder = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests6.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests14 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests14.temporaryFolder;
        java.io.File file16 = explodedArchiveTests14.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests14.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests14.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = null;
        explodedArchiveTests14.setarchive(explodedArchive21);
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests14.gettemporaryFolder();
        explodedArchiveTests6.settemporaryFolder(temporaryFolder23);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder23);
        java.io.File file26 = null;
        explodedArchiveTests0.setrootFolder(file26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = null;
        explodedArchiveTests0.archive = explodedArchive28;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder23);
    }

    @Test
    public void test05970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05970");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
    }

    @Test
    public void test05971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05971");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.setarchive(explodedArchive11);
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.archive = explodedArchive15;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests17 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests17.temporaryFolder;
        java.io.File file19 = explodedArchiveTests17.getrootFolder();
        java.io.File file20 = explodedArchiveTests17.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests17.temporaryFolder;
        java.io.File file22 = explodedArchiveTests17.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = explodedArchiveTests17.archive;
        java.io.File file24 = null;
        explodedArchiveTests17.setrootFolder(file24);
        java.io.File file26 = null;
        explodedArchiveTests17.rootFolder = file26;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests28.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests28.temporaryFolder;
        explodedArchiveTests17.settemporaryFolder(temporaryFolder34);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests36 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder37 = explodedArchiveTests36.temporaryFolder;
        java.io.File file38 = null;
        explodedArchiveTests36.rootFolder = file38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = explodedArchiveTests36.archive;
        java.io.File file41 = null;
        explodedArchiveTests36.rootFolder = file41;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests43 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests43.temporaryFolder;
        java.io.File file45 = explodedArchiveTests43.getrootFolder();
        java.io.File file46 = explodedArchiveTests43.rootFolder;
        java.io.File file47 = explodedArchiveTests43.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests43.gettemporaryFolder();
        explodedArchiveTests36.settemporaryFolder(temporaryFolder48);
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests36.temporaryFolder;
        explodedArchiveTests17.temporaryFolder = temporaryFolder50;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder50);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder37);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder50);
    }

    @Test
    public void test05972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05972");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        java.io.File file28 = explodedArchiveTests26.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests26.gettemporaryFolder();
        java.io.File file30 = null;
        explodedArchiveTests26.rootFolder = file30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = explodedArchiveTests26.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests26.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder34 = explodedArchiveTests26.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = null;
        explodedArchiveTests0.setarchive(explodedArchive36);
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file39 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file41 = null;
        explodedArchiveTests0.rootFolder = file41;
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream43, outputStream44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder34);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
    }

    @Test
    public void test05973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05973");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = null;
        explodedArchiveTests0.setarchive(explodedArchive5);
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        java.io.File file11 = null;
        explodedArchiveTests0.setrootFolder(file11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        java.io.File file16 = explodedArchiveTests13.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = null;
        explodedArchiveTests13.setarchive(explodedArchive17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests13.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests20 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests20.temporaryFolder;
        java.io.File file22 = null;
        explodedArchiveTests20.rootFolder = file22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests20.archive;
        java.io.File file25 = null;
        explodedArchiveTests20.setrootFolder(file25);
        java.io.File file27 = null;
        explodedArchiveTests20.rootFolder = file27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = null;
        explodedArchiveTests20.setarchive(explodedArchive29);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = null;
        explodedArchiveTests31.rootFolder = file33;
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests31.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = explodedArchiveTests31.getarchive();
        java.io.File file37 = null;
        explodedArchiveTests31.setrootFolder(file37);
        java.io.File file39 = explodedArchiveTests31.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests40 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests40.temporaryFolder;
        java.io.File file42 = explodedArchiveTests40.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests40.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests40.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests40.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests40.gettemporaryFolder();
        java.io.File file47 = explodedArchiveTests40.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = null;
        explodedArchiveTests40.setarchive(explodedArchive48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = explodedArchiveTests40.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests40.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests40.temporaryFolder;
        explodedArchiveTests31.settemporaryFolder(temporaryFolder52);
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests31.gettemporaryFolder();
        explodedArchiveTests20.temporaryFolder = temporaryFolder54;
        explodedArchiveTests13.temporaryFolder = temporaryFolder54;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder54);
        java.io.File file58 = null;
        explodedArchiveTests0.setrootFolder(file58);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNotNull(temporaryFolder54);
    }

    @Test
    public void test05974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05974");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
    }

    @Test
    public void test05975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05975");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.setarchive(explodedArchive10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = null;
        explodedArchiveTests0.setarchive(explodedArchive14);
        java.io.File file16 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test05976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05976");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        java.io.File file9 = explodedArchiveTests0.getrootFolder();
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests0.archive = explodedArchive13;
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder12);
    }

    @Test
    public void test05977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05977");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests12.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder18);
        java.io.File file20 = null;
        explodedArchiveTests0.rootFolder = file20;
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests0.gettemporaryFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder22);
    }

    @Test
    public void test05978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05978");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        java.io.File file5 = null;
        explodedArchiveTests0.rootFolder = file5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        java.io.File file10 = null;
        explodedArchiveTests0.setrootFolder(file10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive14);
    }

    @Test
    public void test05979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05979");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = null;
        explodedArchiveTests0.setarchive(explodedArchive3);
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        java.io.File file9 = null;
        explodedArchiveTests0.setrootFolder(file9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.File file13 = null;
        explodedArchiveTests0.rootFolder = file13;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test05980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05980");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        java.io.File file10 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.setarchive(explodedArchive11);
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests6.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = null;
        explodedArchiveTests0.archive = explodedArchive15;
        java.io.File file17 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests18 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests18.temporaryFolder;
        java.io.File file20 = explodedArchiveTests18.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests18.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests18.setarchive(explodedArchive25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = explodedArchiveTests18.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests28 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests28.temporaryFolder;
        java.io.File file30 = explodedArchiveTests28.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests28.gettemporaryFolder();
        explodedArchiveTests18.settemporaryFolder(temporaryFolder31);
        java.io.File file33 = null;
        explodedArchiveTests18.setrootFolder(file33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = null;
        explodedArchiveTests18.setarchive(explodedArchive35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = explodedArchiveTests18.archive;
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests18.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = explodedArchiveTests18.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests40 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests40.temporaryFolder;
        java.io.File file42 = explodedArchiveTests40.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests40.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder44 = explodedArchiveTests40.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests45 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder46 = explodedArchiveTests45.temporaryFolder;
        java.io.File file47 = explodedArchiveTests45.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests45.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests45.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder50 = explodedArchiveTests45.temporaryFolder;
        explodedArchiveTests40.temporaryFolder = temporaryFolder50;
        explodedArchiveTests18.settemporaryFolder(temporaryFolder50);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder50);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifestEvenIfNonRecursive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder44);
        org.junit.Assert.assertNotNull(temporaryFolder46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(temporaryFolder48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder50);
    }

    @Test
    public void test05981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05981");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.File file13 = null;
        explodedArchiveTests0.rootFolder = file13;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests21 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests21.temporaryFolder;
        java.io.File file23 = explodedArchiveTests21.getrootFolder();
        java.io.File file24 = explodedArchiveTests21.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests25 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests25.temporaryFolder;
        explodedArchiveTests21.settemporaryFolder(temporaryFolder26);
        explodedArchiveTests15.temporaryFolder = temporaryFolder26;
        java.io.File file29 = explodedArchiveTests15.getrootFolder();
        java.io.File file30 = explodedArchiveTests15.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests32 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests32.temporaryFolder;
        java.io.File file34 = null;
        explodedArchiveTests32.rootFolder = file34;
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests32.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = explodedArchiveTests32.getarchive();
        java.io.File file38 = null;
        explodedArchiveTests32.setrootFolder(file38);
        java.io.File file40 = explodedArchiveTests32.rootFolder;
        java.io.File file41 = explodedArchiveTests32.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests42 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests42.temporaryFolder;
        java.io.File file44 = explodedArchiveTests42.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests42.gettemporaryFolder();
        java.io.File file46 = null;
        explodedArchiveTests42.rootFolder = file46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = explodedArchiveTests42.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder49 = explodedArchiveTests42.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = null;
        explodedArchiveTests42.setarchive(explodedArchive50);
        org.junit.rules.TemporaryFolder temporaryFolder52 = explodedArchiveTests42.temporaryFolder;
        explodedArchiveTests32.temporaryFolder = temporaryFolder52;
        explodedArchiveTests15.temporaryFolder = temporaryFolder52;
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests15.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder55);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNotNull(temporaryFolder49);
        org.junit.Assert.assertNotNull(temporaryFolder52);
        org.junit.Assert.assertNotNull(temporaryFolder55);
    }

    @Test
    public void test05982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05982");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = null;
        explodedArchiveTests0.archive = explodedArchive2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.Archive archive6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap7 = explodedArchiveTests0.getEntriesMap(archive6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test05983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05983");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNull(explodedArchive4);
    }

    @Test
    public void test05984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05984");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.archive = explodedArchive7;
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = null;
        explodedArchiveTests12.rootFolder = file14;
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests12.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests12.archive;
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests12.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder19;
        java.io.File file21 = explodedArchiveTests0.rootFolder;
        java.io.File file22 = explodedArchiveTests0.rootFolder;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getNonRecursiveManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test05985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05985");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        java.io.File file6 = null;
        explodedArchiveTests0.setrootFolder(file6);
        java.io.File file8 = explodedArchiveTests0.rootFolder;
        java.io.File file9 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        java.io.File file13 = null;
        explodedArchiveTests0.rootFolder = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests0.archive;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNull(explodedArchive16);
    }

    @Test
    public void test05986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05986");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.archive = explodedArchive8;
        java.io.File file10 = null;
        explodedArchiveTests0.rootFolder = file10;
        java.io.File file12 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test05987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05987");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.getarchive();
        java.io.File file7 = null;
        explodedArchiveTests0.setrootFolder(file7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.archive = explodedArchive12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests0.getarchive();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrlWithSpaceInPath();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive14);
    }

    @Test
    public void test05988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05988");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        explodedArchiveTests0.settemporaryFolder(temporaryFolder9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = null;
        explodedArchiveTests0.setarchive(explodedArchive12);
        java.io.File file14 = null;
        explodedArchiveTests0.rootFolder = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = explodedArchiveTests0.archive;
        java.io.File file18 = null;
        explodedArchiveTests0.rootFolder = file18;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNull(explodedArchive17);
    }

    @Test
    public void test05989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05989");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests0.temporaryFolder;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests9 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests9.temporaryFolder;
        java.io.File file11 = explodedArchiveTests9.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder12 = explodedArchiveTests9.gettemporaryFolder();
        java.io.File file13 = null;
        explodedArchiveTests9.rootFolder = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = explodedArchiveTests9.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests9.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests9.gettemporaryFolder();
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests0.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests0.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file22 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.Archive archive23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.springframework.boot.loader.archive.Archive.Entry> strMap24 = explodedArchiveTests0.getEntriesMap(archive23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(temporaryFolder12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test05990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05990");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = null;
        explodedArchiveTests0.rootFolder = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = null;
        explodedArchiveTests5.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = explodedArchiveTests5.archive;
        java.io.File file10 = null;
        explodedArchiveTests5.rootFolder = file10;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        java.io.File file16 = explodedArchiveTests12.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests12.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder17);
        explodedArchiveTests0.temporaryFolder = temporaryFolder17;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
    }

    @Test
    public void test05991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05991");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file5 = explodedArchiveTests0.rootFolder;
        java.io.File file6 = explodedArchiveTests0.getrootFolder();
        java.io.File file7 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = null;
        explodedArchiveTests0.setarchive(explodedArchive8);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        java.io.File file12 = explodedArchiveTests10.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests10.gettemporaryFolder();
        java.io.File file14 = explodedArchiveTests10.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests15 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests15.temporaryFolder;
        java.io.File file17 = null;
        explodedArchiveTests15.rootFolder = file17;
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests15.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests15.getarchive();
        java.io.File file21 = null;
        explodedArchiveTests15.setrootFolder(file21);
        java.io.File file23 = explodedArchiveTests15.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests24 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder25 = explodedArchiveTests24.temporaryFolder;
        java.io.File file26 = explodedArchiveTests24.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder30 = explodedArchiveTests24.gettemporaryFolder();
        java.io.File file31 = explodedArchiveTests24.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = null;
        explodedArchiveTests24.setarchive(explodedArchive32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = explodedArchiveTests24.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder35 = explodedArchiveTests24.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder36 = explodedArchiveTests24.temporaryFolder;
        explodedArchiveTests15.settemporaryFolder(temporaryFolder36);
        explodedArchiveTests10.temporaryFolder = temporaryFolder36;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder36);
        java.io.File file40 = null;
        explodedArchiveTests0.rootFolder = file40;
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream42, outputStream43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(temporaryFolder25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(temporaryFolder35);
        org.junit.Assert.assertNotNull(temporaryFolder36);
    }

    @Test
    public void test05992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05992");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.getrootFolder();
        java.io.File file4 = explodedArchiveTests0.rootFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file9 = null;
        explodedArchiveTests0.rootFolder = file9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.archive = explodedArchive11;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getResourceAsStream();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
    }

    @Test
    public void test05993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05993");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = null;
        explodedArchiveTests0.setarchive(explodedArchive7);
        org.junit.rules.TemporaryFolder temporaryFolder9 = null;
        explodedArchiveTests0.temporaryFolder = temporaryFolder9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests0.setarchive(explodedArchive11);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
    }

    @Test
    public void test05994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05994");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests10 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests10.temporaryFolder;
        explodedArchiveTests6.settemporaryFolder(temporaryFolder11);
        explodedArchiveTests0.temporaryFolder = temporaryFolder11;
        java.io.File file14 = explodedArchiveTests0.getrootFolder();
        java.io.File file15 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file17 = explodedArchiveTests0.getrootFolder();
        java.io.File file18 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = null;
        explodedArchiveTests0.archive = explodedArchive19;
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = null;
        explodedArchiveTests0.archive = explodedArchive22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = explodedArchiveTests0.archive;
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream25, outputStream26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNull(explodedArchive24);
    }

    @Test
    public void test05995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05995");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        java.io.File file8 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests0.temporaryFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = null;
        explodedArchiveTests0.archive = explodedArchive10;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests12 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder13 = explodedArchiveTests12.temporaryFolder;
        java.io.File file14 = explodedArchiveTests12.getrootFolder();
        java.io.File file15 = explodedArchiveTests12.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests12.temporaryFolder;
        java.io.File file17 = explodedArchiveTests12.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = explodedArchiveTests12.archive;
        java.io.File file19 = null;
        explodedArchiveTests12.setrootFolder(file19);
        java.io.File file21 = null;
        explodedArchiveTests12.rootFolder = file21;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests23 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests23.temporaryFolder;
        java.io.File file25 = explodedArchiveTests23.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder26 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder28 = explodedArchiveTests23.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder29 = explodedArchiveTests23.temporaryFolder;
        explodedArchiveTests12.settemporaryFolder(temporaryFolder29);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests31 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder32 = explodedArchiveTests31.temporaryFolder;
        java.io.File file33 = null;
        explodedArchiveTests31.rootFolder = file33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = explodedArchiveTests31.archive;
        java.io.File file36 = null;
        explodedArchiveTests31.rootFolder = file36;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests38 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder39 = explodedArchiveTests38.temporaryFolder;
        java.io.File file40 = explodedArchiveTests38.getrootFolder();
        java.io.File file41 = explodedArchiveTests38.rootFolder;
        java.io.File file42 = explodedArchiveTests38.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests38.gettemporaryFolder();
        explodedArchiveTests31.settemporaryFolder(temporaryFolder43);
        org.junit.rules.TemporaryFolder temporaryFolder45 = explodedArchiveTests31.temporaryFolder;
        explodedArchiveTests12.temporaryFolder = temporaryFolder45;
        java.io.File file47 = explodedArchiveTests12.getrootFolder();
        java.io.File file48 = explodedArchiveTests12.rootFolder;
        java.io.File file49 = explodedArchiveTests12.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests50 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder51 = explodedArchiveTests50.temporaryFolder;
        java.io.File file52 = explodedArchiveTests50.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder53 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder54 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder55 = explodedArchiveTests50.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder56 = explodedArchiveTests50.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = null;
        explodedArchiveTests50.setarchive(explodedArchive57);
        org.junit.rules.TemporaryFolder temporaryFolder59 = explodedArchiveTests50.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = null;
        explodedArchiveTests50.setarchive(explodedArchive60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = explodedArchiveTests50.archive;
        org.junit.rules.TemporaryFolder temporaryFolder63 = explodedArchiveTests50.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests64 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder65 = explodedArchiveTests64.temporaryFolder;
        java.io.File file66 = null;
        explodedArchiveTests64.rootFolder = file66;
        org.junit.rules.TemporaryFolder temporaryFolder68 = explodedArchiveTests64.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = explodedArchiveTests64.getarchive();
        java.io.File file70 = null;
        explodedArchiveTests64.setrootFolder(file70);
        java.io.File file72 = explodedArchiveTests64.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests73 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder74 = explodedArchiveTests73.temporaryFolder;
        java.io.File file75 = explodedArchiveTests73.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder76 = explodedArchiveTests73.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder77 = explodedArchiveTests73.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder78 = explodedArchiveTests73.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder79 = explodedArchiveTests73.gettemporaryFolder();
        java.io.File file80 = explodedArchiveTests73.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = null;
        explodedArchiveTests73.setarchive(explodedArchive81);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = explodedArchiveTests73.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder84 = explodedArchiveTests73.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder85 = explodedArchiveTests73.temporaryFolder;
        explodedArchiveTests64.settemporaryFolder(temporaryFolder85);
        explodedArchiveTests50.settemporaryFolder(temporaryFolder85);
        explodedArchiveTests12.temporaryFolder = temporaryFolder85;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder85);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.nestedDirArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(temporaryFolder24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder26);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder28);
        org.junit.Assert.assertNotNull(temporaryFolder29);
        org.junit.Assert.assertNotNull(temporaryFolder32);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(temporaryFolder39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNotNull(temporaryFolder45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(temporaryFolder51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(temporaryFolder53);
        org.junit.Assert.assertNotNull(temporaryFolder54);
        org.junit.Assert.assertNotNull(temporaryFolder55);
        org.junit.Assert.assertNotNull(temporaryFolder56);
        org.junit.Assert.assertNotNull(temporaryFolder59);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(temporaryFolder63);
        org.junit.Assert.assertNotNull(temporaryFolder65);
        org.junit.Assert.assertNotNull(temporaryFolder68);
        org.junit.Assert.assertNull(explodedArchive69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(temporaryFolder74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(temporaryFolder76);
        org.junit.Assert.assertNotNull(temporaryFolder77);
        org.junit.Assert.assertNotNull(temporaryFolder78);
        org.junit.Assert.assertNotNull(temporaryFolder79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNotNull(temporaryFolder84);
        org.junit.Assert.assertNotNull(temporaryFolder85);
    }

    @Test
    public void test05996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05996");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests5 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests5.temporaryFolder;
        java.io.File file7 = explodedArchiveTests5.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder8 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests5.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests5.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests5.setarchive(explodedArchive11);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests13 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder14 = explodedArchiveTests13.temporaryFolder;
        java.io.File file15 = explodedArchiveTests13.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder16 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder18 = explodedArchiveTests13.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests13.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = null;
        explodedArchiveTests13.setarchive(explodedArchive20);
        org.junit.rules.TemporaryFolder temporaryFolder22 = explodedArchiveTests13.gettemporaryFolder();
        explodedArchiveTests5.settemporaryFolder(temporaryFolder22);
        explodedArchiveTests0.temporaryFolder = temporaryFolder22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = null;
        explodedArchiveTests0.archive = explodedArchive25;
        org.junit.rules.TemporaryFolder temporaryFolder27 = null;
        explodedArchiveTests0.settemporaryFolder(temporaryFolder27);
        java.io.File file29 = null;
        explodedArchiveTests0.rootFolder = file29;
        java.io.File file31 = explodedArchiveTests0.getrootFolder();
        java.io.File file32 = explodedArchiveTests0.getrootFolder();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass33 = file32.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(temporaryFolder8);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(temporaryFolder16);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNotNull(temporaryFolder18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder22);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
    }

    @Test
    public void test05997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05997");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.temporaryFolder;
        java.io.File file5 = explodedArchiveTests0.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = explodedArchiveTests0.archive;
        java.io.File file7 = null;
        explodedArchiveTests0.rootFolder = file7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = null;
        explodedArchiveTests0.setarchive(explodedArchive9);
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests0.setrootFolder(file12);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.createArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: the temporary folder has not yet been created");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(temporaryFolder11);
    }

    @Test
    public void test05998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05998");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder4 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder5 = explodedArchiveTests0.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder6 = explodedArchiveTests0.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = explodedArchiveTests0.archive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = explodedArchiveTests0.archive;
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder4);
        org.junit.Assert.assertNotNull(temporaryFolder5);
        org.junit.Assert.assertNotNull(temporaryFolder6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test05999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05999");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder3 = explodedArchiveTests0.gettemporaryFolder();
        java.io.File file4 = null;
        explodedArchiveTests0.setrootFolder(file4);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests6 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder7 = explodedArchiveTests6.temporaryFolder;
        java.io.File file8 = explodedArchiveTests6.getrootFolder();
        java.io.File file9 = explodedArchiveTests6.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder10 = explodedArchiveTests6.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = null;
        explodedArchiveTests6.archive = explodedArchive11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = null;
        explodedArchiveTests6.archive = explodedArchive13;
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests6.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = null;
        explodedArchiveTests6.archive = explodedArchive16;
        java.io.File file18 = explodedArchiveTests6.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = explodedArchiveTests6.getarchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = explodedArchiveTests6.getarchive();
        java.io.File file21 = explodedArchiveTests6.getrootFolder();
        java.io.File file22 = null;
        explodedArchiveTests6.rootFolder = file22;
        org.junit.rules.TemporaryFolder temporaryFolder24 = explodedArchiveTests6.temporaryFolder;
        explodedArchiveTests0.temporaryFolder = temporaryFolder24;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.getFilteredArchive();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(temporaryFolder3);
        org.junit.Assert.assertNotNull(temporaryFolder7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(temporaryFolder10);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(temporaryFolder24);
    }

    @Test
    public void test06000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test06000");
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests0 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder1 = explodedArchiveTests0.temporaryFolder;
        java.io.File file2 = explodedArchiveTests0.getrootFolder();
        java.io.File file3 = explodedArchiveTests0.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = null;
        explodedArchiveTests0.setarchive(explodedArchive4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = null;
        explodedArchiveTests0.archive = explodedArchive6;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests8 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder9 = explodedArchiveTests8.temporaryFolder;
        java.io.File file10 = explodedArchiveTests8.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder11 = explodedArchiveTests8.gettemporaryFolder();
        java.io.File file12 = null;
        explodedArchiveTests8.rootFolder = file12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = explodedArchiveTests8.getarchive();
        org.junit.rules.TemporaryFolder temporaryFolder15 = explodedArchiveTests8.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests16 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder17 = explodedArchiveTests16.temporaryFolder;
        java.io.File file18 = explodedArchiveTests16.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder19 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder20 = explodedArchiveTests16.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder21 = explodedArchiveTests16.gettemporaryFolder();
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests22 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder23 = explodedArchiveTests22.temporaryFolder;
        java.io.File file24 = explodedArchiveTests22.getrootFolder();
        java.io.File file25 = explodedArchiveTests22.rootFolder;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests26 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder27 = explodedArchiveTests26.temporaryFolder;
        explodedArchiveTests22.settemporaryFolder(temporaryFolder27);
        explodedArchiveTests16.temporaryFolder = temporaryFolder27;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests30 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder31 = explodedArchiveTests30.temporaryFolder;
        java.io.File file32 = explodedArchiveTests30.rootFolder;
        org.junit.rules.TemporaryFolder temporaryFolder33 = explodedArchiveTests30.gettemporaryFolder();
        explodedArchiveTests16.temporaryFolder = temporaryFolder33;
        explodedArchiveTests8.settemporaryFolder(temporaryFolder33);
        explodedArchiveTests0.temporaryFolder = temporaryFolder33;
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests37 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder38 = explodedArchiveTests37.temporaryFolder;
        java.io.File file39 = explodedArchiveTests37.getrootFolder();
        org.junit.rules.TemporaryFolder temporaryFolder40 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder41 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder42 = explodedArchiveTests37.gettemporaryFolder();
        org.junit.rules.TemporaryFolder temporaryFolder43 = explodedArchiveTests37.gettemporaryFolder();
        java.io.File file44 = explodedArchiveTests37.getrootFolder();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = null;
        explodedArchiveTests37.setarchive(explodedArchive45);
        org.springframework.boot.loader.archive.ExplodedArchiveTests explodedArchiveTests47 = new org.springframework.boot.loader.archive.ExplodedArchiveTests();
        org.junit.rules.TemporaryFolder temporaryFolder48 = explodedArchiveTests47.temporaryFolder;
        explodedArchiveTests37.settemporaryFolder(temporaryFolder48);
        explodedArchiveTests0.settemporaryFolder(temporaryFolder48);
        java.io.File file51 = null;
        explodedArchiveTests0.setrootFolder(file51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = null;
        explodedArchiveTests0.archive = explodedArchive53;
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchiveTests0.copy(inputStream55, outputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(temporaryFolder1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(temporaryFolder9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(temporaryFolder11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(temporaryFolder15);
        org.junit.Assert.assertNotNull(temporaryFolder17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(temporaryFolder19);
        org.junit.Assert.assertNotNull(temporaryFolder20);
        org.junit.Assert.assertNotNull(temporaryFolder21);
        org.junit.Assert.assertNotNull(temporaryFolder23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(temporaryFolder27);
        org.junit.Assert.assertNotNull(temporaryFolder31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(temporaryFolder33);
        org.junit.Assert.assertNotNull(temporaryFolder38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(temporaryFolder40);
        org.junit.Assert.assertNotNull(temporaryFolder41);
        org.junit.Assert.assertNotNull(temporaryFolder42);
        org.junit.Assert.assertNotNull(temporaryFolder43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(temporaryFolder48);
    }
}

