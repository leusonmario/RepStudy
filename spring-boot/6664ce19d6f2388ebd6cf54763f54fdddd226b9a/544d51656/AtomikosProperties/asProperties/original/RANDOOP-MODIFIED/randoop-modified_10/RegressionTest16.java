import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test8001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8001");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("{hi!=100}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test8002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8002");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        boolean boolean9 = properties7.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        java.lang.Object obj18 = properties7.remove((java.lang.Object) properties14);
        boolean boolean19 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.util.Properties properties21 = new java.util.Properties(properties14);
        boolean boolean22 = properties4.contains((java.lang.Object) properties21);
        java.lang.String str24 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties4.keys();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration26);
    }

    @Test
    public void test8003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8003");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getService();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str11 = properties9.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        boolean boolean19 = properties14.isEmpty();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean23 = properties14.containsKey((java.lang.Object) properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties24.clone();
        java.util.Set<java.lang.String> strSet26 = properties24.stringPropertyNames();
        java.util.Properties properties27 = new java.util.Properties(properties24);
        java.util.Set<java.lang.String> strSet28 = properties27.stringPropertyNames();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        boolean boolean33 = properties31.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        java.lang.Object obj42 = properties31.remove((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties38.values();
        java.lang.Object obj44 = properties27.get((java.lang.Object) properties38);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test8004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8004");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties23.clear();
        int int27 = properties23.size();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Properties properties35 = new java.util.Properties(properties32);
        java.util.Properties properties36 = new java.util.Properties(properties32);
        boolean boolean38 = properties23.remove((java.lang.Object) properties32, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties32.elements();
        java.util.Properties properties40 = new java.util.Properties(properties32);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        boolean boolean56 = properties45.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet57 = properties45.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        long long61 = atomikosProperties58.getDefaultJtaTimeout();
        java.lang.Object obj62 = properties45.get((java.lang.Object) atomikosProperties58);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        boolean boolean78 = properties67.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj80 = properties67.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet81 = properties67.keySet();
        boolean boolean82 = properties45.containsKey((java.lang.Object) properties67);
        java.lang.Object obj83 = properties18.put((java.lang.Object) properties32, (java.lang.Object) properties67);
        java.util.Properties properties84 = new java.util.Properties(properties18);
        java.util.Collection<java.lang.Object> objCollection85 = properties18.values();
        java.lang.String str86 = properties18.toString();
        java.util.Properties properties87 = new java.util.Properties(properties18);
        java.io.OutputStream outputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.storeToXML(outputStream88, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10L + "'", long61 == 10L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objCollection85);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}" + "'", str86, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
    }

    @Test
    public void test8005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8005");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxActives((int) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        boolean boolean19 = atomikosProperties10.isThreadedTwoPhaseCommit();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties41.isEmpty();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        boolean boolean50 = properties41.containsKey((java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxActives((int) (byte) 0);
        java.lang.Object obj56 = properties26.getOrDefault((java.lang.Object) boolean50, (java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet57 = properties26.stringPropertyNames();
        java.lang.Object obj58 = properties9.putIfAbsent((java.lang.Object) atomikosProperties10, (java.lang.Object) strSet57);
        boolean boolean59 = atomikosProperties10.isThreadedTwoPhaseCommit();
        boolean boolean60 = atomikosProperties10.isThreadedTwoPhaseCommit();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 0 + "'", obj56, (byte) 0);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test8006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8006");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties24 = new java.util.Properties(properties2);
        java.util.Properties properties25 = new java.util.Properties(properties2);
        java.util.Enumeration<?> wildcardEnumeration26 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int28 = atomikosProperties27.getMaxActives();
        long long29 = atomikosProperties27.getMaxTimeout();
        java.util.Properties properties30 = atomikosProperties27.asProperties();
        java.util.Properties properties31 = atomikosProperties27.asProperties();
        java.lang.String str32 = atomikosProperties27.getTransactionManagerUniqueName();
        java.util.Properties properties33 = atomikosProperties27.asProperties();
        atomikosProperties27.setEnableLogging(true);
        atomikosProperties27.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean38 = atomikosProperties27.isEnableLogging();
        boolean boolean39 = properties25.containsKey((java.lang.Object) atomikosProperties27);
        java.lang.String str40 = properties25.toString();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
    }

    @Test
    public void test8007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8007");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet24 = properties4.stringPropertyNames();
        properties4.clear();
        java.util.Properties properties26 = new java.util.Properties(properties4);
        java.lang.String str27 = properties4.toString();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        boolean boolean43 = properties32.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet44 = properties32.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) 10);
        long long48 = atomikosProperties45.getDefaultJtaTimeout();
        java.lang.Object obj49 = properties32.get((java.lang.Object) atomikosProperties45);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        boolean boolean65 = properties54.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj67 = properties54.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet68 = properties54.keySet();
        boolean boolean69 = properties32.containsKey((java.lang.Object) properties54);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties32.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        boolean boolean74 = atomikosProperties71.isEnableLogging();
        atomikosProperties71.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties77.setCheckpointInterval((long) (byte) 0);
        atomikosProperties77.setTransactionManagerUniqueName("");
        boolean boolean84 = atomikosProperties77.isEnableLogging();
        java.lang.Class<?> wildcardClass85 = atomikosProperties77.getClass();
        java.lang.Object obj86 = properties32.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties77);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Set<java.lang.Object> objSet88 = properties32.keySet();
        java.util.Set<java.lang.Object> objSet89 = properties32.keySet();
        properties32.clear();
        java.lang.String str92 = properties32.getProperty("{hi!=hi!, {}={}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10L + "'", long48 == 10L);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objSet89);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test8008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8008");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.keys();
        java.util.Collection<java.lang.Object> objCollection20 = properties4.values();
        java.util.Properties properties21 = new java.util.Properties(properties4);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objCollection20);
    }

    @Test
    public void test8009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8009");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test8010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8010");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        boolean boolean26 = atomikosProperties17.isSerialJtaTransactions();
        atomikosProperties17.setSerialJtaTransactions(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (short) 10);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test8011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8011");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        atomikosProperties17.setSerialJtaTransactions(true);
        java.util.Properties properties27 = atomikosProperties17.asProperties();
        java.lang.String str28 = atomikosProperties17.getTransactionManagerUniqueName();
        atomikosProperties17.setCheckpointInterval((long) (short) 1);
        java.lang.String str31 = atomikosProperties17.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test8012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8012");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        properties11.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test8013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8013");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties12.setCheckpointInterval((long) (byte) 0);
        atomikosProperties12.setTransactionManagerUniqueName("");
        java.util.Properties properties19 = atomikosProperties12.asProperties();
        java.lang.String str20 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setCheckpointInterval(100L);
        atomikosProperties12.setLogBaseName("");
        atomikosProperties12.setSerialJtaTransactions(false);
        java.lang.Object obj27 = properties2.get((java.lang.Object) false);
        java.lang.String str28 = properties2.toString();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{{}=1}" + "'", str28, "{{}=1}");
    }

    @Test
    public void test8014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8014");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        int int51 = atomikosProperties40.getMaxActives();
        atomikosProperties40.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.lang.String str54 = atomikosProperties40.getLogBaseDir();
        atomikosProperties40.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties40.setMaxActives(0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test8015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8015");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        long long12 = atomikosProperties0.getCheckpointInterval();
        long long13 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
    }

    @Test
    public void test8016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8016");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Collection<java.lang.Object> objCollection18 = properties12.values();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties12.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(objEnumeration19);
    }

    @Test
    public void test8017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8017");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.util.Set<java.lang.String> strSet72 = properties64.stringPropertyNames();
        int int73 = properties64.size();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties64.elements();
        java.util.Properties properties75 = new java.util.Properties(properties64);
        boolean boolean76 = properties64.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test8018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8018");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval(100L);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration7 = properties6.propertyNames();
        java.io.InputStream inputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.load(inputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
    }

    @Test
    public void test8019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8019");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseDir("");
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.list(printStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test8020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8020");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout(300000L);
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties19);
    }

    @Test
    public void test8021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8021");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        long long17 = atomikosProperties10.getDefaultJtaTimeout();
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.lang.Object obj19 = properties4.get((java.lang.Object) properties18);
        java.util.Properties properties20 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.String str29 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties32 = atomikosProperties21.asProperties();
        boolean boolean33 = properties32.isEmpty();
        boolean boolean34 = properties20.containsKey((java.lang.Object) boolean33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int36 = atomikosProperties35.getMaxActives();
        long long37 = atomikosProperties35.getMaxTimeout();
        java.util.Properties properties38 = atomikosProperties35.asProperties();
        int int39 = atomikosProperties35.getMaxActives();
        boolean boolean40 = atomikosProperties35.isThreadedTwoPhaseCommit();
        java.lang.String str41 = atomikosProperties35.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties42.setCheckpointInterval((long) (byte) 0);
        atomikosProperties42.setTransactionManagerUniqueName("");
        java.util.Properties properties49 = atomikosProperties42.asProperties();
        java.lang.String str50 = atomikosProperties42.getTransactionManagerUniqueName();
        atomikosProperties42.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Properties properties54 = atomikosProperties42.asProperties();
        java.lang.Object obj55 = properties20.getOrDefault((java.lang.Object) atomikosProperties35, (java.lang.Object) properties54);
        java.lang.String str56 = properties54.toString();
        java.util.Set<java.lang.Object> objSet57 = properties54.keySet();
        java.util.Properties properties58 = new java.util.Properties(properties54);
        java.io.OutputStream outputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties54.storeToXML(outputStream59, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str56, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objSet57);
    }

    @Test
    public void test8022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8022");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        atomikosProperties31.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties31.setSerialJtaTransactions(true);
        long long46 = atomikosProperties31.getDefaultJtaTimeout();
        atomikosProperties31.setSerialJtaTransactions(false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
    }

    @Test
    public void test8023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8023");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test8024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8024");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        long long28 = atomikosProperties17.getCheckpointInterval();
        long long29 = atomikosProperties17.getDefaultJtaTimeout();
        java.util.Properties properties30 = atomikosProperties17.asProperties();
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.storeToXML(outputStream31, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={}, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10L + "'", long29 == 10L);
        org.junit.Assert.assertNotNull(properties30);
    }

    @Test
    public void test8025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8025");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties54.clear();
        int int58 = properties54.size();
        java.lang.Object obj61 = properties54.setProperty("hi!", "hi!");
        java.lang.Object obj64 = properties54.setProperty("tmlog", "tmlog");
        java.lang.Object obj65 = properties34.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        java.util.Properties properties66 = new java.util.Properties(properties34);
        boolean boolean67 = properties66.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test8026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8026");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str9 = atomikosProperties0.getService();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test8027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8027");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj10 = properties6.put((java.lang.Object) properties8, (java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties8.entrySet();
        java.lang.Object obj13 = properties3.remove((java.lang.Object) properties8);
        java.util.Enumeration<?> wildcardEnumeration14 = properties8.propertyNames();
        int int15 = properties8.size();
        java.util.Properties properties16 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties8.keys();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration17);
    }

    @Test
    public void test8028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8028");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) (short) -1);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test8029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8029");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.lang.Object obj42 = properties26.clone();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration44 = properties43.propertyNames();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        java.util.Properties properties53 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        java.lang.Object obj55 = properties43.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxActives((int) '#');
        atomikosProperties56.setEnableLogging(true);
        int int63 = atomikosProperties56.getMaxActives();
        java.util.Properties properties64 = atomikosProperties56.asProperties();
        java.lang.Object obj65 = properties64.clone();
        java.lang.String str66 = properties64.toString();
        java.util.Enumeration<?> wildcardEnumeration67 = properties64.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties68.setCheckpointInterval((long) (byte) 0);
        atomikosProperties68.setTransactionManagerUniqueName("");
        java.util.Properties properties75 = atomikosProperties68.asProperties();
        java.lang.String str76 = atomikosProperties68.getLogBaseName();
        java.util.Properties properties77 = atomikosProperties68.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties77.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setDefaultJtaTimeout((long) (byte) 10);
        long long83 = atomikosProperties80.getDefaultJtaTimeout();
        atomikosProperties80.setTransactionManagerUniqueName("");
        atomikosProperties80.setCheckpointInterval(100L);
        boolean boolean88 = properties77.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties80);
        java.util.Properties properties89 = new java.util.Properties(properties77);
        java.lang.Object obj90 = properties43.put((java.lang.Object) properties64, (java.lang.Object) properties77);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 35 + "'", int63 == 35);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(obj65);
// flaky:         org.junit.Assert.assertEquals(obj65.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}" + "'", str66, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(wildcardEnumeration67);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10L + "'", long83 == 10L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test8030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8030");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        boolean boolean8 = properties6.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        java.lang.Object obj17 = properties6.remove((java.lang.Object) properties13);
        boolean boolean18 = properties13.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties13.entrySet();
        int int20 = properties13.size();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean22 = properties3.equals((java.lang.Object) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        java.util.Properties properties32 = atomikosProperties24.asProperties();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        properties37.clear();
        int int41 = properties37.size();
        java.lang.Object obj44 = properties37.setProperty("hi!", "hi!");
        java.lang.Object obj47 = properties37.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties48.setCheckpointInterval((long) (byte) 0);
        atomikosProperties48.setTransactionManagerUniqueName("");
        boolean boolean55 = atomikosProperties48.isEnableLogging();
        java.lang.String str56 = atomikosProperties48.getLogBaseName();
        atomikosProperties48.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj59 = properties32.put((java.lang.Object) properties37, (java.lang.Object) atomikosProperties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties37.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties37.elements();
        java.lang.Object obj62 = properties23.remove((java.lang.Object) objEnumeration61);
        java.util.Properties properties63 = new java.util.Properties(properties23);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test8031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8031");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        java.util.Properties properties63 = atomikosProperties44.asProperties();
        java.util.Properties properties64 = atomikosProperties44.asProperties();
        boolean boolean65 = properties64.isEmpty();
        java.io.OutputStream outputStream66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.storeToXML(outputStream66, "{tmlog={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test8032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8032");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        int int17 = atomikosProperties0.getMaxActives();
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean19 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxTimeout(52L);
        java.lang.String str22 = atomikosProperties0.getService();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test8033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8033");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.io.Reader reader22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.load(reader22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(properties20);
    }

    @Test
    public void test8034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8034");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("hi!");
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test8035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8035");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties10);
        int int56 = properties55.size();
        java.util.Collection<java.lang.Object> objCollection57 = properties55.values();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
    }

    @Test
    public void test8036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8036");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties18.setCheckpointInterval((long) (byte) 0);
        atomikosProperties18.setTransactionManagerUniqueName("");
        java.util.Properties properties25 = atomikosProperties18.asProperties();
        java.util.Properties properties26 = atomikosProperties18.asProperties();
        atomikosProperties18.setService("hi!");
        atomikosProperties18.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean31 = atomikosProperties18.isEnableLogging();
        int int32 = atomikosProperties18.getMaxActives();
        boolean boolean33 = properties4.equals((java.lang.Object) int32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxActives((int) '#');
        atomikosProperties34.setForceShutdownOnVmExit(true);
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        java.util.Properties properties42 = atomikosProperties34.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean44 = atomikosProperties43.isSerialJtaTransactions();
        boolean boolean45 = properties42.equals((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setService("{}");
        int int48 = atomikosProperties43.getMaxActives();
        boolean boolean49 = properties4.equals((java.lang.Object) atomikosProperties43);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test8037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8037");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long17 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
    }

    @Test
    public void test8038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8038");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setCheckpointInterval((long) 50);
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives(50);
        long long10 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives((int) (short) 10);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog=}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 50L + "'", long7 == 50L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test8039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8039");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        properties16.clear();
        int int20 = properties16.size();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = new java.util.Properties(properties25);
        java.util.Properties properties29 = new java.util.Properties(properties25);
        boolean boolean31 = properties16.remove((java.lang.Object) properties25, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection34 = properties25.values();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setMaxActives((int) (byte) 0);
        atomikosProperties57.setEnableLogging(true);
        atomikosProperties57.setForceShutdownOnVmExit(false);
        boolean boolean66 = properties48.equals((java.lang.Object) false);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties48.keys();
        java.lang.Object obj68 = properties11.put((java.lang.Object) properties25, (java.lang.Object) properties48);
        java.util.Properties properties69 = new java.util.Properties(properties11);
        java.lang.Object obj72 = properties11.setProperty("{={tmlog=}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.Writer writer73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.store(writer73, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test8040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8040");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.elements();
        int int10 = properties7.size();
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        java.lang.Object obj12 = properties7.clone();
        java.util.Properties properties13 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int15 = atomikosProperties14.getMaxActives();
        java.util.Properties properties16 = atomikosProperties14.asProperties();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        boolean boolean21 = properties19.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        java.lang.Object obj30 = properties19.remove((java.lang.Object) properties26);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties35.entrySet();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        properties45.clear();
        int int49 = properties45.size();
        java.util.Properties properties50 = new java.util.Properties(properties45);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        properties55.clear();
        java.lang.String str60 = properties55.getProperty("");
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Properties properties63 = new java.util.Properties(properties61);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.lang.Object obj67 = properties63.put((java.lang.Object) properties65, (java.lang.Object) (short) 1);
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        java.lang.Object obj69 = properties35.put((java.lang.Object) properties45, (java.lang.Object) properties63);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Properties properties72 = new java.util.Properties(properties70);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.lang.Object obj76 = properties72.put((java.lang.Object) properties74, (java.lang.Object) (short) 1);
        java.util.Properties properties77 = new java.util.Properties(properties74);
        java.util.Properties properties78 = new java.util.Properties(properties74);
        java.util.Set<java.lang.Object> objSet79 = properties78.keySet();
        java.lang.Object obj80 = properties19.replace((java.lang.Object) properties35, (java.lang.Object) objSet79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int82 = atomikosProperties81.getMaxActives();
        long long83 = atomikosProperties81.getMaxTimeout();
        java.util.Properties properties84 = atomikosProperties81.asProperties();
        atomikosProperties81.setService("hi!");
        boolean boolean87 = properties16.remove((java.lang.Object) properties19, (java.lang.Object) "hi!");
        java.lang.Object obj88 = properties16.clone();
        boolean boolean89 = properties7.containsKey((java.lang.Object) properties16);
        java.lang.Class<?> wildcardClass90 = properties7.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 50 + "'", int82 == 50);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 300000L + "'", long83 == 300000L);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(obj88);
// flaky:         org.junit.Assert.assertEquals(obj88.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test8041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8041");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxActives((int) '#');
        boolean boolean19 = atomikosProperties14.isSerialJtaTransactions();
        atomikosProperties14.setCheckpointInterval((long) (-1));
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        boolean boolean26 = properties24.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        java.lang.Object obj35 = properties24.remove((java.lang.Object) properties31);
        java.lang.Object obj38 = properties31.setProperty("", "");
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties55 = new java.util.Properties(properties43);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        java.lang.Object obj57 = properties13.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties55);
        atomikosProperties14.setMaxActives((int) (short) -1);
        java.lang.String str60 = atomikosProperties14.getService();
        java.lang.String str61 = atomikosProperties14.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
    }

    @Test
    public void test8042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8042");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = properties2.clone();
        java.lang.Object obj6 = properties2.setProperty("tmlog", "");
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration8 = properties7.propertyNames();
        java.lang.Object obj9 = properties7.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxActives((int) '#');
        atomikosProperties10.setForceShutdownOnVmExit(true);
        java.lang.String str17 = atomikosProperties10.getLogBaseDir();
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setEnableLogging(true);
        boolean boolean26 = properties18.containsKey((java.lang.Object) true);
        java.lang.String str28 = properties18.getProperty("{}");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        properties33.clear();
        int int37 = properties33.size();
        java.util.Properties properties38 = new java.util.Properties(properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int40 = atomikosProperties39.getMaxActives();
        long long41 = atomikosProperties39.getMaxTimeout();
        java.util.Properties properties42 = atomikosProperties39.asProperties();
        java.util.Properties properties43 = atomikosProperties39.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        java.lang.Object obj52 = properties33.replace((java.lang.Object) atomikosProperties39, (java.lang.Object) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        java.lang.String str57 = atomikosProperties54.getService();
        boolean boolean58 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.Object obj59 = properties48.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        long long63 = atomikosProperties60.getDefaultJtaTimeout();
        java.lang.String str64 = atomikosProperties60.getTransactionManagerUniqueName();
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj67 = properties18.putIfAbsent((java.lang.Object) atomikosProperties54, (java.lang.Object) atomikosProperties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setMaxTimeout((long) (short) -1);
        long long75 = atomikosProperties68.getDefaultJtaTimeout();
        java.util.Properties properties76 = atomikosProperties68.asProperties();
        boolean boolean77 = properties7.remove((java.lang.Object) atomikosProperties60, (java.lang.Object) atomikosProperties68);
        atomikosProperties60.setMaxActives(50);
        java.lang.Object obj80 = properties2.remove((java.lang.Object) atomikosProperties60);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(wildcardEnumeration8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 10L + "'", long63 == 10L);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj80);
    }

    @Test
    public void test8043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8043");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        atomikosProperties10.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean20 = atomikosProperties10.isThreadedTwoPhaseCommit();
        atomikosProperties10.setMaxActives((int) (byte) 100);
        atomikosProperties10.setTransactionManagerUniqueName("");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test8044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8044");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("");
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        java.io.InputStream inputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.loadFromXML(inputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objCollection20);
    }

    @Test
    public void test8045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8045");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test8046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8046");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties4.elements();
        properties4.clear();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getMaxActives();
        long long22 = atomikosProperties20.getMaxTimeout();
        java.lang.String str23 = atomikosProperties20.getLogBaseDir();
        atomikosProperties20.setCheckpointInterval(100L);
        boolean boolean26 = properties19.equals((java.lang.Object) atomikosProperties20);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        boolean boolean34 = properties29.isEmpty();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        boolean boolean38 = properties29.containsKey((java.lang.Object) properties37);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet55 = properties43.stringPropertyNames();
        boolean boolean56 = properties37.containsKey((java.lang.Object) strSet55);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        properties61.clear();
        java.lang.String str66 = properties61.getProperty("");
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        boolean boolean75 = properties37.containsKey((java.lang.Object) properties61);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        boolean boolean80 = atomikosProperties77.isEnableLogging();
        java.lang.Object obj81 = properties37.put((java.lang.Object) '4', (java.lang.Object) boolean80);
        java.util.Properties properties82 = new java.util.Properties(properties37);
        boolean boolean83 = properties37.isEmpty();
        java.lang.Object obj84 = properties19.get((java.lang.Object) properties37);
        boolean boolean85 = properties4.containsKey((java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties4.elements();
        java.util.Enumeration<?> wildcardEnumeration88 = properties4.propertyNames();
        java.lang.String str91 = properties4.getProperty("{={tmlog=}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={}, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertNotNull(wildcardEnumeration88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={}, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str91, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={}, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test8047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8047");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        boolean boolean9 = properties7.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        java.lang.Object obj18 = properties7.remove((java.lang.Object) properties14);
        boolean boolean19 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.util.Properties properties21 = new java.util.Properties(properties14);
        boolean boolean22 = properties4.contains((java.lang.Object) properties21);
        java.lang.String str24 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.lang.Object> objSet25 = properties4.keySet();
        java.io.InputStream inputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(inputStream26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(objSet25);
    }

    @Test
    public void test8048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8048");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.lang.String str3 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test8049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8049");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int11 = atomikosProperties0.getMaxActives();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(2);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
    }

    @Test
    public void test8050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8050");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int4 = atomikosProperties3.getMaxActives();
        long long5 = atomikosProperties3.getMaxTimeout();
        java.lang.String str6 = atomikosProperties3.getLogBaseDir();
        atomikosProperties3.setCheckpointInterval(100L);
        boolean boolean9 = properties2.equals((java.lang.Object) atomikosProperties3);
        java.util.Properties properties10 = atomikosProperties3.asProperties();
        atomikosProperties3.setMaxTimeout(10000L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test8051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8051");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties1.setDefaultJtaTimeout((long) (byte) 10);
        long long4 = atomikosProperties1.getDefaultJtaTimeout();
        atomikosProperties1.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties1.isEnableLogging();
        java.lang.String str8 = atomikosProperties1.getLogBaseDir();
        java.util.Properties properties9 = atomikosProperties1.asProperties();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        boolean boolean25 = properties14.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj27 = properties14.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet28 = properties14.keySet();
        properties14.clear();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties34.entrySet();
        boolean boolean39 = properties14.equals((java.lang.Object) properties34);
        java.lang.Object obj40 = properties14.clone();
        java.lang.Object obj41 = properties0.getOrDefault((java.lang.Object) properties9, (java.lang.Object) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        long long45 = atomikosProperties42.getDefaultJtaTimeout();
        atomikosProperties42.setTransactionManagerUniqueName("");
        boolean boolean48 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setDefaultJtaTimeout((long) '4');
        boolean boolean51 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setForceShutdownOnVmExit(false);
        java.util.Properties properties54 = atomikosProperties42.asProperties();
        long long55 = atomikosProperties42.getCheckpointInterval();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        properties60.clear();
        int int64 = properties60.size();
        java.lang.Object obj67 = properties60.setProperty("hi!", "hi!");
        java.lang.Object obj70 = properties60.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties76.setCheckpointInterval((long) (byte) 0);
        atomikosProperties76.setTransactionManagerUniqueName("");
        java.util.Properties properties83 = atomikosProperties76.asProperties();
        java.lang.String str84 = atomikosProperties76.getLogBaseName();
        atomikosProperties76.setCheckpointInterval(100L);
        atomikosProperties76.setLogBaseName("");
        atomikosProperties76.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj91 = properties60.getOrDefault((java.lang.Object) atomikosProperties71, (java.lang.Object) (byte) 1);
        atomikosProperties71.setService("tmlog");
        long long94 = atomikosProperties71.getCheckpointInterval();
        java.lang.Object obj95 = properties0.put((java.lang.Object) long55, (java.lang.Object) atomikosProperties71);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet96 = properties0.entrySet();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 500L + "'", long55 == 500L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tmlog" + "'", str84, "tmlog");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (byte) 1 + "'", obj91, (byte) 1);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 500L + "'", long94 == 500L);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(objEntrySet96);
    }

    @Test
    public void test8052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8052");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog=}");
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test8053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8053");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setEnableLogging(true);
        long long8 = atomikosProperties0.getCheckpointInterval();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        long long10 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test8054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8054");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test8055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8055");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) -1);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test8056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8056");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) 50);
        long long10 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 50L + "'", long10 == 50L);
    }

    @Test
    public void test8057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8057");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test8058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8058");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        java.lang.Object obj21 = properties2.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties24.isEmpty();
        properties24.clear();
        java.util.Properties properties31 = new java.util.Properties(properties24);
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((long) (byte) 10);
        long long36 = atomikosProperties33.getDefaultJtaTimeout();
        atomikosProperties33.setTransactionManagerUniqueName("");
        boolean boolean39 = atomikosProperties33.isEnableLogging();
        atomikosProperties33.setDefaultJtaTimeout((long) '4');
        java.lang.String str42 = atomikosProperties33.getTransactionManagerUniqueName();
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties2.remove((java.lang.Object) properties45);
        java.lang.Object obj49 = properties45.clone();
        java.lang.String str50 = properties45.toString();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10L + "'", long36 == 10L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals(obj49.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str50, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test8059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8059");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties9.put((java.lang.Object) properties11, (java.lang.Object) (short) 1);
        properties11.clear();
        int int15 = properties11.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        boolean boolean26 = properties11.remove((java.lang.Object) properties20, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties20.elements();
        java.util.Properties properties28 = new java.util.Properties(properties20);
        java.util.Set<java.lang.Object> objSet29 = properties28.keySet();
        boolean boolean30 = properties4.contains((java.lang.Object) objSet29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        long long34 = atomikosProperties31.getDefaultJtaTimeout();
        atomikosProperties31.setTransactionManagerUniqueName("");
        boolean boolean37 = atomikosProperties31.isEnableLogging();
        java.lang.String str38 = atomikosProperties31.getLogBaseDir();
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        boolean boolean40 = atomikosProperties31.isEnableLogging();
        java.util.Properties properties41 = atomikosProperties31.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties42.setCheckpointInterval((long) (byte) 0);
        atomikosProperties42.setTransactionManagerUniqueName("");
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        java.util.Properties properties50 = atomikosProperties42.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.keys();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        boolean boolean67 = properties56.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet68 = properties56.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        long long72 = atomikosProperties69.getDefaultJtaTimeout();
        java.lang.Object obj73 = properties56.get((java.lang.Object) atomikosProperties69);
        atomikosProperties69.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties76 = atomikosProperties69.asProperties();
        java.util.Enumeration<?> wildcardEnumeration77 = properties76.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties76.entrySet();
        java.lang.Object obj79 = properties41.getOrDefault((java.lang.Object) objEnumeration51, (java.lang.Object) properties76);
        boolean boolean81 = properties41.containsValue((java.lang.Object) 50L);
        int int82 = properties41.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int84 = atomikosProperties83.getMaxActives();
        long long85 = atomikosProperties83.getMaxTimeout();
        java.util.Properties properties86 = atomikosProperties83.asProperties();
        atomikosProperties83.setService("hi!");
        atomikosProperties83.setMaxTimeout((long) 1);
        atomikosProperties83.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        boolean boolean93 = properties4.remove((java.lang.Object) properties41, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.io.PrintStream printStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.list(printStream94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10L + "'", long72 == 10L);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(wildcardEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals(obj79.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 50 + "'", int84 == 50);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 300000L + "'", long85 == 300000L);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test8060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8060");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxActives((int) '#');
        boolean boolean19 = atomikosProperties14.isSerialJtaTransactions();
        atomikosProperties14.setCheckpointInterval((long) (-1));
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        boolean boolean26 = properties24.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        java.lang.Object obj35 = properties24.remove((java.lang.Object) properties31);
        java.lang.Object obj38 = properties31.setProperty("", "");
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties55 = new java.util.Properties(properties43);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        java.lang.Object obj57 = properties13.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties55);
        java.util.Collection<java.lang.Object> objCollection58 = properties55.values();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objCollection58);
    }

    @Test
    public void test8061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8061");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setForceShutdownOnVmExit(true);
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties19);
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        int int37 = properties33.size();
        java.lang.Object obj39 = properties33.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        long long42 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties40.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties48.entrySet();
        java.lang.Object obj53 = properties43.remove((java.lang.Object) properties48);
        java.util.Enumeration<?> wildcardEnumeration54 = properties43.propertyNames();
        java.util.Properties properties55 = new java.util.Properties(properties43);
        boolean boolean56 = properties10.replace((java.lang.Object) objCollection28, (java.lang.Object) properties33, (java.lang.Object) properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.lang.Object obj60 = properties55.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.io.OutputStream outputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.save(outputStream61, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test8062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8062");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties14.setCheckpointInterval((long) (byte) 0);
        atomikosProperties14.setTransactionManagerUniqueName("");
        boolean boolean21 = atomikosProperties14.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties14.asProperties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setTransactionManagerUniqueName("");
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.String str39 = atomikosProperties31.getLogBaseName();
        java.util.Properties properties40 = atomikosProperties31.asProperties();
        java.lang.Object obj41 = properties22.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties31);
        java.util.Set<java.lang.Object> objSet42 = properties22.keySet();
        java.lang.String str43 = properties22.toString();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        boolean boolean48 = properties46.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        java.lang.Object obj57 = properties46.remove((java.lang.Object) properties53);
        boolean boolean58 = properties53.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties53.entrySet();
        java.util.Properties properties60 = new java.util.Properties(properties53);
        java.util.Set<java.lang.String> strSet61 = properties53.stringPropertyNames();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(objSet42);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str43, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(strSet61);
    }

    @Test
    public void test8063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8063");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("{[]={}}");
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test8064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8064");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean12 = atomikosProperties9.isForceShutdownOnVmExit();
        atomikosProperties9.setMaxActives(0);
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        boolean boolean16 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("{}");
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        boolean boolean20 = properties8.equals((java.lang.Object) atomikosProperties9);
        long long21 = atomikosProperties9.getMaxTimeout();
        atomikosProperties9.setForceShutdownOnVmExit(false);
        java.util.Properties properties24 = atomikosProperties9.asProperties();
        java.io.InputStream inputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.load(inputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(properties24);
    }

    @Test
    public void test8065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8065");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = atomikosProperties21.getTransactionManagerUniqueName();
        long long33 = atomikosProperties21.getDefaultJtaTimeout();
        atomikosProperties21.setDefaultJtaTimeout((long) 100);
        atomikosProperties21.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties21.setLogBaseName("{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
        long long40 = atomikosProperties21.getDefaultJtaTimeout();
        atomikosProperties21.setEnableLogging(false);
        int int43 = atomikosProperties21.getMaxActives();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 100L + "'", long40 == 100L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
    }

    @Test
    public void test8066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8066");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives((int) (short) -1);
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        long long18 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseDir("");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
    }

    @Test
    public void test8067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8067");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxActives(97);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test8068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8068");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        int int4 = atomikosProperties0.getMaxActives();
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test8069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8069");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties54.clear();
        int int58 = properties54.size();
        java.lang.Object obj61 = properties54.setProperty("hi!", "hi!");
        java.lang.Object obj64 = properties54.setProperty("tmlog", "tmlog");
        java.lang.Object obj65 = properties34.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties69 = atomikosProperties66.asProperties();
        boolean boolean70 = properties34.containsValue((java.lang.Object) properties69);
        java.util.Collection<java.lang.Object> objCollection71 = properties34.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties34.entrySet();
        int int73 = properties34.size();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
    }

    @Test
    public void test8070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8070");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long6 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.Object obj10 = properties7.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test8071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8071");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        atomikosProperties40.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str53 = atomikosProperties40.getLogBaseDir();
        boolean boolean54 = atomikosProperties40.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test8072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8072");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        atomikosProperties15.setService("tmlog");
        long long38 = atomikosProperties15.getDefaultJtaTimeout();
        boolean boolean39 = atomikosProperties15.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test8073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8073");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        java.lang.String str22 = properties20.getProperty("{=}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test8074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8074");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (byte) 0);
        atomikosProperties17.setEnableLogging(true);
        atomikosProperties17.setForceShutdownOnVmExit(false);
        java.lang.Object obj26 = properties4.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        long long30 = atomikosProperties27.getDefaultJtaTimeout();
        atomikosProperties27.setTransactionManagerUniqueName("");
        long long33 = atomikosProperties27.getDefaultJtaTimeout();
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setService("{}");
        atomikosProperties27.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj56 = properties43.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet57 = properties43.keySet();
        properties43.clear();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties63.entrySet();
        boolean boolean68 = properties43.equals((java.lang.Object) properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties63.elements();
        boolean boolean70 = properties4.remove((java.lang.Object) "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", (java.lang.Object) objEnumeration69);
        java.util.Properties properties71 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection72 = properties4.values();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10L + "'", long30 == 10L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection72);
    }

    @Test
    public void test8075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8075");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties22.setCheckpointInterval((long) (byte) 0);
        atomikosProperties22.setTransactionManagerUniqueName("");
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties39.setCheckpointInterval((long) (byte) 0);
        atomikosProperties39.setTransactionManagerUniqueName("");
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        java.lang.String str47 = atomikosProperties39.getLogBaseName();
        java.util.Properties properties48 = atomikosProperties39.asProperties();
        java.lang.Object obj49 = properties30.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties39);
        java.util.Properties properties50 = atomikosProperties39.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties50.entrySet();
        boolean boolean52 = properties13.equals((java.lang.Object) objEntrySet51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties13.elements();
        java.lang.String str55 = properties13.getProperty("{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test8076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8076");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxActives((int) (byte) 0);
        boolean boolean36 = properties26.containsValue((java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean42 = properties26.containsValue((java.lang.Object) atomikosProperties37);
        atomikosProperties37.setForceShutdownOnVmExit(true);
        java.lang.Object obj46 = properties13.putIfAbsent((java.lang.Object) atomikosProperties37, (java.lang.Object) (byte) 0);
        java.util.Properties properties47 = atomikosProperties37.asProperties();
        boolean boolean48 = atomikosProperties37.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test8077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8077");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        atomikosProperties0.setMaxActives(50);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setMaxActives(0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test8078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8078");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        boolean boolean19 = properties14.isEmpty();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean23 = properties14.containsKey((java.lang.Object) properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        properties30.clear();
        int int34 = properties30.size();
        java.util.Properties properties35 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getMaxActives();
        long long38 = atomikosProperties36.getMaxTimeout();
        java.util.Properties properties39 = atomikosProperties36.asProperties();
        java.util.Properties properties40 = atomikosProperties36.asProperties();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        java.lang.Object obj49 = properties30.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        java.lang.String str54 = atomikosProperties51.getService();
        boolean boolean55 = atomikosProperties51.isSerialJtaTransactions();
        java.lang.Object obj56 = properties45.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties51);
        boolean boolean57 = properties24.equals((java.lang.Object) properties45);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        boolean boolean63 = properties61.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        java.lang.Object obj72 = properties61.remove((java.lang.Object) properties68);
        java.lang.Object obj75 = properties68.setProperty("", "");
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Properties properties78 = new java.util.Properties(properties76);
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj82 = properties78.put((java.lang.Object) properties80, (java.lang.Object) (short) 1);
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        java.util.Properties properties86 = new java.util.Properties(properties84);
        java.util.Properties properties87 = null;
        java.util.Properties properties88 = new java.util.Properties(properties87);
        java.lang.Object obj90 = properties86.put((java.lang.Object) properties88, (java.lang.Object) (short) 1);
        boolean boolean91 = properties80.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties92 = new java.util.Properties(properties80);
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties92);
        java.lang.Object obj96 = properties92.setProperty("hi!", "hi!");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties92);
        int int98 = properties8.size();
        java.util.Properties properties99 = new java.util.Properties(properties8);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 50 + "'", int37 == 50);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test8079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8079");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getService();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test8080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8080");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        properties28.clear();
        int int32 = properties28.size();
        java.util.Properties properties33 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int35 = atomikosProperties34.getMaxActives();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = atomikosProperties34.asProperties();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        java.lang.Object obj47 = properties28.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        java.lang.String str52 = atomikosProperties49.getService();
        boolean boolean53 = atomikosProperties49.isSerialJtaTransactions();
        java.lang.Object obj54 = properties43.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties49);
        boolean boolean55 = properties22.equals((java.lang.Object) properties43);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        boolean boolean57 = properties43.isEmpty();
        java.util.Collection<java.lang.Object> objCollection58 = properties43.values();
        java.io.OutputStream outputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties43.storeToXML(outputStream59, "{{}={{}=1}, []={}}", "{hi!=hi!, {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objCollection58);
    }

    @Test
    public void test8081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8081");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout(0L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test8082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8082");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        boolean boolean12 = properties7.isEmpty();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean16 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties17.clone();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        java.lang.Object obj36 = properties22.remove((java.lang.Object) properties35);
        java.lang.Object obj37 = properties17.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties17.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean40 = atomikosProperties39.isForceShutdownOnVmExit();
        java.util.Properties properties41 = atomikosProperties39.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        properties46.clear();
        int int50 = properties46.size();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        java.util.Properties properties59 = new java.util.Properties(properties55);
        boolean boolean61 = properties46.remove((java.lang.Object) properties55, (java.lang.Object) 10.0f);
        boolean boolean62 = properties41.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setCheckpointInterval((long) (byte) 0);
        atomikosProperties64.setEnableLogging(true);
        java.lang.Object obj71 = properties41.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties72 = new java.util.Properties(properties41);
        boolean boolean73 = properties17.containsKey((java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((long) (byte) 10);
        long long77 = atomikosProperties74.getDefaultJtaTimeout();
        atomikosProperties74.setTransactionManagerUniqueName("hi!");
        atomikosProperties74.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties74.setService("");
        boolean boolean84 = properties4.remove((java.lang.Object) properties72, (java.lang.Object) "");
        java.util.Set<java.lang.String> strSet85 = properties72.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection86 = properties72.values();
        java.util.Properties properties87 = new java.util.Properties(properties72);
        java.io.OutputStream outputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.storeToXML(outputStream88, "{={tmlog=}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNotNull(objCollection86);
    }

    @Test
    public void test8083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8083");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxActives((int) '#');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        java.lang.Object obj26 = properties17.remove((java.lang.Object) atomikosProperties18);
        java.util.Collection<java.lang.Object> objCollection27 = properties17.values();
        boolean boolean28 = properties8.contains((java.lang.Object) properties17);
        java.util.Collection<java.lang.Object> objCollection29 = properties8.values();
        java.util.Collection<java.lang.Object> objCollection30 = properties8.values();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objCollection30);
    }

    @Test
    public void test8084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8084");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        properties16.clear();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties(properties16);
        java.util.Collection<java.lang.Object> objCollection22 = properties16.values();
        java.lang.String str24 = properties16.getProperty("hi!");
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration26 = properties25.propertyNames();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Properties properties35 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.Object obj37 = properties25.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration36);
        java.lang.Object obj38 = properties16.remove((java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties16.elements();
        java.lang.Object obj40 = properties11.get((java.lang.Object) properties16);
        java.io.PrintStream printStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.list(printStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test8085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8085");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        atomikosProperties15.setService("tmlog");
        atomikosProperties15.setMaxActives((int) '4');
        atomikosProperties15.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties15.setSerialJtaTransactions(false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
    }

    @Test
    public void test8086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8086");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout(1L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test8087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8087");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        boolean boolean12 = properties4.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration13 = properties4.propertyNames();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        properties18.clear();
        int int22 = properties18.size();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = new java.util.Properties(properties27);
        java.util.Properties properties31 = new java.util.Properties(properties27);
        boolean boolean33 = properties18.remove((java.lang.Object) properties27, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties27.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties27.keys();
        java.lang.Object obj36 = properties27.clone();
        boolean boolean37 = properties4.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection38 = properties27.values();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
    }

    @Test
    public void test8088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8088");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str3 = atomikosProperties0.getService();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("{}");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxActives(0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        boolean boolean12 = properties11.isEmpty();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test8089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8089");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream14, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test8090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8090");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxTimeout((long) 50);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        java.lang.String str21 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test8091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8091");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (byte) 0);
        atomikosProperties17.setEnableLogging(true);
        atomikosProperties17.setForceShutdownOnVmExit(false);
        boolean boolean26 = atomikosProperties17.isThreadedTwoPhaseCommit();
        atomikosProperties17.setForceShutdownOnVmExit(false);
        atomikosProperties17.setMaxActives((int) (short) -1);
        boolean boolean32 = properties16.remove((java.lang.Object) atomikosProperties17, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties33 = atomikosProperties17.asProperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
    }

    @Test
    public void test8092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8092");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Properties properties18 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int20 = atomikosProperties19.getMaxActives();
        long long21 = atomikosProperties19.getMaxTimeout();
        java.util.Properties properties22 = atomikosProperties19.asProperties();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = new java.util.Properties(properties27);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties27.entrySet();
        java.lang.Object obj32 = properties22.remove((java.lang.Object) properties27);
        java.util.Enumeration<?> wildcardEnumeration33 = properties27.propertyNames();
        int int34 = properties27.size();
        java.util.Properties properties35 = new java.util.Properties(properties27);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        boolean boolean43 = properties38.isEmpty();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        boolean boolean47 = properties38.containsKey((java.lang.Object) properties46);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        boolean boolean63 = properties52.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet64 = properties52.stringPropertyNames();
        boolean boolean65 = properties46.containsKey((java.lang.Object) strSet64);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        properties70.clear();
        java.lang.String str75 = properties70.getProperty("");
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Properties properties78 = new java.util.Properties(properties76);
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj82 = properties78.put((java.lang.Object) properties80, (java.lang.Object) (short) 1);
        properties70.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        boolean boolean84 = properties46.containsKey((java.lang.Object) properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setThreadedTwoPhaseCommit(true);
        boolean boolean89 = atomikosProperties86.isEnableLogging();
        java.lang.Object obj90 = properties46.put((java.lang.Object) '4', (java.lang.Object) boolean89);
        java.util.Properties properties91 = new java.util.Properties(properties46);
        int int92 = properties91.size();
        java.util.Enumeration<java.lang.Object> objEnumeration93 = properties91.keys();
        boolean boolean94 = properties4.remove((java.lang.Object) properties27, (java.lang.Object) properties91);
        java.util.Set<java.lang.String> strSet95 = properties27.stringPropertyNames();
        java.io.InputStream inputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties27.load(inputStream96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(wildcardEnumeration33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(objEnumeration93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strSet95);
    }

    @Test
    public void test8093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8093");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = properties2.clone();
        java.lang.Object obj6 = properties2.setProperty("tmlog", "");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties9.put((java.lang.Object) properties11, (java.lang.Object) (short) 1);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties11.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet23 = properties11.stringPropertyNames();
        java.lang.Object obj24 = properties11.clone();
        boolean boolean25 = properties2.equals(obj24);
        java.util.Properties properties26 = new java.util.Properties(properties2);
        java.lang.String str28 = properties2.getProperty("");
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test8094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8094");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Set<java.lang.Object> objSet28 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setCheckpointInterval((long) (byte) 0);
        atomikosProperties29.setTransactionManagerUniqueName("");
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        java.util.Properties properties38 = atomikosProperties29.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        long long44 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setTransactionManagerUniqueName("");
        atomikosProperties41.setCheckpointInterval(100L);
        boolean boolean49 = properties38.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties41);
        java.util.Properties properties50 = new java.util.Properties(properties38);
        java.util.Properties properties51 = new java.util.Properties(properties38);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties38.entrySet();
        boolean boolean53 = properties8.containsValue((java.lang.Object) objEntrySet52);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        boolean boolean61 = properties56.isEmpty();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        boolean boolean65 = properties56.containsKey((java.lang.Object) properties64);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Properties properties76 = new java.util.Properties(properties74);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.lang.Object obj80 = properties76.put((java.lang.Object) properties78, (java.lang.Object) (short) 1);
        boolean boolean81 = properties70.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet82 = properties70.stringPropertyNames();
        boolean boolean83 = properties64.containsKey((java.lang.Object) strSet82);
        properties64.clear();
        int int85 = properties64.size();
        java.util.Set<java.lang.String> strSet86 = properties64.stringPropertyNames();
        properties64.clear();
        boolean boolean88 = properties8.equals((java.lang.Object) properties64);
        int int89 = properties64.size();
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties64.keys();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10L + "'", long44 == 10L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(objEnumeration90);
    }

    @Test
    public void test8095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8095");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        boolean boolean43 = properties4.isEmpty();
        int int44 = properties4.size();
        java.util.Enumeration<?> wildcardEnumeration45 = properties4.propertyNames();
        java.io.Writer writer46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(writer46, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration45);
    }

    @Test
    public void test8096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8096");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) '4');
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
    }

    @Test
    public void test8097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8097");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) '#');
        atomikosProperties9.setEnableLogging(true);
        boolean boolean16 = properties8.containsKey((java.lang.Object) true);
        java.lang.String str18 = properties8.getProperty("{}");
        java.util.Enumeration<?> wildcardEnumeration19 = properties8.propertyNames();
        java.util.Collection<java.lang.Object> objCollection20 = properties8.values();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
        org.junit.Assert.assertNotNull(objCollection20);
    }

    @Test
    public void test8098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8098");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet33 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxActives((int) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        atomikosProperties34.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties21.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxActives((int) '#');
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        java.lang.Object obj60 = properties51.remove((java.lang.Object) atomikosProperties52);
        java.util.Collection<java.lang.Object> objCollection61 = properties51.values();
        boolean boolean62 = properties4.remove((java.lang.Object) false, (java.lang.Object) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int64 = atomikosProperties63.getMaxActives();
        long long65 = atomikosProperties63.getMaxTimeout();
        java.lang.String str66 = atomikosProperties63.getLogBaseDir();
        atomikosProperties63.setCheckpointInterval(100L);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        java.util.Properties properties76 = new java.util.Properties(properties73);
        int int77 = properties73.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setDefaultJtaTimeout((long) (byte) 10);
        long long81 = atomikosProperties78.getDefaultJtaTimeout();
        atomikosProperties78.setTransactionManagerUniqueName("");
        java.lang.String str84 = atomikosProperties78.getTransactionManagerUniqueName();
        boolean boolean85 = properties51.replace((java.lang.Object) atomikosProperties63, (java.lang.Object) int77, (java.lang.Object) atomikosProperties78);
        java.util.Properties properties86 = atomikosProperties78.asProperties();
        java.util.Properties properties87 = atomikosProperties78.asProperties();
        java.util.Collection<java.lang.Object> objCollection88 = properties87.values();
        java.util.Properties properties89 = new java.util.Properties(properties87);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertNotNull(properties87);
        org.junit.Assert.assertNotNull(objCollection88);
    }

    @Test
    public void test8099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8099");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.util.Set<java.lang.Object> objSet68 = properties9.keySet();
        java.util.Set<java.lang.String> strSet69 = properties9.stringPropertyNames();
        java.lang.String str71 = properties9.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test8100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8100");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        properties9.clear();
        int int13 = properties9.size();
        java.lang.Object obj16 = properties9.setProperty("hi!", "hi!");
        java.lang.Object obj19 = properties9.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setTransactionManagerUniqueName("");
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        java.lang.String str33 = atomikosProperties25.getLogBaseName();
        atomikosProperties25.setCheckpointInterval(100L);
        atomikosProperties25.setLogBaseName("");
        atomikosProperties25.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj40 = properties9.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) (byte) 1);
        java.lang.Object obj41 = properties3.remove((java.lang.Object) properties9);
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.save(outputStream42, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 1 + "'", obj40, (byte) 1);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test8101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8101");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.keys();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties18.setCheckpointInterval((long) (byte) 0);
        atomikosProperties18.setTransactionManagerUniqueName("");
        java.util.Properties properties25 = atomikosProperties18.asProperties();
        java.lang.Object obj26 = properties12.remove((java.lang.Object) properties25);
        boolean boolean27 = properties8.equals((java.lang.Object) properties25);
        java.util.Enumeration<?> wildcardEnumeration28 = properties8.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration29 = properties8.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
    }

    @Test
    public void test8102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8102");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        boolean boolean50 = properties34.contains((java.lang.Object) "hi!");
        properties34.clear();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        boolean boolean56 = properties54.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        java.lang.Object obj65 = properties54.remove((java.lang.Object) properties61);
        boolean boolean66 = properties61.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties61.entrySet();
        boolean boolean68 = properties34.equals((java.lang.Object) properties61);
        boolean boolean69 = properties61.isEmpty();
        java.io.OutputStream outputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties61.save(outputStream70, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test8103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8103");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Properties properties24 = atomikosProperties10.asProperties();
        atomikosProperties10.setCheckpointInterval((long) 32);
        long long27 = atomikosProperties10.getCheckpointInterval();
        long long28 = atomikosProperties10.getCheckpointInterval();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setCheckpointInterval((long) '4');
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 32L + "'", long27 == 32L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
    }

    @Test
    public void test8104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8104");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) 1);
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10L + "'", long16 == 10L);
    }

    @Test
    public void test8105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8105");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long12 = atomikosProperties0.getCheckpointInterval();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test8106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8106");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        long long4 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 300000L + "'", long4 == 300000L);
    }

    @Test
    public void test8107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8107");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties18.getProperty("hi!");
        boolean boolean21 = properties10.containsKey((java.lang.Object) properties18);
        java.util.Properties properties22 = new java.util.Properties(properties18);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        java.util.Properties properties32 = atomikosProperties24.asProperties();
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        boolean boolean41 = properties36.isEmpty();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        boolean boolean45 = properties36.containsKey((java.lang.Object) properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        properties52.clear();
        int int56 = properties52.size();
        java.util.Properties properties57 = new java.util.Properties(properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int59 = atomikosProperties58.getMaxActives();
        long long60 = atomikosProperties58.getMaxTimeout();
        java.util.Properties properties61 = atomikosProperties58.asProperties();
        java.util.Properties properties62 = atomikosProperties58.asProperties();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        java.lang.Object obj71 = properties52.replace((java.lang.Object) atomikosProperties58, (java.lang.Object) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        java.lang.String str76 = atomikosProperties73.getService();
        boolean boolean77 = atomikosProperties73.isSerialJtaTransactions();
        java.lang.Object obj78 = properties67.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties73);
        boolean boolean79 = properties46.equals((java.lang.Object) properties67);
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties67.keys();
        java.lang.Object obj82 = properties23.remove((java.lang.Object) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setDefaultJtaTimeout((long) (byte) 10);
        long long86 = atomikosProperties83.getDefaultJtaTimeout();
        atomikosProperties83.setTransactionManagerUniqueName("");
        boolean boolean89 = atomikosProperties83.isEnableLogging();
        java.lang.String str90 = atomikosProperties83.getLogBaseDir();
        java.util.Properties properties91 = atomikosProperties83.asProperties();
        java.util.Properties properties92 = new java.util.Properties();
        java.lang.Object obj93 = properties91.remove((java.lang.Object) properties92);
        java.lang.Object obj94 = properties91.clone();
        boolean boolean95 = properties23.contains((java.lang.Object) properties91);
        java.io.OutputStream outputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties91.storeToXML(outputStream96, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 10L + "'", long86 == 10L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(properties91);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
// flaky:         org.junit.Assert.assertEquals(obj94.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test8108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8108");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long21 = atomikosProperties0.getCheckpointInterval();
        long long22 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
    }

    @Test
    public void test8109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8109");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties28.entrySet();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        java.lang.Object obj41 = properties28.get((java.lang.Object) atomikosProperties34);
        java.util.Properties properties42 = atomikosProperties34.asProperties();
        java.util.Set<java.lang.Object> objSet43 = properties42.keySet();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties48.clear();
        java.lang.String str53 = properties48.getProperty("");
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties48.keys();
        java.util.Set<java.lang.Object> objSet63 = properties48.keySet();
        java.lang.Object obj64 = properties19.putIfAbsent((java.lang.Object) properties42, (java.lang.Object) objSet63);
        java.lang.String str66 = properties42.getProperty("{={tmlog=}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test8110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8110");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean46 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        java.lang.Class<?> wildcardClass57 = atomikosProperties49.getClass();
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties49);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        boolean boolean74 = properties63.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties63.elements();
        java.util.Properties properties76 = new java.util.Properties(properties63);
        java.lang.Object obj78 = properties4.getOrDefault((java.lang.Object) properties76, (java.lang.Object) 500L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        boolean boolean82 = atomikosProperties79.isEnableLogging();
        boolean boolean83 = atomikosProperties79.isEnableLogging();
        java.util.Properties properties84 = atomikosProperties79.asProperties();
        boolean boolean85 = properties76.containsKey((java.lang.Object) properties84);
        java.util.Properties properties86 = new java.util.Properties(properties76);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet87 = properties76.entrySet();
        java.io.InputStream inputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties76.load(inputStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 500L + "'", obj78, 500L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objEntrySet87);
    }

    @Test
    public void test8111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8111");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int11 = atomikosProperties0.getMaxActives();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        properties17.clear();
        int int21 = properties17.size();
        java.util.Properties properties22 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int24 = atomikosProperties23.getMaxActives();
        long long25 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties26 = atomikosProperties23.asProperties();
        java.util.Properties properties27 = atomikosProperties23.asProperties();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        java.lang.Object obj36 = properties17.replace((java.lang.Object) atomikosProperties23, (java.lang.Object) properties32);
        atomikosProperties23.setLogBaseName("");
        java.lang.String str39 = atomikosProperties23.getTransactionManagerUniqueName();
        atomikosProperties23.setMaxActives(1);
        java.util.Properties properties42 = atomikosProperties23.asProperties();
        java.lang.Object obj45 = properties42.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties50.clear();
        int int54 = properties50.size();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        java.util.Properties properties62 = new java.util.Properties(properties59);
        java.util.Properties properties63 = new java.util.Properties(properties59);
        boolean boolean65 = properties50.remove((java.lang.Object) properties59, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties59.elements();
        java.util.Properties properties67 = new java.util.Properties(properties59);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.lang.Object obj71 = properties70.clone();
        java.lang.Object obj74 = properties70.setProperty("tmlog", "");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties70.elements();
        java.util.Properties properties77 = new java.util.Properties(properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        boolean boolean81 = atomikosProperties78.isEnableLogging();
        atomikosProperties78.setCheckpointInterval((long) 35);
        java.util.Properties properties84 = atomikosProperties78.asProperties();
        java.lang.Object obj85 = properties42.getOrDefault((java.lang.Object) properties77, (java.lang.Object) atomikosProperties78);
        java.lang.Object obj86 = properties12.get((java.lang.Object) properties77);
        java.io.Writer writer87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties77.store(writer87, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{}");
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test8112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8112");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test8113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8113");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean26 = atomikosProperties23.isForceShutdownOnVmExit();
        atomikosProperties23.setMaxActives(0);
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) 0);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties37.entrySet();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        properties47.clear();
        int int51 = properties47.size();
        java.util.Properties properties52 = new java.util.Properties(properties47);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        properties57.clear();
        java.lang.String str62 = properties57.getProperty("");
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.lang.Object obj71 = properties37.put((java.lang.Object) properties47, (java.lang.Object) properties65);
        java.util.Collection<java.lang.Object> objCollection72 = properties65.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties65.entrySet();
        boolean boolean74 = properties65.isEmpty();
        java.lang.Object obj75 = properties22.replace((java.lang.Object) 0, (java.lang.Object) properties65);
        java.lang.String str76 = properties22.toString();
        java.io.InputStream inputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.loadFromXML(inputStream77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{}" + "'", str76, "{}");
    }

    @Test
    public void test8114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8114");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test8115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8115");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        boolean boolean39 = properties37.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        java.lang.Object obj48 = properties37.remove((java.lang.Object) properties44);
        boolean boolean49 = properties44.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties44.entrySet();
        java.util.Properties properties51 = new java.util.Properties(properties44);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        java.util.Properties properties59 = new java.util.Properties(properties56);
        java.util.Properties properties60 = new java.util.Properties(properties56);
        java.util.Set<java.lang.Object> objSet61 = properties60.keySet();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.lang.Object obj68 = properties64.put((java.lang.Object) properties66, (java.lang.Object) (short) 1);
        properties66.clear();
        int int70 = properties66.size();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        java.util.Properties properties79 = new java.util.Properties(properties75);
        boolean boolean81 = properties66.remove((java.lang.Object) properties75, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties75.elements();
        java.util.Properties properties83 = new java.util.Properties(properties75);
        java.lang.Object obj84 = properties51.putIfAbsent((java.lang.Object) objSet61, (java.lang.Object) properties75);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.String str87 = properties9.getProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Set<java.lang.String> strSet88 = properties9.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(strSet88);
    }

    @Test
    public void test8116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8116");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        java.lang.String str18 = atomikosProperties0.getLogBaseName();
        int int19 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
    }

    @Test
    public void test8117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8117");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties9.put((java.lang.Object) properties11, (java.lang.Object) (short) 1);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties11.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet23 = properties11.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties11.elements();
        java.lang.String str25 = properties11.toString();
        boolean boolean26 = properties11.isEmpty();
        boolean boolean27 = properties6.containsValue((java.lang.Object) boolean26);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties32.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        long long40 = atomikosProperties37.getDefaultJtaTimeout();
        atomikosProperties37.setTransactionManagerUniqueName("");
        boolean boolean43 = atomikosProperties37.isEnableLogging();
        boolean boolean44 = properties32.containsKey((java.lang.Object) boolean43);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties32.containsKey((java.lang.Object) objEnumeration52);
        boolean boolean54 = properties6.containsValue((java.lang.Object) objEnumeration52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        boolean boolean70 = properties59.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet71 = properties59.stringPropertyNames();
        boolean boolean73 = properties59.containsValue((java.lang.Object) 50);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties59.entrySet();
        java.util.Enumeration<?> wildcardEnumeration75 = properties59.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties76.setCheckpointInterval((long) (byte) 0);
        atomikosProperties76.setEnableLogging(true);
        java.lang.String str83 = atomikosProperties76.getLogBaseName();
        atomikosProperties76.setCheckpointInterval((long) ' ');
        java.util.Properties properties86 = atomikosProperties76.asProperties();
        java.lang.String str87 = atomikosProperties76.getTransactionManagerUniqueName();
        long long88 = atomikosProperties76.getDefaultJtaTimeout();
        java.util.Properties properties89 = atomikosProperties76.asProperties();
        java.util.Properties properties90 = atomikosProperties76.asProperties();
        java.lang.Object obj91 = properties6.put((java.lang.Object) wildcardEnumeration75, (java.lang.Object) properties90);
        java.util.Collection<java.lang.Object> objCollection92 = properties90.values();
        java.io.Writer writer93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties90.store(writer93, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10L + "'", long40 == 10L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tmlog" + "'", str83, "tmlog");
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10L + "'", long88 == 10L);
        org.junit.Assert.assertNotNull(properties89);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(objCollection92);
    }

    @Test
    public void test8118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8118");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        java.lang.String str5 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str9 = atomikosProperties0.getService();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test8119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8119");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties3);
    }

    @Test
    public void test8120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8120");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
    }

    @Test
    public void test8121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8121");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseName("{tmlog=}");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives(100);
        boolean boolean17 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test8122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8122");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test8123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8123");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties13.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet25 = properties13.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties13.elements();
        java.lang.String str27 = properties13.toString();
        java.lang.String str28 = properties13.toString();
        java.lang.String str29 = properties13.toString();
        java.util.Properties properties30 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        long long34 = atomikosProperties31.getDefaultJtaTimeout();
        atomikosProperties31.setTransactionManagerUniqueName("");
        boolean boolean37 = atomikosProperties31.isEnableLogging();
        java.lang.String str38 = atomikosProperties31.getLogBaseDir();
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.lang.Object obj70 = properties44.clone();
        java.lang.Object obj71 = properties30.getOrDefault((java.lang.Object) properties39, (java.lang.Object) properties44);
        boolean boolean72 = properties13.contains((java.lang.Object) properties39);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Properties properties75 = new java.util.Properties(properties73);
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.lang.Object obj79 = properties75.put((java.lang.Object) properties77, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        atomikosProperties80.setMaxActives((int) (byte) 0);
        boolean boolean85 = properties75.containsValue((java.lang.Object) atomikosProperties80);
        java.lang.Object obj86 = properties13.remove((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties75.keys();
        boolean boolean88 = properties8.contains((java.lang.Object) properties75);
        properties75.clear();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{}");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test8124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8124");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (byte) 0);
        boolean boolean22 = properties12.containsValue((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) 9);
        atomikosProperties17.setEnableLogging(false);
        java.lang.Object obj27 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = new java.util.Properties(properties4);
        java.lang.Object obj31 = properties4.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "{tmlog=}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test8125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8125");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test8126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8126");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.lang.String str18 = properties4.toString();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties21.isEmpty();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean30 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties35.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet47 = properties35.stringPropertyNames();
        boolean boolean48 = properties29.containsKey((java.lang.Object) strSet47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        properties53.clear();
        java.lang.String str58 = properties53.getProperty("");
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        boolean boolean67 = properties29.containsKey((java.lang.Object) properties53);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        properties73.clear();
        int int77 = properties73.size();
        java.lang.Object obj80 = properties73.setProperty("hi!", "hi!");
        java.lang.Object obj83 = properties73.setProperty("tmlog", "tmlog");
        java.lang.Object obj84 = properties53.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int86 = atomikosProperties85.getMaxActives();
        long long87 = atomikosProperties85.getMaxTimeout();
        java.util.Properties properties88 = atomikosProperties85.asProperties();
        boolean boolean89 = properties53.containsValue((java.lang.Object) properties88);
        java.lang.Object obj90 = properties4.remove((java.lang.Object) properties88);
        java.util.Properties properties91 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties92 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean93 = atomikosProperties92.isForceShutdownOnVmExit();
        java.util.Properties properties94 = atomikosProperties92.asProperties();
        java.util.Properties properties95 = new java.util.Properties(properties94);
        boolean boolean96 = properties91.containsValue((java.lang.Object) properties95);
        java.util.Properties properties97 = new java.util.Properties(properties91);
        java.io.PrintWriter printWriter98 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties97.list(printWriter98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 50 + "'", int86 == 50);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 300000L + "'", long87 == 300000L);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(properties94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test8127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8127");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties24 = new java.util.Properties(properties2);
        java.lang.String str26 = properties24.getProperty("");
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        properties24.clear();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.save(outputStream29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test8128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8128");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        long long22 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        atomikosProperties19.setLogBaseName("tmlog");
        atomikosProperties19.setCheckpointInterval(300000L);
        long long29 = atomikosProperties19.getMaxTimeout();
        boolean boolean30 = properties18.containsKey((java.lang.Object) long29);
        java.util.Properties properties31 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setEnableLogging(true);
        boolean boolean39 = atomikosProperties32.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = atomikosProperties32.asProperties();
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.lang.Object obj42 = properties31.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getMaxActives();
        long long45 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties46 = atomikosProperties43.asProperties();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        java.util.Properties properties54 = new java.util.Properties(properties51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties51.entrySet();
        java.lang.Object obj56 = properties46.remove((java.lang.Object) properties51);
        java.util.Enumeration<?> wildcardEnumeration57 = properties51.propertyNames();
        int int58 = properties51.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        long long62 = atomikosProperties59.getDefaultJtaTimeout();
        java.lang.String str63 = atomikosProperties59.getService();
        java.lang.String str64 = atomikosProperties59.getLogBaseName();
        atomikosProperties59.setSerialJtaTransactions(false);
        java.util.Properties properties67 = atomikosProperties59.asProperties();
        java.lang.String str68 = atomikosProperties59.getTransactionManagerUniqueName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = properties31.put((java.lang.Object) int58, (java.lang.Object) str68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(obj42);
// flaky:         org.junit.Assert.assertEquals(obj42.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(wildcardEnumeration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10L + "'", long62 == 10L);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test8129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8129");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setService("{}");
        java.util.Properties properties35 = atomikosProperties21.asProperties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        boolean boolean52 = properties41.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties41.elements();
        java.util.Properties properties54 = new java.util.Properties(properties41);
        java.lang.Object obj55 = properties36.remove((java.lang.Object) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties54.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
    }

    @Test
    public void test8130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8130");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<?> wildcardEnumeration12 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        java.lang.String str21 = atomikosProperties13.getLogBaseName();
        java.util.Properties properties22 = atomikosProperties13.asProperties();
        atomikosProperties13.setEnableLogging(true);
        boolean boolean25 = atomikosProperties13.isSerialJtaTransactions();
        java.lang.Object obj26 = properties4.get((java.lang.Object) boolean25);
        java.util.Properties properties27 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties27.entrySet();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        boolean boolean33 = properties31.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        java.lang.Object obj42 = properties31.remove((java.lang.Object) properties38);
        java.lang.Object obj45 = properties38.setProperty("", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties46.setCheckpointInterval((long) (byte) 0);
        atomikosProperties46.setTransactionManagerUniqueName("");
        boolean boolean53 = atomikosProperties46.isEnableLogging();
        java.util.Properties properties54 = atomikosProperties46.asProperties();
        java.util.Properties properties55 = new java.util.Properties(properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties63.setCheckpointInterval((long) (byte) 0);
        atomikosProperties63.setTransactionManagerUniqueName("");
        java.util.Properties properties70 = atomikosProperties63.asProperties();
        java.lang.String str71 = atomikosProperties63.getLogBaseName();
        java.util.Properties properties72 = atomikosProperties63.asProperties();
        java.lang.Object obj73 = properties54.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties63);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        boolean boolean75 = properties27.containsValue((java.lang.Object) properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setDefaultJtaTimeout((long) (byte) 10);
        long long79 = atomikosProperties76.getDefaultJtaTimeout();
        atomikosProperties76.setTransactionManagerUniqueName("");
        boolean boolean82 = atomikosProperties76.isEnableLogging();
        java.lang.String str83 = atomikosProperties76.getLogBaseDir();
        java.util.Properties properties84 = atomikosProperties76.asProperties();
        atomikosProperties76.setForceShutdownOnVmExit(true);
        long long87 = atomikosProperties76.getCheckpointInterval();
        long long88 = atomikosProperties76.getCheckpointInterval();
        atomikosProperties76.setMaxTimeout(0L);
        java.lang.Object obj91 = properties54.get((java.lang.Object) atomikosProperties76);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 10L + "'", long79 == 10L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 500L + "'", long87 == 500L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 500L + "'", long88 == 500L);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test8131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8131");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getCheckpointInterval();
        int int8 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test8132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8132");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test8133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8133");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = atomikosProperties21.getTransactionManagerUniqueName();
        long long33 = atomikosProperties21.getDefaultJtaTimeout();
        atomikosProperties21.setDefaultJtaTimeout((long) 100);
        atomikosProperties21.setCheckpointInterval(32L);
        boolean boolean38 = atomikosProperties21.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test8134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8134");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        int int13 = atomikosProperties0.getMaxActives();
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        long long15 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxTimeout((long) 97);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
    }

    @Test
    public void test8135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8135");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        java.util.Collection<java.lang.Object> objCollection21 = properties9.values();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        java.lang.String str30 = properties26.toString();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        properties35.clear();
        java.lang.String str40 = properties35.getProperty("");
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties35.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties35.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setEnableLogging(true);
        java.lang.String str58 = atomikosProperties51.getLogBaseName();
        atomikosProperties51.setMaxActives((int) (short) 100);
        boolean boolean61 = properties26.remove((java.lang.Object) properties35, (java.lang.Object) atomikosProperties51);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        long long64 = atomikosProperties51.getDefaultJtaTimeout();
        java.util.Properties properties65 = atomikosProperties51.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.lang.Object obj67 = properties9.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        long long72 = atomikosProperties69.getDefaultJtaTimeout();
        atomikosProperties69.setTransactionManagerUniqueName("");
        boolean boolean75 = atomikosProperties69.isEnableLogging();
        java.lang.String str76 = atomikosProperties69.getLogBaseDir();
        java.util.Properties properties77 = atomikosProperties69.asProperties();
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj79 = properties77.remove((java.lang.Object) properties78);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        boolean boolean83 = atomikosProperties80.isEnableLogging();
        atomikosProperties80.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.lang.Object obj86 = properties78.get((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.io.InputStream inputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10L + "'", long64 == 10L);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNotNull(obj67);
// flaky:         org.junit.Assert.assertEquals(obj67.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10L + "'", long72 == 10L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test8136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8136");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties1.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties1.setCheckpointInterval((long) (byte) 0);
        atomikosProperties1.setTransactionManagerUniqueName("");
        java.util.Properties properties8 = atomikosProperties1.asProperties();
        java.util.Properties properties9 = atomikosProperties1.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.util.Properties properties19 = new java.util.Properties(properties15);
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = new java.util.Properties(properties19);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        boolean boolean30 = properties25.isEmpty();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        boolean boolean34 = properties25.containsKey((java.lang.Object) properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        int int45 = properties41.size();
        java.util.Properties properties46 = new java.util.Properties(properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int48 = atomikosProperties47.getMaxActives();
        long long49 = atomikosProperties47.getMaxTimeout();
        java.util.Properties properties50 = atomikosProperties47.asProperties();
        java.util.Properties properties51 = atomikosProperties47.asProperties();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        java.lang.Object obj60 = properties41.replace((java.lang.Object) atomikosProperties47, (java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        java.lang.String str65 = atomikosProperties62.getService();
        boolean boolean66 = atomikosProperties62.isSerialJtaTransactions();
        java.lang.Object obj67 = properties56.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties62);
        boolean boolean68 = properties35.equals((java.lang.Object) properties56);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.lang.Object obj70 = properties0.put((java.lang.Object) properties10, (java.lang.Object) properties19);
        java.lang.Object obj71 = properties0.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties0.keys();
        java.util.Collection<java.lang.Object> objCollection73 = properties0.values();
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 300000L + "'", long49 == 300000L);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{{}={}}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{{}={}}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{{}={}}");
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objCollection73);
    }

    @Test
    public void test8137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8137");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setMaxActives(1);
        atomikosProperties0.setLogBaseDir("hi!");
        atomikosProperties0.setMaxTimeout((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("{hi!=100}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
    }

    @Test
    public void test8138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8138");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test8139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8139");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test8140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8140");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        java.util.Collection<java.lang.Object> objCollection25 = properties22.values();
        java.lang.String str26 = properties22.toString();
        java.lang.String str28 = properties22.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) '#');
        atomikosProperties29.setEnableLogging(true);
        int int36 = atomikosProperties29.getMaxActives();
        boolean boolean37 = atomikosProperties29.isEnableLogging();
        java.util.Properties properties38 = atomikosProperties29.asProperties();
        java.lang.Object obj41 = properties38.setProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 35 + "'", int36 == 35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test8141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8141");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        properties6.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties13.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = new java.util.Properties(properties13);
        boolean boolean26 = properties13.isEmpty();
        java.util.Properties properties27 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.isForceShutdownOnVmExit();
        java.lang.String str30 = atomikosProperties28.getLogBaseName();
        java.lang.String str31 = atomikosProperties28.getService();
        atomikosProperties28.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long34 = atomikosProperties28.getMaxTimeout();
        atomikosProperties28.setMaxTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.lang.String str40 = atomikosProperties37.getService();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj42 = properties13.put((java.lang.Object) 0, (java.lang.Object) properties41);
        boolean boolean43 = properties6.containsValue((java.lang.Object) properties13);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties6.entrySet();
        java.util.Properties properties45 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean47 = atomikosProperties46.isForceShutdownOnVmExit();
        java.util.Properties properties48 = atomikosProperties46.asProperties();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        properties53.clear();
        int int57 = properties53.size();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        java.util.Properties properties65 = new java.util.Properties(properties62);
        java.util.Properties properties66 = new java.util.Properties(properties62);
        boolean boolean68 = properties53.remove((java.lang.Object) properties62, (java.lang.Object) 10.0f);
        boolean boolean69 = properties48.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties71.setCheckpointInterval((long) (byte) 0);
        atomikosProperties71.setEnableLogging(true);
        java.lang.Object obj78 = properties48.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties79 = new java.util.Properties(properties48);
        java.util.Properties properties80 = new java.util.Properties(properties48);
        java.util.Properties properties81 = null;
        java.util.Properties properties82 = new java.util.Properties(properties81);
        java.util.Properties properties83 = new java.util.Properties(properties81);
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        java.lang.Object obj87 = properties83.put((java.lang.Object) properties85, (java.lang.Object) (short) 1);
        boolean boolean88 = properties83.isEmpty();
        java.util.Properties properties89 = null;
        java.util.Properties properties90 = new java.util.Properties(properties89);
        java.util.Properties properties91 = new java.util.Properties(properties89);
        boolean boolean92 = properties83.containsKey((java.lang.Object) properties91);
        java.util.Properties properties93 = new java.util.Properties(properties83);
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties93);
        boolean boolean95 = properties93.isEmpty();
        java.util.Properties properties96 = new java.util.Properties(properties93);
        java.lang.Object obj97 = properties45.remove((java.lang.Object) properties96);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + true + "'", obj78, true);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test8142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8142");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        properties9.clear();
        int int13 = properties9.size();
        java.lang.Object obj16 = properties9.setProperty("hi!", "hi!");
        java.lang.Object obj19 = properties9.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setTransactionManagerUniqueName("");
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        java.lang.String str33 = atomikosProperties25.getLogBaseName();
        atomikosProperties25.setCheckpointInterval(100L);
        atomikosProperties25.setLogBaseName("");
        atomikosProperties25.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj40 = properties9.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) (byte) 1);
        java.lang.Object obj41 = properties3.remove((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        boolean boolean45 = atomikosProperties42.isEnableLogging();
        boolean boolean46 = atomikosProperties42.isEnableLogging();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties49.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties55.setCheckpointInterval((long) (byte) 0);
        atomikosProperties55.setTransactionManagerUniqueName("");
        java.util.Properties properties62 = atomikosProperties55.asProperties();
        java.lang.Object obj63 = properties49.remove((java.lang.Object) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setCheckpointInterval((long) (byte) 0);
        atomikosProperties64.setTransactionManagerUniqueName("");
        java.lang.Object obj71 = properties62.remove((java.lang.Object) atomikosProperties64);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties62.keys();
        java.lang.Object obj73 = properties3.putIfAbsent((java.lang.Object) atomikosProperties42, (java.lang.Object) properties62);
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.save(outputStream74, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 1 + "'", obj40, (byte) 1);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test8143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8143");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout(10L);
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test8144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8144");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval(52L);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.lang.String str26 = atomikosProperties17.getService();
        java.lang.String str27 = atomikosProperties17.getTransactionManagerUniqueName();
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(properties28);
    }

    @Test
    public void test8145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8145");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long22 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 100L + "'", long22 == 100L);
    }

    @Test
    public void test8146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8146");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        atomikosProperties17.setForceShutdownOnVmExit(false);
        atomikosProperties17.setSerialJtaTransactions(false);
        int int33 = atomikosProperties17.getMaxActives();
        java.util.Properties properties34 = atomikosProperties17.asProperties();
        atomikosProperties17.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNotNull(properties34);
    }

    @Test
    public void test8147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8147");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setForceShutdownOnVmExit(false);
        atomikosProperties12.setMaxTimeout(0L);
        boolean boolean27 = atomikosProperties12.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test8148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8148");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.lang.String str12 = properties4.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties4.entrySet();
        boolean boolean14 = properties4.isEmpty();
        java.lang.String str16 = properties4.getProperty("hi!");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test8149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8149");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
    }

    @Test
    public void test8150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8150");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        long long9 = atomikosProperties0.getCheckpointInterval();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseName("{}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 52L + "'", long10 == 52L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test8151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8151");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setService("{}");
        java.util.Properties properties35 = atomikosProperties21.asProperties();
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.storeToXML(outputStream36, "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=300000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties35);
    }

    @Test
    public void test8152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8152");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Collection<java.lang.Object> objCollection12 = properties4.values();
        java.lang.Object obj13 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((long) (byte) 10);
        long long17 = atomikosProperties14.getDefaultJtaTimeout();
        atomikosProperties14.setTransactionManagerUniqueName("");
        boolean boolean20 = atomikosProperties14.isEnableLogging();
        java.lang.String str21 = atomikosProperties14.getLogBaseDir();
        java.util.Properties properties22 = atomikosProperties14.asProperties();
        atomikosProperties14.setForceShutdownOnVmExit(true);
        long long25 = atomikosProperties14.getCheckpointInterval();
        atomikosProperties14.setForceShutdownOnVmExit(true);
        atomikosProperties14.setLogBaseDir("");
        atomikosProperties14.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long39 = atomikosProperties32.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setEnableLogging(true);
        atomikosProperties40.setService("");
        atomikosProperties40.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties51 = atomikosProperties40.asProperties();
        java.util.Properties properties52 = atomikosProperties40.asProperties();
        boolean boolean53 = properties4.replace((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) long39, (java.lang.Object) properties52);
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties52.storeToXML(outputStream54, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 500L + "'", long39 == 500L);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test8153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8153");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        properties16.clear();
        int int20 = properties16.size();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = new java.util.Properties(properties25);
        java.util.Properties properties29 = new java.util.Properties(properties25);
        boolean boolean31 = properties16.remove((java.lang.Object) properties25, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection34 = properties25.values();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setMaxActives((int) (byte) 0);
        atomikosProperties57.setEnableLogging(true);
        atomikosProperties57.setForceShutdownOnVmExit(false);
        boolean boolean66 = properties48.equals((java.lang.Object) false);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties48.keys();
        java.lang.Object obj68 = properties11.put((java.lang.Object) properties25, (java.lang.Object) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties69.setCheckpointInterval((long) (byte) 0);
        atomikosProperties69.setTransactionManagerUniqueName("");
        java.util.Properties properties76 = atomikosProperties69.asProperties();
        java.lang.String str77 = atomikosProperties69.getTransactionManagerUniqueName();
        atomikosProperties69.setDefaultJtaTimeout((long) (-1));
        java.lang.String str80 = atomikosProperties69.getService();
        atomikosProperties69.setSerialJtaTransactions(true);
        long long83 = atomikosProperties69.getDefaultJtaTimeout();
        java.util.Properties properties84 = atomikosProperties69.asProperties();
        boolean boolean85 = properties48.equals((java.lang.Object) properties84);
        java.util.Properties properties86 = new java.util.Properties(properties48);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test8154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8154");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        long long22 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        atomikosProperties19.setLogBaseName("tmlog");
        atomikosProperties19.setCheckpointInterval(300000L);
        long long29 = atomikosProperties19.getMaxTimeout();
        boolean boolean30 = properties18.containsKey((java.lang.Object) long29);
        java.lang.Object obj33 = properties18.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setTransactionManagerUniqueName("");
        boolean boolean41 = atomikosProperties34.isEnableLogging();
        java.util.Properties properties42 = atomikosProperties34.asProperties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setTransactionManagerUniqueName("");
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        java.lang.String str59 = atomikosProperties51.getLogBaseName();
        java.util.Properties properties60 = atomikosProperties51.asProperties();
        java.lang.Object obj61 = properties42.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties51);
        long long62 = atomikosProperties51.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties63.setCheckpointInterval((long) (byte) 0);
        atomikosProperties63.setTransactionManagerUniqueName("");
        boolean boolean70 = atomikosProperties63.isEnableLogging();
        java.util.Properties properties71 = atomikosProperties63.asProperties();
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj73 = properties18.getOrDefault((java.lang.Object) long62, (java.lang.Object) properties71);
        int int74 = properties71.size();
        java.lang.Object obj77 = properties71.setProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties71.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
    }

    @Test
    public void test8155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8155");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("hi!");
        atomikosProperties0.setMaxTimeout((long) 50);
        atomikosProperties0.setLogBaseDir("");
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test8156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8156");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
    }

    @Test
    public void test8157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8157");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.keys();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int28 = atomikosProperties27.getMaxActives();
        long long29 = atomikosProperties27.getMaxTimeout();
        java.lang.String str30 = atomikosProperties27.getLogBaseDir();
        atomikosProperties27.setCheckpointInterval(100L);
        boolean boolean33 = properties26.equals((java.lang.Object) atomikosProperties27);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        boolean boolean41 = properties36.isEmpty();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        boolean boolean45 = properties36.containsKey((java.lang.Object) properties44);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        boolean boolean61 = properties50.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet62 = properties50.stringPropertyNames();
        boolean boolean63 = properties44.containsKey((java.lang.Object) strSet62);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        properties68.clear();
        java.lang.String str73 = properties68.getProperty("");
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Properties properties76 = new java.util.Properties(properties74);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.lang.Object obj80 = properties76.put((java.lang.Object) properties78, (java.lang.Object) (short) 1);
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        boolean boolean82 = properties44.containsKey((java.lang.Object) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setThreadedTwoPhaseCommit(true);
        boolean boolean87 = atomikosProperties84.isEnableLogging();
        java.lang.Object obj88 = properties44.put((java.lang.Object) '4', (java.lang.Object) boolean87);
        java.util.Properties properties89 = new java.util.Properties(properties44);
        boolean boolean90 = properties44.isEmpty();
        java.lang.Object obj91 = properties26.get((java.lang.Object) properties44);
        java.util.Properties properties92 = new java.util.Properties(properties26);
        boolean boolean93 = properties12.remove((java.lang.Object) properties18, (java.lang.Object) properties92);
        java.util.Set<java.lang.Object> objSet94 = properties92.keySet();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objSet94);
    }

    @Test
    public void test8158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8158");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setTransactionManagerUniqueName("");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.lang.String str42 = atomikosProperties34.getLogBaseName();
        java.util.Properties properties43 = atomikosProperties34.asProperties();
        java.lang.Object obj44 = properties25.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties34);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Set<java.lang.Object> objSet46 = properties25.keySet();
        java.lang.String str48 = properties25.getProperty("");
        java.util.Properties properties49 = new java.util.Properties(properties25);
        java.util.Enumeration<?> wildcardEnumeration50 = properties49.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(wildcardEnumeration50);
    }

    @Test
    public void test8159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8159");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        properties18.clear();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        long long26 = atomikosProperties24.getMaxTimeout();
        java.util.Properties properties27 = atomikosProperties24.asProperties();
        java.util.Properties properties28 = atomikosProperties24.asProperties();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        java.lang.Object obj37 = properties18.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.lang.String str42 = atomikosProperties39.getService();
        boolean boolean43 = atomikosProperties39.isSerialJtaTransactions();
        java.lang.Object obj44 = properties33.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties39);
        boolean boolean45 = properties12.equals((java.lang.Object) properties33);
        java.util.Properties properties46 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties47.setCheckpointInterval((long) (byte) 0);
        atomikosProperties47.setTransactionManagerUniqueName("");
        boolean boolean54 = atomikosProperties47.isEnableLogging();
        atomikosProperties47.setLogBaseDir("hi!");
        atomikosProperties47.setForceShutdownOnVmExit(false);
        boolean boolean59 = atomikosProperties47.isEnableLogging();
        atomikosProperties47.setSerialJtaTransactions(true);
        boolean boolean62 = properties46.contains((java.lang.Object) true);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str71 = atomikosProperties64.getTransactionManagerUniqueName();
        java.util.Properties properties72 = atomikosProperties64.asProperties();
        atomikosProperties64.setSerialJtaTransactions(true);
        atomikosProperties64.setLogBaseName("");
        atomikosProperties64.setEnableLogging(true);
        boolean boolean79 = properties46.containsValue((java.lang.Object) true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test8160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8160");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        boolean boolean20 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.Object obj29 = properties15.remove((java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        atomikosProperties30.setTransactionManagerUniqueName("");
        java.lang.Object obj37 = properties28.remove((java.lang.Object) atomikosProperties30);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties28.elements();
        java.lang.Object obj39 = properties12.get((java.lang.Object) properties28);
        java.util.Properties properties40 = new java.util.Properties(properties28);
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.lang.Object obj43 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setMaxActives((int) (byte) 0);
        atomikosProperties44.setEnableLogging(true);
        atomikosProperties44.setForceShutdownOnVmExit(false);
        boolean boolean53 = atomikosProperties44.isThreadedTwoPhaseCommit();
        atomikosProperties44.setMaxTimeout(10L);
        atomikosProperties44.setForceShutdownOnVmExit(false);
        atomikosProperties44.setMaxTimeout((long) 35);
        boolean boolean60 = atomikosProperties44.isThreadedTwoPhaseCommit();
        java.util.Properties properties61 = atomikosProperties44.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties61.keys();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        java.util.Properties properties71 = new java.util.Properties(properties67);
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Properties properties75 = new java.util.Properties(properties73);
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.lang.Object obj79 = properties75.put((java.lang.Object) properties77, (java.lang.Object) (short) 1);
        properties77.clear();
        int int81 = properties77.size();
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        java.util.Properties properties84 = new java.util.Properties(properties82);
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.lang.Object obj88 = properties84.put((java.lang.Object) properties86, (java.lang.Object) (short) 1);
        java.util.Properties properties89 = new java.util.Properties(properties86);
        java.util.Properties properties90 = new java.util.Properties(properties86);
        boolean boolean92 = properties77.remove((java.lang.Object) properties86, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration93 = properties86.elements();
        java.util.Properties properties94 = new java.util.Properties(properties86);
        java.util.Properties properties95 = new java.util.Properties(properties94);
        java.util.Properties properties96 = new java.util.Properties(properties95);
        java.lang.Object obj97 = properties71.get((java.lang.Object) properties96);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = properties42.replace(obj43, (java.lang.Object) properties61, (java.lang.Object) properties96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objEnumeration93);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test8161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8161");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str20 = atomikosProperties13.getTransactionManagerUniqueName();
        java.util.Properties properties21 = atomikosProperties13.asProperties();
        java.lang.Object obj22 = properties21.clone();
        boolean boolean23 = properties12.containsKey(obj22);
        java.util.Properties properties24 = new java.util.Properties(properties12);
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.save(outputStream25, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test8162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8162");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.keys();
        java.lang.String str20 = properties4.toString();
        java.lang.String str21 = properties4.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("");
        boolean boolean28 = atomikosProperties22.isEnableLogging();
        java.lang.String str29 = atomikosProperties22.getLogBaseDir();
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) properties31);
        boolean boolean33 = properties4.equals((java.lang.Object) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
    }

    @Test
    public void test8163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8163");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties4.containsKey((java.lang.Object) objEnumeration24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.lang.String str34 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties26.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        atomikosProperties40.setEnableLogging(true);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        boolean boolean49 = atomikosProperties40.isThreadedTwoPhaseCommit();
        atomikosProperties40.setForceShutdownOnVmExit(false);
        atomikosProperties40.setMaxActives((int) (short) -1);
        java.lang.Object obj54 = properties4.putIfAbsent((java.lang.Object) long39, (java.lang.Object) (short) -1);
        java.util.Properties properties55 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.keys();
        java.util.Properties properties57 = new java.util.Properties(properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        long long61 = atomikosProperties58.getDefaultJtaTimeout();
        atomikosProperties58.setTransactionManagerUniqueName("");
        boolean boolean64 = atomikosProperties58.isEnableLogging();
        java.lang.String str65 = atomikosProperties58.getLogBaseDir();
        java.util.Properties properties66 = atomikosProperties58.asProperties();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) properties67);
        int int69 = properties67.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int71 = atomikosProperties70.getMaxActives();
        long long72 = atomikosProperties70.getMaxTimeout();
        java.lang.String str73 = atomikosProperties70.getLogBaseDir();
        atomikosProperties70.setCheckpointInterval(100L);
        atomikosProperties70.setService("tmlog");
        java.lang.String str78 = atomikosProperties70.getLogBaseDir();
        java.util.Properties properties79 = atomikosProperties70.asProperties();
        java.lang.Object obj80 = properties67.remove((java.lang.Object) properties79);
        boolean boolean81 = properties55.contains((java.lang.Object) properties67);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10L + "'", long61 == 10L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 50 + "'", int71 == 50);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 300000L + "'", long72 == 300000L);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test8164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8164");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.util.Enumeration<?> wildcardEnumeration25 = properties24.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties24.entrySet();
        java.util.Properties properties27 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.util.Properties properties36 = atomikosProperties28.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties45.setCheckpointInterval((long) (byte) 0);
        atomikosProperties45.setTransactionManagerUniqueName("");
        java.util.Properties properties52 = atomikosProperties45.asProperties();
        java.lang.String str53 = atomikosProperties45.getLogBaseName();
        java.util.Properties properties54 = atomikosProperties45.asProperties();
        java.lang.Object obj55 = properties36.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties45);
        long long56 = atomikosProperties45.getCheckpointInterval();
        boolean boolean57 = atomikosProperties45.isEnableLogging();
        atomikosProperties45.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Class<?> wildcardClass60 = atomikosProperties45.getClass();
        boolean boolean61 = properties24.equals((java.lang.Object) atomikosProperties45);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.lang.Object obj68 = properties64.put((java.lang.Object) properties66, (java.lang.Object) (short) 1);
        boolean boolean69 = properties64.isEmpty();
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Properties properties72 = new java.util.Properties(properties70);
        boolean boolean73 = properties64.containsKey((java.lang.Object) properties72);
        java.util.Properties properties74 = new java.util.Properties(properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties75.setSerialJtaTransactions(false);
        atomikosProperties75.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str82 = atomikosProperties75.getTransactionManagerUniqueName();
        java.util.Properties properties83 = atomikosProperties75.asProperties();
        java.lang.Object obj84 = properties83.clone();
        boolean boolean85 = properties74.containsKey(obj84);
        java.util.Properties properties86 = null;
        java.util.Properties properties87 = new java.util.Properties(properties86);
        java.util.Properties properties88 = new java.util.Properties(properties86);
        boolean boolean90 = properties88.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj91 = properties88.clone();
        java.lang.Object obj94 = properties88.replace((java.lang.Object) (short) -1, (java.lang.Object) (-1.0d));
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties88);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties88);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNotNull(obj84);
// flaky:         org.junit.Assert.assertEquals(obj84.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test8165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8165");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties3.setCheckpointInterval((long) (byte) 0);
        atomikosProperties3.setTransactionManagerUniqueName("");
        boolean boolean10 = atomikosProperties3.isEnableLogging();
        java.util.Properties properties11 = atomikosProperties3.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        java.util.Properties properties29 = atomikosProperties20.asProperties();
        java.lang.Object obj30 = properties11.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties20);
        long long31 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj32 = properties0.remove((java.lang.Object) atomikosProperties20);
        java.util.Properties properties33 = new java.util.Properties(properties0);
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Set<java.lang.String> strSet35 = properties33.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties(properties33);
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet35);
    }

    @Test
    public void test8166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8166");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxActives((int) '#');
        atomikosProperties23.setEnableLogging(true);
        int int30 = atomikosProperties23.getMaxActives();
        boolean boolean31 = properties4.containsValue((java.lang.Object) atomikosProperties23);
        boolean boolean32 = atomikosProperties23.isForceShutdownOnVmExit();
        atomikosProperties23.setEnableLogging(true);
        java.util.Properties properties35 = atomikosProperties23.asProperties();
        boolean boolean36 = atomikosProperties23.isThreadedTwoPhaseCommit();
        boolean boolean37 = atomikosProperties23.isEnableLogging();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test8167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8167");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test8168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8168");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test8169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8169");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        java.lang.String str5 = atomikosProperties0.getLogBaseDir();
        int int6 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        long long12 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
    }

    @Test
    public void test8170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8170");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int4 = atomikosProperties3.getMaxActives();
        long long5 = atomikosProperties3.getMaxTimeout();
        java.lang.String str6 = atomikosProperties3.getLogBaseDir();
        atomikosProperties3.setCheckpointInterval(100L);
        boolean boolean9 = properties2.equals((java.lang.Object) atomikosProperties3);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet38 = properties26.stringPropertyNames();
        boolean boolean39 = properties20.containsKey((java.lang.Object) strSet38);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties44.clear();
        java.lang.String str49 = properties44.getProperty("");
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        boolean boolean58 = properties20.containsKey((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        boolean boolean63 = atomikosProperties60.isEnableLogging();
        java.lang.Object obj64 = properties20.put((java.lang.Object) '4', (java.lang.Object) boolean63);
        java.util.Properties properties65 = new java.util.Properties(properties20);
        boolean boolean66 = properties20.isEmpty();
        java.lang.Object obj67 = properties2.get((java.lang.Object) properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties20.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        long long72 = atomikosProperties69.getDefaultJtaTimeout();
        atomikosProperties69.setTransactionManagerUniqueName("");
        boolean boolean75 = atomikosProperties69.isEnableLogging();
        atomikosProperties69.setDefaultJtaTimeout((long) '4');
        java.lang.String str78 = atomikosProperties69.getTransactionManagerUniqueName();
        atomikosProperties69.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties81 = atomikosProperties69.asProperties();
        java.util.Properties properties82 = new java.util.Properties(properties81);
        java.util.Enumeration<?> wildcardEnumeration83 = properties82.propertyNames();
        java.util.Set<java.lang.Object> objSet84 = properties82.keySet();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties82);
        java.io.Reader reader86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.load(reader86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10L + "'", long72 == 10L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertNotNull(wildcardEnumeration83);
        org.junit.Assert.assertNotNull(objSet84);
    }

    @Test
    public void test8171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8171");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test8172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8172");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.Object obj25 = properties11.remove((java.lang.Object) properties24);
        java.util.Set<java.lang.String> strSet26 = properties24.stringPropertyNames();
        properties24.clear();
        java.util.Set<java.lang.String> strSet28 = properties24.stringPropertyNames();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        boolean boolean44 = properties33.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet45 = properties33.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        long long49 = atomikosProperties46.getDefaultJtaTimeout();
        java.lang.Object obj50 = properties33.get((java.lang.Object) atomikosProperties46);
        int int51 = properties33.size();
        java.util.Properties properties52 = new java.util.Properties(properties33);
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        properties58.clear();
        int int62 = properties58.size();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Properties properties70 = new java.util.Properties(properties67);
        java.util.Properties properties71 = new java.util.Properties(properties67);
        boolean boolean73 = properties58.remove((java.lang.Object) properties67, (java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet74 = properties58.keySet();
        boolean boolean75 = properties52.contains((java.lang.Object) objSet74);
        java.util.Set<java.lang.String> strSet76 = properties52.stringPropertyNames();
        java.lang.Object obj77 = properties8.put((java.lang.Object) strSet28, (java.lang.Object) properties52);
        java.io.PrintStream printStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10L + "'", long49 == 10L);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test8173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8173");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Collection<java.lang.Object> objCollection12 = properties4.values();
        java.lang.Object obj13 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((long) (byte) 10);
        long long17 = atomikosProperties14.getDefaultJtaTimeout();
        atomikosProperties14.setTransactionManagerUniqueName("");
        boolean boolean20 = atomikosProperties14.isEnableLogging();
        java.lang.String str21 = atomikosProperties14.getLogBaseDir();
        java.util.Properties properties22 = atomikosProperties14.asProperties();
        atomikosProperties14.setForceShutdownOnVmExit(true);
        long long25 = atomikosProperties14.getCheckpointInterval();
        atomikosProperties14.setForceShutdownOnVmExit(true);
        atomikosProperties14.setLogBaseDir("");
        atomikosProperties14.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long39 = atomikosProperties32.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setEnableLogging(true);
        atomikosProperties40.setService("");
        atomikosProperties40.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties51 = atomikosProperties40.asProperties();
        java.util.Properties properties52 = atomikosProperties40.asProperties();
        boolean boolean53 = properties4.replace((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) long39, (java.lang.Object) properties52);
        java.util.Collection<java.lang.Object> objCollection54 = properties52.values();
        java.io.InputStream inputStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties52.loadFromXML(inputStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 500L + "'", long39 == 500L);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objCollection54);
    }

    @Test
    public void test8174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8174");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Set<java.lang.Object> objSet12 = properties10.keySet();
        java.util.Properties properties13 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        java.io.PrintStream printStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.list(printStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objCollection14);
    }

    @Test
    public void test8175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8175");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.util.Set<java.lang.String> strSet10 = properties4.stringPropertyNames();
        java.lang.String str13 = properties4.getProperty("{tmlog=tmlog, hi!=hi!}", "{10=tmlog, {}=1}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{10=tmlog, {}=1}" + "'", str13, "{10=tmlog, {}=1}");
    }

    @Test
    public void test8176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8176");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        long long22 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        atomikosProperties19.setLogBaseName("tmlog");
        atomikosProperties19.setCheckpointInterval(300000L);
        long long29 = atomikosProperties19.getMaxTimeout();
        boolean boolean30 = properties18.containsKey((java.lang.Object) long29);
        java.lang.Object obj33 = properties18.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setTransactionManagerUniqueName("");
        boolean boolean41 = atomikosProperties34.isEnableLogging();
        java.util.Properties properties42 = atomikosProperties34.asProperties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setTransactionManagerUniqueName("");
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        java.lang.String str59 = atomikosProperties51.getLogBaseName();
        java.util.Properties properties60 = atomikosProperties51.asProperties();
        java.lang.Object obj61 = properties42.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties51);
        long long62 = atomikosProperties51.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties63.setCheckpointInterval((long) (byte) 0);
        atomikosProperties63.setTransactionManagerUniqueName("");
        boolean boolean70 = atomikosProperties63.isEnableLogging();
        java.util.Properties properties71 = atomikosProperties63.asProperties();
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj73 = properties18.getOrDefault((java.lang.Object) long62, (java.lang.Object) properties71);
        java.util.Collection<java.lang.Object> objCollection74 = properties71.values();
        java.util.Enumeration<?> wildcardEnumeration75 = properties71.propertyNames();
        java.io.Reader reader76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties71.load(reader76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(obj73);
// flaky:         org.junit.Assert.assertEquals(obj73.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
    }

    @Test
    public void test8177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8177");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        atomikosProperties17.setForceShutdownOnVmExit(false);
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("hi!");
        java.lang.String str35 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setService("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.lang.String str38 = atomikosProperties17.getService();
        atomikosProperties17.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties17.setLogBaseName("");
        atomikosProperties17.setDefaultJtaTimeout((long) 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}" + "'", str38, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
    }

    @Test
    public void test8178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8178");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        atomikosProperties31.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties31.setSerialJtaTransactions(true);
        long long46 = atomikosProperties31.getDefaultJtaTimeout();
        java.lang.String str47 = atomikosProperties31.getLogBaseDir();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str47, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test8179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8179");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test8180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8180");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test8181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8181");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        boolean boolean58 = properties47.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj60 = properties47.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet61 = properties47.keySet();
        boolean boolean62 = properties25.containsKey((java.lang.Object) properties47);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties25.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties25.entrySet();
        boolean boolean66 = properties9.equals((java.lang.Object) objEntrySet65);
        java.io.OutputStream outputStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.save(outputStream67, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test8182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8182");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Set<java.lang.String> strSet13 = properties12.stringPropertyNames();
        java.lang.String str16 = properties12.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{=}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{=}" + "'", str16, "{=}");
    }

    @Test
    public void test8183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8183");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
    }

    @Test
    public void test8184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8184");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test8185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8185");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties18.getProperty("hi!");
        boolean boolean21 = properties10.containsKey((java.lang.Object) properties18);
        boolean boolean22 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        long long26 = atomikosProperties23.getDefaultJtaTimeout();
        atomikosProperties23.setTransactionManagerUniqueName("");
        boolean boolean29 = atomikosProperties23.isEnableLogging();
        java.lang.String str30 = atomikosProperties23.getLogBaseDir();
        java.util.Properties properties31 = atomikosProperties23.asProperties();
        boolean boolean32 = atomikosProperties23.isEnableLogging();
        java.util.Properties properties33 = atomikosProperties23.asProperties();
        boolean boolean34 = properties33.isEmpty();
        java.lang.Object obj35 = properties10.remove((java.lang.Object) boolean34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties40.entrySet();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties50.clear();
        int int54 = properties50.size();
        java.util.Properties properties55 = new java.util.Properties(properties50);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        properties60.clear();
        java.lang.String str65 = properties60.getProperty("");
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.lang.Object obj74 = properties40.put((java.lang.Object) properties50, (java.lang.Object) properties68);
        java.util.Collection<java.lang.Object> objCollection75 = properties68.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties68.entrySet();
        boolean boolean77 = properties10.contains((java.lang.Object) properties68);
        java.util.Collection<java.lang.Object> objCollection78 = properties68.values();
        java.util.Properties properties79 = new java.util.Properties(properties68);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objCollection78);
    }

    @Test
    public void test8186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8186");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test8187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8187");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        long long45 = atomikosProperties42.getDefaultJtaTimeout();
        atomikosProperties42.setTransactionManagerUniqueName("hi!");
        atomikosProperties42.setLogBaseName("tmlog");
        atomikosProperties42.setCheckpointInterval(300000L);
        int int52 = atomikosProperties42.getMaxActives();
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        boolean boolean54 = properties4.containsValue((java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties55.setCheckpointInterval((long) (byte) 0);
        atomikosProperties55.setTransactionManagerUniqueName("");
        java.util.Properties properties62 = atomikosProperties55.asProperties();
        java.lang.String str63 = atomikosProperties55.getLogBaseName();
        java.util.Properties properties64 = atomikosProperties55.asProperties();
        java.lang.String str65 = atomikosProperties55.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        boolean boolean69 = properties4.remove((java.lang.Object) atomikosProperties55, (java.lang.Object) long68);
        atomikosProperties55.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test8188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8188");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties19.get((java.lang.Object) atomikosProperties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties33.setCheckpointInterval((long) (byte) 0);
        java.util.Properties properties38 = atomikosProperties33.asProperties();
        java.lang.Object obj39 = properties19.get((java.lang.Object) atomikosProperties33);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test8189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8189");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        properties12.clear();
        java.lang.String str15 = properties12.getProperty("");
        java.lang.String str17 = properties12.getProperty("{{}=1}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test8190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8190");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection3 = properties2.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties4.setCheckpointInterval((long) (byte) 0);
        atomikosProperties4.setTransactionManagerUniqueName("");
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        java.util.Properties properties12 = atomikosProperties4.asProperties();
        boolean boolean13 = properties2.equals((java.lang.Object) atomikosProperties4);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties18.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = new java.util.Properties(properties18);
        int int31 = properties30.size();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        java.util.Properties properties40 = new java.util.Properties(properties36);
        boolean boolean41 = properties30.contains((java.lang.Object) properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties30.entrySet();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxActives((int) (byte) 0);
        boolean boolean55 = properties45.containsValue((java.lang.Object) atomikosProperties50);
        atomikosProperties50.setCheckpointInterval((long) 9);
        atomikosProperties50.setEnableLogging(false);
        boolean boolean60 = properties30.containsValue((java.lang.Object) atomikosProperties50);
        atomikosProperties50.setTransactionManagerUniqueName("{}");
        atomikosProperties50.setMaxTimeout((long) (short) 10);
        java.util.Properties properties65 = atomikosProperties50.asProperties();
        atomikosProperties50.setMaxActives(0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxActives((int) (byte) 0);
        java.lang.String str73 = atomikosProperties68.getLogBaseDir();
        boolean boolean74 = properties2.remove((java.lang.Object) atomikosProperties50, (java.lang.Object) atomikosProperties68);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNotNull(objCollection3);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test8191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8191");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Set<java.lang.Object> objSet19 = properties5.keySet();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean24 = properties22.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.lang.Object obj33 = properties22.remove((java.lang.Object) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties22.propertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        boolean boolean39 = atomikosProperties36.isEnableLogging();
        boolean boolean40 = atomikosProperties36.isEnableLogging();
        boolean boolean41 = properties5.containsValue((java.lang.Object) boolean40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties42.setCheckpointInterval((long) (byte) 0);
        atomikosProperties42.setTransactionManagerUniqueName("");
        java.util.Properties properties49 = atomikosProperties42.asProperties();
        atomikosProperties42.setThreadedTwoPhaseCommit(false);
        atomikosProperties42.setMaxActives((int) (byte) 1);
        java.util.Properties properties54 = atomikosProperties42.asProperties();
        int int55 = atomikosProperties42.getMaxActives();
        atomikosProperties42.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        atomikosProperties42.setDefaultJtaTimeout(50L);
        java.lang.String str60 = atomikosProperties42.getService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = properties5.get((java.lang.Object) str60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test8192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8192");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str3 = atomikosProperties0.getService();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((long) (byte) 10);
        long long9 = atomikosProperties6.getDefaultJtaTimeout();
        atomikosProperties6.setTransactionManagerUniqueName("");
        boolean boolean12 = atomikosProperties6.isEnableLogging();
        java.lang.String str13 = atomikosProperties6.getLogBaseDir();
        java.util.Properties properties14 = atomikosProperties6.asProperties();
        boolean boolean15 = atomikosProperties6.isEnableLogging();
        atomikosProperties6.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean18 = properties5.containsKey((java.lang.Object) atomikosProperties6);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test8193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8193");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj10 = properties6.put((java.lang.Object) properties8, (java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties8.entrySet();
        java.lang.Object obj13 = properties3.remove((java.lang.Object) properties8);
        java.util.Enumeration<?> wildcardEnumeration14 = properties8.propertyNames();
        int int15 = properties8.size();
        java.util.Properties properties16 = new java.util.Properties(properties8);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        properties21.clear();
        int int25 = properties21.size();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties30);
        java.util.Properties properties34 = new java.util.Properties(properties30);
        boolean boolean36 = properties21.remove((java.lang.Object) properties30, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties30.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties30.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        long long42 = atomikosProperties39.getDefaultJtaTimeout();
        atomikosProperties39.setTransactionManagerUniqueName("");
        boolean boolean45 = atomikosProperties39.isEnableLogging();
        java.lang.String str46 = atomikosProperties39.getLogBaseDir();
        java.util.Properties properties47 = atomikosProperties39.asProperties();
        boolean boolean48 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        java.util.Properties properties56 = atomikosProperties49.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setMaxActives((int) '#');
        atomikosProperties57.setForceShutdownOnVmExit(true);
        java.lang.String str64 = atomikosProperties57.getLogBaseDir();
        java.lang.Object obj65 = properties56.remove((java.lang.Object) atomikosProperties57);
        java.util.Collection<java.lang.Object> objCollection66 = properties56.values();
        boolean boolean67 = properties47.contains((java.lang.Object) properties56);
        java.util.Properties properties68 = new java.util.Properties(properties47);
        boolean boolean69 = properties68.isEmpty();
        boolean boolean70 = properties30.equals((java.lang.Object) properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        boolean boolean78 = properties73.isEmpty();
        properties73.clear();
        java.util.Properties properties80 = new java.util.Properties(properties73);
        boolean boolean81 = properties68.equals((java.lang.Object) properties73);
        java.util.Properties properties82 = new java.util.Properties(properties73);
        boolean boolean83 = properties73.isEmpty();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        java.util.Set<java.lang.Object> objSet85 = properties16.keySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10L + "'", long42 == 10L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objSet85);
    }

    @Test
    public void test8194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8194");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean27 = properties16.contains((java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties16.entrySet();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxActives((int) (byte) 0);
        boolean boolean41 = properties31.containsValue((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setCheckpointInterval((long) 9);
        atomikosProperties36.setEnableLogging(false);
        boolean boolean46 = properties16.containsValue((java.lang.Object) atomikosProperties36);
        boolean boolean47 = atomikosProperties36.isSerialJtaTransactions();
        atomikosProperties36.setLogBaseName("{tmlog=}");
        java.util.Properties properties50 = atomikosProperties36.asProperties();
        java.io.PrintWriter printWriter51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties50.list(printWriter51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(properties50);
    }

    @Test
    public void test8195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8195");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection56 = properties55.values();
        java.io.Reader reader57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.load(reader57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objCollection56);
    }

    @Test
    public void test8196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8196");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) properties9);
        int int11 = properties9.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int13 = atomikosProperties12.getMaxActives();
        long long14 = atomikosProperties12.getMaxTimeout();
        java.lang.String str15 = atomikosProperties12.getLogBaseDir();
        atomikosProperties12.setCheckpointInterval(100L);
        atomikosProperties12.setService("tmlog");
        java.lang.String str20 = atomikosProperties12.getLogBaseDir();
        java.util.Properties properties21 = atomikosProperties12.asProperties();
        java.lang.Object obj22 = properties9.remove((java.lang.Object) properties21);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        boolean boolean30 = properties25.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setTransactionManagerUniqueName("");
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.Object obj39 = properties25.remove((java.lang.Object) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        java.lang.Object obj47 = properties38.remove((java.lang.Object) atomikosProperties40);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties52.entrySet();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        properties62.clear();
        int int66 = properties62.size();
        java.util.Properties properties67 = new java.util.Properties(properties62);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        properties72.clear();
        java.lang.String str77 = properties72.getProperty("");
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Properties properties80 = new java.util.Properties(properties78);
        java.util.Properties properties81 = null;
        java.util.Properties properties82 = new java.util.Properties(properties81);
        java.lang.Object obj84 = properties80.put((java.lang.Object) properties82, (java.lang.Object) (short) 1);
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties80);
        java.lang.Object obj86 = properties52.put((java.lang.Object) properties62, (java.lang.Object) properties80);
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties62.elements();
        java.lang.Object obj89 = properties38.put((java.lang.Object) properties62, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        int int90 = properties38.size();
        boolean boolean91 = properties9.contains((java.lang.Object) properties38);
        java.io.OutputStream outputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream92, "{{}={{}=1}, []={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 11 + "'", int90 == 11);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test8197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8197");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        long long20 = atomikosProperties0.getDefaultJtaTimeout();
        long long21 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
    }

    @Test
    public void test8198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8198");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        boolean boolean14 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties9.entrySet();
        java.util.Properties properties16 = new java.util.Properties(properties9);
        java.lang.String str18 = properties9.getProperty("{=}");
        java.util.Properties properties19 = new java.util.Properties(properties9);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        java.lang.Object obj36 = properties22.remove((java.lang.Object) properties35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        boolean boolean41 = properties39.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj42 = properties39.clone();
        java.util.Enumeration<?> wildcardEnumeration43 = properties39.propertyNames();
        int int44 = properties39.size();
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Set<java.lang.String> strSet46 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setMaxActives((int) '#');
        atomikosProperties47.setForceShutdownOnVmExit(true);
        java.lang.String str54 = atomikosProperties47.getLogBaseDir();
        java.util.Properties properties55 = atomikosProperties47.asProperties();
        atomikosProperties47.setTransactionManagerUniqueName("");
        java.util.Properties properties58 = atomikosProperties47.asProperties();
        boolean boolean59 = properties58.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties58.entrySet();
        java.lang.String str61 = properties58.toString();
        boolean boolean62 = properties9.replace((java.lang.Object) properties35, (java.lang.Object) properties39, (java.lang.Object) properties58);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEntrySet60);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}" + "'", str61, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test8199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8199");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(0);
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test8200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8200");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        int int14 = properties13.size();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test8201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8201");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.lang.Object obj42 = properties26.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean44 = atomikosProperties43.isSerialJtaTransactions();
        java.util.Properties properties45 = atomikosProperties43.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        boolean boolean47 = properties26.equals((java.lang.Object) objEnumeration46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((long) (byte) 10);
        long long51 = atomikosProperties48.getDefaultJtaTimeout();
        atomikosProperties48.setTransactionManagerUniqueName("");
        boolean boolean54 = atomikosProperties48.isEnableLogging();
        java.lang.String str55 = atomikosProperties48.getLogBaseName();
        atomikosProperties48.setEnableLogging(false);
        java.lang.Object obj58 = properties26.remove((java.lang.Object) atomikosProperties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties26.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties26.elements();
        java.lang.String str62 = properties26.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10L + "'", long51 == 10L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test8202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8202");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(0);
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str12 = properties10.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        properties18.clear();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        long long26 = atomikosProperties24.getMaxTimeout();
        java.util.Properties properties27 = atomikosProperties24.asProperties();
        java.util.Properties properties28 = atomikosProperties24.asProperties();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        java.lang.Object obj37 = properties18.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) properties33);
        java.lang.Object obj38 = properties10.getOrDefault((java.lang.Object) 0.0d, (java.lang.Object) properties33);
        java.util.Properties properties39 = new java.util.Properties(properties10);
        java.util.Properties properties40 = new java.util.Properties(properties10);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        properties45.clear();
        int int49 = properties45.size();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        java.util.Properties properties57 = new java.util.Properties(properties54);
        java.util.Properties properties58 = new java.util.Properties(properties54);
        boolean boolean60 = properties45.remove((java.lang.Object) properties54, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties54.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        long long67 = atomikosProperties62.getMaxTimeout();
        atomikosProperties62.setSerialJtaTransactions(true);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration71 = properties70.propertyNames();
        java.lang.Object obj72 = properties54.replace((java.lang.Object) atomikosProperties62, (java.lang.Object) properties70);
        java.lang.String str73 = atomikosProperties62.getTransactionManagerUniqueName();
        long long74 = atomikosProperties62.getDefaultJtaTimeout();
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        long long77 = atomikosProperties62.getDefaultJtaTimeout();
        java.lang.Object obj78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = properties10.put((java.lang.Object) long77, obj78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 300000L + "'", long67 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 10L + "'", long74 == 10L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
    }

    @Test
    public void test8203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8203");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = new java.util.Properties(properties22);
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean28 = properties13.remove((java.lang.Object) properties22, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties22.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        long long35 = atomikosProperties30.getMaxTimeout();
        atomikosProperties30.setSerialJtaTransactions(true);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration39 = properties38.propertyNames();
        java.lang.Object obj40 = properties22.replace((java.lang.Object) atomikosProperties30, (java.lang.Object) properties38);
        java.lang.String str41 = properties22.toString();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        boolean boolean57 = properties46.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet58 = properties46.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        long long62 = atomikosProperties59.getDefaultJtaTimeout();
        java.lang.Object obj63 = properties46.get((java.lang.Object) atomikosProperties59);
        atomikosProperties59.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties66 = atomikosProperties59.asProperties();
        java.util.Enumeration<?> wildcardEnumeration67 = properties66.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties66.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setThreadedTwoPhaseCommit(true);
        atomikosProperties69.setMaxActives((int) (byte) 0);
        atomikosProperties69.setForceShutdownOnVmExit(false);
        atomikosProperties69.setLogBaseName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        boolean boolean78 = properties4.replace((java.lang.Object) str41, (java.lang.Object) properties66, (java.lang.Object) atomikosProperties69);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties4.keys();
        java.util.Properties properties80 = new java.util.Properties(properties4);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{}" + "'", str41, "{}");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10L + "'", long62 == 10L);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNotNull(wildcardEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objEnumeration79);
    }

    @Test
    public void test8204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8204");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setService("{=}");
        atomikosProperties0.setMaxTimeout((long) 9);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test8205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8205");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.Object obj14 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setDefaultJtaTimeout((long) (byte) 10);
        long long18 = atomikosProperties15.getDefaultJtaTimeout();
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        atomikosProperties15.setLogBaseName("tmlog");
        atomikosProperties15.setCheckpointInterval(300000L);
        int int25 = atomikosProperties15.getMaxActives();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = properties13.getOrDefault(obj14, (java.lang.Object) int25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10L + "'", long18 == 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
    }

    @Test
    public void test8206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8206");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test8207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8207");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean11 = atomikosProperties8.isForceShutdownOnVmExit();
        atomikosProperties8.setMaxActives(0);
        java.lang.String str14 = atomikosProperties8.getLogBaseName();
        boolean boolean15 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties8.asProperties();
        java.lang.String str20 = properties18.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        properties26.clear();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        long long34 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties35 = atomikosProperties32.asProperties();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        java.lang.Object obj45 = properties26.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties41);
        java.lang.Object obj46 = properties18.getOrDefault((java.lang.Object) 0.0d, (java.lang.Object) properties41);
        java.util.Properties properties47 = new java.util.Properties(properties41);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        properties52.clear();
        int int56 = properties52.size();
        java.util.Properties properties57 = new java.util.Properties(properties52);
        boolean boolean58 = properties52.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties52.elements();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = new java.util.Properties(properties64);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties52.contains((java.lang.Object) objEntrySet68);
        java.util.Properties properties70 = new java.util.Properties(properties52);
        boolean boolean71 = properties6.remove((java.lang.Object) properties41, (java.lang.Object) properties52);
        java.util.Properties properties72 = new java.util.Properties(properties6);
        java.util.Properties properties73 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties73.keys();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEnumeration74);
    }

    @Test
    public void test8208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8208");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
    }

    @Test
    public void test8209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8209");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10L + "'", long14 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test8210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8210");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        long long17 = atomikosProperties10.getDefaultJtaTimeout();
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.lang.Object obj19 = properties4.get((java.lang.Object) properties18);
        java.lang.String str20 = properties4.toString();
        properties4.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        java.util.Properties properties26 = atomikosProperties22.asProperties();
        long long27 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties28 = atomikosProperties22.asProperties();
        properties28.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties28.elements();
        java.util.Properties properties31 = new java.util.Properties(properties28);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = properties28.contains(obj34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
    }

    @Test
    public void test8211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8211");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        boolean boolean20 = properties9.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties21 = new java.util.Properties(properties9);
        int int22 = properties21.size();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration27 = properties26.propertyNames();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.lang.Object obj38 = properties26.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration37);
        java.util.Properties properties39 = new java.util.Properties(properties26);
        java.lang.Object obj40 = properties4.getOrDefault((java.lang.Object) properties25, (java.lang.Object) properties39);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.storeToXML(outputStream41, "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
    }

    @Test
    public void test8212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8212");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setService("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout(10000L);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean16 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test8213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8213");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Set<java.lang.String> strSet11 = properties10.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setMaxActives((int) (byte) 0);
        atomikosProperties13.setEnableLogging(true);
        atomikosProperties13.setForceShutdownOnVmExit(false);
        java.util.Properties properties22 = atomikosProperties13.asProperties();
        boolean boolean23 = atomikosProperties13.isThreadedTwoPhaseCommit();
        int int24 = atomikosProperties13.getMaxActives();
        java.util.Properties properties25 = atomikosProperties13.asProperties();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        boolean boolean33 = properties28.isEmpty();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        boolean boolean37 = properties28.containsKey((java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj44 = properties40.put((java.lang.Object) properties42, (java.lang.Object) (short) 1);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        boolean boolean53 = properties42.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet54 = properties42.stringPropertyNames();
        boolean boolean55 = properties36.containsKey((java.lang.Object) strSet54);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        properties60.clear();
        java.lang.String str65 = properties60.getProperty("");
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        boolean boolean74 = properties36.containsKey((java.lang.Object) properties60);
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Properties properties78 = new java.util.Properties(properties76);
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj82 = properties78.put((java.lang.Object) properties80, (java.lang.Object) (short) 1);
        properties80.clear();
        int int84 = properties80.size();
        java.lang.Object obj87 = properties80.setProperty("hi!", "hi!");
        java.lang.Object obj90 = properties80.setProperty("tmlog", "tmlog");
        java.lang.Object obj91 = properties60.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties92 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int93 = atomikosProperties92.getMaxActives();
        long long94 = atomikosProperties92.getMaxTimeout();
        java.util.Properties properties95 = atomikosProperties92.asProperties();
        boolean boolean96 = properties60.containsValue((java.lang.Object) properties95);
        java.util.Properties properties97 = new java.util.Properties(properties95);
        boolean boolean98 = properties97.isEmpty();
        java.lang.Object obj99 = properties10.replace((java.lang.Object) properties25, (java.lang.Object) boolean98);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 50 + "'", int93 == 50);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 300000L + "'", long94 == 300000L);
        org.junit.Assert.assertNotNull(properties95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test8214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8214");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 9);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean22 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test8215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8215");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setService("");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties11.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean15 = atomikosProperties14.isForceShutdownOnVmExit();
        java.util.Properties properties16 = atomikosProperties14.asProperties();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        properties21.clear();
        int int25 = properties21.size();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties30);
        java.util.Properties properties34 = new java.util.Properties(properties30);
        boolean boolean36 = properties21.remove((java.lang.Object) properties30, (java.lang.Object) 10.0f);
        boolean boolean37 = properties16.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties38 = new java.util.Properties(properties16);
        java.util.Properties properties39 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties16.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        long long44 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties41.isEnableLogging();
        java.lang.String str48 = atomikosProperties41.getLogBaseName();
        atomikosProperties41.setMaxTimeout(10L);
        long long51 = atomikosProperties41.getDefaultJtaTimeout();
        java.util.Properties properties52 = atomikosProperties41.asProperties();
        boolean boolean53 = properties16.equals((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setMaxActives((int) '#');
        atomikosProperties54.setEnableLogging(true);
        int int61 = atomikosProperties54.getMaxActives();
        boolean boolean62 = atomikosProperties54.isEnableLogging();
        java.util.Properties properties63 = atomikosProperties54.asProperties();
        java.util.Properties properties64 = atomikosProperties54.asProperties();
        atomikosProperties54.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties54.setForceShutdownOnVmExit(true);
        java.lang.Object obj69 = properties11.putIfAbsent((java.lang.Object) properties52, (java.lang.Object) true);
        java.util.Properties properties70 = new java.util.Properties(properties52);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        properties75.clear();
        properties75.clear();
        java.util.Properties properties81 = new java.util.Properties(properties75);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setThreadedTwoPhaseCommit(true);
        atomikosProperties82.setMaxActives((int) (byte) 0);
        atomikosProperties82.setEnableLogging(true);
        atomikosProperties82.setForceShutdownOnVmExit(false);
        java.util.Properties properties91 = atomikosProperties82.asProperties();
        boolean boolean92 = atomikosProperties82.isThreadedTwoPhaseCommit();
        int int93 = atomikosProperties82.getMaxActives();
        atomikosProperties82.setService("");
        java.util.Properties properties96 = atomikosProperties82.asProperties();
        java.lang.String str97 = atomikosProperties82.getService();
        java.lang.Object obj98 = properties52.getOrDefault((java.lang.Object) properties81, (java.lang.Object) str97);
        boolean boolean99 = properties81.isEmpty();
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10L + "'", long44 == 10L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10L + "'", long51 == 10L);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 35 + "'", int61 == 35);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(properties91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(properties96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + "" + "'", obj98, "");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test8216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8216");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean12 = atomikosProperties11.isForceShutdownOnVmExit();
        java.util.Properties properties13 = atomikosProperties11.asProperties();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        properties18.clear();
        int int22 = properties18.size();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = new java.util.Properties(properties27);
        java.util.Properties properties31 = new java.util.Properties(properties27);
        boolean boolean33 = properties18.remove((java.lang.Object) properties27, (java.lang.Object) 10.0f);
        boolean boolean34 = properties13.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties35 = new java.util.Properties(properties13);
        java.util.Set<java.lang.String> strSet36 = properties13.stringPropertyNames();
        java.util.Properties properties37 = new java.util.Properties(properties13);
        properties37.clear();
        boolean boolean39 = properties9.containsKey((java.lang.Object) properties37);
        properties9.clear();
        java.io.InputStream inputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(inputStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test8217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8217");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties4.containsKey((java.lang.Object) objEnumeration24);
        java.lang.Class<?> wildcardClass26 = properties4.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test8218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8218");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties12.setCheckpointInterval((long) (byte) 0);
        atomikosProperties12.setEnableLogging(true);
        java.lang.String str19 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setMaxActives((int) (short) 100);
        atomikosProperties12.setEnableLogging(true);
        boolean boolean24 = properties10.equals((java.lang.Object) atomikosProperties12);
        boolean boolean25 = atomikosProperties12.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test8219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8219");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str15 = atomikosProperties12.getLogBaseDir();
        boolean boolean16 = atomikosProperties12.isSerialJtaTransactions();
        atomikosProperties12.setService("{tmlog=}");
        boolean boolean19 = properties11.contains((java.lang.Object) "{tmlog=}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test8220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8220");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxActives((int) '#');
        atomikosProperties10.setForceShutdownOnVmExit(true);
        java.lang.String str17 = atomikosProperties10.getLogBaseDir();
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setEnableLogging(true);
        boolean boolean26 = properties18.containsKey((java.lang.Object) true);
        boolean boolean27 = properties9.contains((java.lang.Object) properties18);
        java.util.Properties properties28 = new java.util.Properties(properties18);
        java.io.PrintWriter printWriter29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.list(printWriter29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test8221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8221");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
    }

    @Test
    public void test8222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8222");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.lang.String str18 = properties4.toString();
        java.lang.String str19 = properties4.toString();
        java.lang.String str20 = properties4.toString();
        java.util.Set<java.lang.String> strSet21 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        boolean boolean25 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) 35);
        boolean boolean28 = atomikosProperties22.isEnableLogging();
        java.lang.Object obj29 = properties4.get((java.lang.Object) atomikosProperties22);
        java.util.Enumeration<?> wildcardEnumeration30 = properties4.propertyNames();
        java.util.Properties properties31 = new java.util.Properties(properties4);
        java.util.Enumeration<?> wildcardEnumeration32 = properties31.propertyNames();
        boolean boolean33 = properties31.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test8223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8223");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("");
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setService("");
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test8224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8224");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        boolean boolean50 = properties34.contains((java.lang.Object) "hi!");
        properties34.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties34.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties53.setService("tmlog");
        atomikosProperties53.setMaxTimeout((long) 1);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        properties68.clear();
        int int72 = properties68.size();
        java.util.Properties properties73 = new java.util.Properties(properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int75 = atomikosProperties74.getMaxActives();
        long long76 = atomikosProperties74.getMaxTimeout();
        java.util.Properties properties77 = atomikosProperties74.asProperties();
        java.util.Properties properties78 = atomikosProperties74.asProperties();
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.util.Properties properties81 = new java.util.Properties(properties79);
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        java.lang.Object obj85 = properties81.put((java.lang.Object) properties83, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        java.lang.Object obj87 = properties68.replace((java.lang.Object) atomikosProperties74, (java.lang.Object) properties83);
        java.util.Set<java.lang.String> strSet88 = properties68.stringPropertyNames();
        properties68.clear();
        java.util.Properties properties90 = new java.util.Properties(properties68);
        java.lang.Object obj91 = properties34.put((java.lang.Object) atomikosProperties53, (java.lang.Object) properties90);
        atomikosProperties53.setDefaultJtaTimeout(32L);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 50 + "'", int75 == 50);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test8225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8225");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        atomikosProperties0.setService("hi!");
        long long17 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
    }

    @Test
    public void test8226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8226");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("");
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.load(inputStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test8227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8227");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.save(outputStream12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
    }

    @Test
    public void test8228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8228");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        boolean boolean17 = properties4.isEmpty();
        java.lang.String str18 = properties4.toString();
        java.lang.Object obj19 = null;
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxActives((int) (byte) 0);
        boolean boolean32 = properties22.containsValue((java.lang.Object) atomikosProperties27);
        int int33 = properties22.size();
        java.util.Collection<java.lang.Object> objCollection34 = properties22.values();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = properties4.put(obj19, (java.lang.Object) objCollection34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(objCollection34);
    }

    @Test
    public void test8229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8229");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties13.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet25 = properties13.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        long long29 = atomikosProperties26.getDefaultJtaTimeout();
        java.lang.Object obj30 = properties13.get((java.lang.Object) atomikosProperties26);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties35.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj48 = properties35.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet49 = properties35.keySet();
        boolean boolean50 = properties13.containsKey((java.lang.Object) properties35);
        java.lang.Object obj53 = properties35.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{}");
        java.util.Properties properties54 = new java.util.Properties(properties35);
        java.util.Properties properties55 = new java.util.Properties(properties35);
        boolean boolean56 = properties4.containsKey((java.lang.Object) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setMaxTimeout((long) (short) -1);
        long long64 = atomikosProperties57.getDefaultJtaTimeout();
        boolean boolean65 = atomikosProperties57.isThreadedTwoPhaseCommit();
        long long66 = atomikosProperties57.getDefaultJtaTimeout();
        atomikosProperties57.setMaxActives(0);
        java.lang.Object obj69 = properties55.remove((java.lang.Object) atomikosProperties57);
        java.io.Writer writer70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.store(writer70, "{4=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10L + "'", long29 == 10L);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10L + "'", long64 == 10L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10L + "'", long66 == 10L);
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test8230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8230");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        long long18 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
    }

    @Test
    public void test8231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8231");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(0);
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval(500L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test8232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8232");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Set<java.lang.Object> objSet12 = properties10.keySet();
        java.util.Properties properties13 = new java.util.Properties(properties10);
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream14, "{{}={{}=1}, []={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
    }

    @Test
    public void test8233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8233");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxActives((int) '#');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        java.lang.Object obj26 = properties17.remove((java.lang.Object) atomikosProperties18);
        java.util.Collection<java.lang.Object> objCollection27 = properties17.values();
        boolean boolean28 = properties8.contains((java.lang.Object) properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setSerialJtaTransactions(true);
        java.util.Properties properties35 = atomikosProperties29.asProperties();
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean40 = atomikosProperties37.isForceShutdownOnVmExit();
        atomikosProperties37.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties37.setThreadedTwoPhaseCommit(false);
        boolean boolean45 = properties17.remove((java.lang.Object) properties36, (java.lang.Object) atomikosProperties37);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties50.clear();
        int int54 = properties50.size();
        java.util.Properties properties55 = new java.util.Properties(properties50);
        java.util.Properties properties56 = new java.util.Properties(properties50);
        java.util.Set<java.lang.Object> objSet57 = properties50.keySet();
        java.util.Properties properties58 = new java.util.Properties(properties50);
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties58.storeToXML(outputStream60, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(objSet57);
    }

    @Test
    public void test8234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8234");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean27 = properties16.contains((java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties16.entrySet();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxActives((int) (byte) 0);
        boolean boolean41 = properties31.containsValue((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setCheckpointInterval((long) 9);
        atomikosProperties36.setEnableLogging(false);
        boolean boolean46 = properties16.containsValue((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setThreadedTwoPhaseCommit(false);
        atomikosProperties36.setCheckpointInterval((long) 50);
        atomikosProperties36.setMaxTimeout((long) 100);
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 100);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test8235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8235");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setTransactionManagerUniqueName("{{}=1}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
    }

    @Test
    public void test8236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8236");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str3 = atomikosProperties0.getService();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test8237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8237");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        long long13 = atomikosProperties0.getCheckpointInterval();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test8238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8238");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.keys();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) (byte) 0);
        java.lang.Object obj34 = properties4.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet35 = properties4.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties(properties4);
        int int37 = properties36.size();
        java.io.InputStream inputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.loadFromXML(inputStream38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test8239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8239");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test8240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8240");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = properties13.toString();
        properties13.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        long long37 = atomikosProperties34.getDefaultJtaTimeout();
        atomikosProperties34.setTransactionManagerUniqueName("");
        boolean boolean40 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setDefaultJtaTimeout((long) '4');
        java.lang.String str43 = atomikosProperties34.getTransactionManagerUniqueName();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties46 = atomikosProperties34.asProperties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<?> wildcardEnumeration48 = properties47.propertyNames();
        java.util.Properties properties49 = new java.util.Properties(properties47);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Properties properties51 = new java.util.Properties(properties13);
        java.io.Writer writer52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties51.store(writer52, "{hi!=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10L + "'", long37 == 10L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
    }

    @Test
    public void test8241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8241");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxActives((int) (byte) 0);
        boolean boolean36 = properties26.containsValue((java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean42 = properties26.containsValue((java.lang.Object) atomikosProperties37);
        atomikosProperties37.setForceShutdownOnVmExit(true);
        java.lang.Object obj46 = properties13.putIfAbsent((java.lang.Object) atomikosProperties37, (java.lang.Object) (byte) 0);
        java.util.Properties properties47 = new java.util.Properties(properties13);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties52.entrySet();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties58.setCheckpointInterval((long) (byte) 0);
        atomikosProperties58.setEnableLogging(true);
        java.lang.Object obj65 = properties52.get((java.lang.Object) atomikosProperties58);
        atomikosProperties58.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean68 = atomikosProperties58.isSerialJtaTransactions();
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = properties13.getOrDefault((java.lang.Object) atomikosProperties58, obj69);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test8242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8242");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.util.Set<java.lang.Object> objSet68 = properties9.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        long long72 = atomikosProperties69.getDefaultJtaTimeout();
        atomikosProperties69.setTransactionManagerUniqueName("");
        long long75 = atomikosProperties69.getDefaultJtaTimeout();
        boolean boolean76 = atomikosProperties69.isEnableLogging();
        atomikosProperties69.setSerialJtaTransactions(false);
        java.lang.Object obj79 = properties9.remove((java.lang.Object) atomikosProperties69);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties9.keys();
        int int81 = properties9.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties9.entrySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10L + "'", long72 == 10L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(objEntrySet82);
    }

    @Test
    public void test8243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8243");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration17 = properties16.propertyNames();
        java.lang.Object obj18 = properties16.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties19.setCheckpointInterval((long) (byte) 0);
        atomikosProperties19.setTransactionManagerUniqueName("");
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties36.setCheckpointInterval((long) (byte) 0);
        atomikosProperties36.setTransactionManagerUniqueName("");
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        java.lang.String str44 = atomikosProperties36.getLogBaseName();
        java.util.Properties properties45 = atomikosProperties36.asProperties();
        java.lang.Object obj46 = properties27.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties36);
        long long47 = atomikosProperties36.getCheckpointInterval();
        java.lang.Object obj48 = properties16.remove((java.lang.Object) atomikosProperties36);
        java.util.Properties properties49 = new java.util.Properties(properties16);
        java.util.Properties properties50 = new java.util.Properties(properties49);
        boolean boolean51 = properties15.containsValue((java.lang.Object) properties49);
        java.lang.Object obj54 = properties49.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties55 = new java.util.Properties(properties49);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test8244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8244");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 9);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test8245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8245");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setMaxActives(10);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test8246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8246");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("{}");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test8247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8247");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties18.setCheckpointInterval((long) (byte) 0);
        atomikosProperties18.setTransactionManagerUniqueName("");
        java.util.Properties properties25 = atomikosProperties18.asProperties();
        java.lang.Object obj28 = properties25.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean29 = properties4.equals((java.lang.Object) properties25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties25.entrySet();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        boolean boolean35 = properties33.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setCheckpointInterval((long) (byte) 0);
        atomikosProperties38.setEnableLogging(true);
        long long45 = atomikosProperties38.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setMaxActives((int) (byte) 0);
        atomikosProperties46.setDefaultJtaTimeout((long) 10);
        atomikosProperties46.setDefaultJtaTimeout((long) (short) 10);
        boolean boolean55 = atomikosProperties46.isSerialJtaTransactions();
        boolean boolean56 = properties36.remove((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int58 = atomikosProperties57.getMaxActives();
        long long59 = atomikosProperties57.getMaxTimeout();
        java.util.Properties properties60 = atomikosProperties57.asProperties();
        java.util.Properties properties61 = atomikosProperties57.asProperties();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        boolean boolean66 = properties64.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        java.lang.Object obj75 = properties64.remove((java.lang.Object) properties71);
        boolean boolean76 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet77 = properties71.entrySet();
        java.util.Properties properties78 = new java.util.Properties(properties71);
        boolean boolean79 = properties61.contains((java.lang.Object) properties78);
        java.lang.String str81 = properties61.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties61.elements();
        boolean boolean83 = properties25.remove((java.lang.Object) atomikosProperties38, (java.lang.Object) objEnumeration82);
        atomikosProperties38.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties38.setEnableLogging(false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objEntrySet77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test8248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8248");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.lang.String str19 = properties12.getProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream20, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test8249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8249");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        java.util.Collection<java.lang.Object> objCollection36 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setCheckpointInterval((long) (byte) 0);
        atomikosProperties37.setTransactionManagerUniqueName("");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.lang.String str45 = atomikosProperties37.getLogBaseName();
        atomikosProperties37.setCheckpointInterval(100L);
        atomikosProperties37.setLogBaseName("");
        atomikosProperties37.setCheckpointInterval((long) (byte) 1);
        boolean boolean52 = properties4.containsKey((java.lang.Object) atomikosProperties37);
        boolean boolean53 = atomikosProperties37.isEnableLogging();
        java.util.Properties properties54 = atomikosProperties37.asProperties();
        boolean boolean55 = atomikosProperties37.isEnableLogging();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test8250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8250");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        atomikosProperties15.setService("tmlog");
        atomikosProperties15.setMaxActives((int) '4');
        atomikosProperties15.setCheckpointInterval((long) '#');
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
    }

    @Test
    public void test8251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8251");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNotNull(properties1);
    }

    @Test
    public void test8252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8252");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = new java.util.Properties(properties4);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration24 = properties23.propertyNames();
        java.lang.Object obj25 = properties23.clone();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        boolean boolean33 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setTransactionManagerUniqueName("");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.lang.Object obj42 = properties28.remove((java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties43.setCheckpointInterval((long) (byte) 0);
        atomikosProperties43.setTransactionManagerUniqueName("");
        java.lang.Object obj50 = properties41.remove((java.lang.Object) atomikosProperties43);
        boolean boolean51 = properties23.containsKey((java.lang.Object) properties41);
        java.util.Properties properties52 = new java.util.Properties(properties41);
        java.util.Set<java.lang.Object> objSet53 = properties52.keySet();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        boolean boolean58 = properties56.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties59 = new java.util.Properties(properties56);
        java.lang.String str61 = properties59.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        java.lang.String str70 = atomikosProperties62.getLogBaseName();
        atomikosProperties62.setCheckpointInterval(100L);
        java.lang.String str73 = atomikosProperties62.getTransactionManagerUniqueName();
        atomikosProperties62.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        boolean boolean78 = properties59.contains((java.lang.Object) true);
        java.util.Set<java.lang.String> strSet79 = properties59.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int81 = atomikosProperties80.getMaxActives();
        long long82 = atomikosProperties80.getMaxTimeout();
        java.util.Properties properties83 = atomikosProperties80.asProperties();
        atomikosProperties80.setTransactionManagerUniqueName("");
        java.util.Properties properties86 = atomikosProperties80.asProperties();
        atomikosProperties80.setCheckpointInterval((long) 35);
        atomikosProperties80.setMaxActives(11);
        boolean boolean91 = properties4.replace((java.lang.Object) properties52, (java.lang.Object) properties59, (java.lang.Object) atomikosProperties80);
        long long92 = atomikosProperties80.getCheckpointInterval();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 50 + "'", int81 == 50);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 300000L + "'", long82 == 300000L);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 35L + "'", long92 == 35L);
    }

    @Test
    public void test8253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8253");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test8254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8254");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<?> wildcardEnumeration14 = properties13.propertyNames();
        java.util.Set<java.lang.Object> objSet15 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        properties35.clear();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int42 = atomikosProperties41.getMaxActives();
        long long43 = atomikosProperties41.getMaxTimeout();
        java.util.Properties properties44 = atomikosProperties41.asProperties();
        java.util.Properties properties45 = atomikosProperties41.asProperties();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        java.lang.Object obj54 = properties35.replace((java.lang.Object) atomikosProperties41, (java.lang.Object) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        java.lang.String str59 = atomikosProperties56.getService();
        boolean boolean60 = atomikosProperties56.isSerialJtaTransactions();
        java.lang.Object obj61 = properties50.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties56);
        boolean boolean62 = properties29.equals((java.lang.Object) properties50);
        java.util.Properties properties63 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setCheckpointInterval((long) (byte) 0);
        atomikosProperties64.setEnableLogging(true);
        java.lang.String str71 = atomikosProperties64.getLogBaseName();
        atomikosProperties64.setCheckpointInterval((long) ' ');
        java.util.Properties properties74 = atomikosProperties64.asProperties();
        java.util.Properties properties75 = new java.util.Properties(properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int77 = atomikosProperties76.getMaxActives();
        long long78 = atomikosProperties76.getMaxTimeout();
        java.util.Properties properties79 = atomikosProperties76.asProperties();
        atomikosProperties76.setTransactionManagerUniqueName("");
        java.util.Properties properties82 = atomikosProperties76.asProperties();
        long long83 = atomikosProperties76.getDefaultJtaTimeout();
        java.lang.String str84 = atomikosProperties76.getService();
        java.lang.Object obj85 = properties74.get((java.lang.Object) atomikosProperties76);
        java.lang.Object obj86 = properties13.put((java.lang.Object) properties29, (java.lang.Object) atomikosProperties76);
        long long87 = atomikosProperties76.getDefaultJtaTimeout();
        atomikosProperties76.setService("{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 50 + "'", int77 == 50);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10000L + "'", long83 == 10000L);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 10000L + "'", long87 == 10000L);
    }

    @Test
    public void test8255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8255");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.list(printStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test8256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8256");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        long long6 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
    }

    @Test
    public void test8257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8257");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval(100L);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.lang.String str9 = properties6.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}", "{{}=1}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{{}=1}" + "'", str9, "{{}=1}");
    }

    @Test
    public void test8258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8258");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        int int19 = properties16.size();
        java.util.Properties properties20 = new java.util.Properties(properties16);
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test8259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8259");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test8260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8260");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        boolean boolean14 = atomikosProperties11.isEnableLogging();
        boolean boolean15 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties16 = atomikosProperties11.asProperties();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties29.clone();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        java.lang.Object obj48 = properties34.remove((java.lang.Object) properties47);
        java.lang.Object obj49 = properties29.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties34);
        java.lang.String str51 = properties29.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties52 = new java.util.Properties(properties29);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        properties57.clear();
        int int61 = properties57.size();
        java.lang.Object obj64 = properties57.setProperty("hi!", "hi!");
        java.lang.Object obj67 = properties57.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties57.elements();
        boolean boolean69 = properties52.contains((java.lang.Object) objEnumeration68);
        java.lang.Object obj70 = properties16.get((java.lang.Object) objEnumeration68);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        boolean boolean72 = properties16.isEmpty();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test8261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8261");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("");
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(false);
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test8262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8262");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        atomikosProperties15.setForceShutdownOnVmExit(true);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        long long23 = atomikosProperties15.getDefaultJtaTimeout();
        boolean boolean24 = properties12.containsValue((java.lang.Object) atomikosProperties15);
        boolean boolean25 = atomikosProperties15.isEnableLogging();
        long long26 = atomikosProperties15.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
    }

    @Test
    public void test8263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8263");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test8264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8264");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test8265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8265");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        java.util.Properties properties17 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.store(outputStream19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=32, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test8266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8266");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        long long14 = atomikosProperties0.getMaxTimeout();
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        int int16 = atomikosProperties0.getMaxActives();
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test8267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8267");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (short) 10);
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test8268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8268");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setTransactionManagerUniqueName("");
        atomikosProperties29.setCheckpointInterval(100L);
        boolean boolean37 = properties26.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties29);
        java.util.Properties properties38 = new java.util.Properties(properties26);
        properties26.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean41 = atomikosProperties40.isForceShutdownOnVmExit();
        java.util.Properties properties42 = atomikosProperties40.asProperties();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        properties47.clear();
        int int51 = properties47.size();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        java.util.Properties properties59 = new java.util.Properties(properties56);
        java.util.Properties properties60 = new java.util.Properties(properties56);
        boolean boolean62 = properties47.remove((java.lang.Object) properties56, (java.lang.Object) 10.0f);
        boolean boolean63 = properties42.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties64 = new java.util.Properties(properties42);
        java.util.Properties properties65 = new java.util.Properties(properties42);
        java.util.Enumeration<?> wildcardEnumeration66 = properties65.propertyNames();
        java.lang.Object obj67 = properties16.putIfAbsent((java.lang.Object) properties26, (java.lang.Object) wildcardEnumeration66);
        java.util.Properties properties68 = new java.util.Properties(properties26);
        java.util.Collection<java.lang.Object> objCollection69 = properties26.values();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objCollection69);
    }

    @Test
    public void test8269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8269");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        atomikosProperties10.setLogBaseName("");
        java.lang.String str26 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setMaxActives(1);
        atomikosProperties10.setMaxActives((int) (byte) 100);
        boolean boolean31 = atomikosProperties10.isEnableLogging();
        java.lang.String str32 = atomikosProperties10.getService();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test8270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8270");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.elements();
        java.util.Properties properties20 = new java.util.Properties(properties4);
        java.util.Properties properties21 = new java.util.Properties(properties4);
        boolean boolean22 = properties21.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        boolean boolean26 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) 35);
        java.util.Properties properties29 = atomikosProperties23.asProperties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        boolean boolean34 = properties32.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties35 = new java.util.Properties(properties32);
        java.lang.String str37 = properties35.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties35.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties35.keys();
        java.lang.Object obj40 = properties21.putIfAbsent((java.lang.Object) properties29, (java.lang.Object) properties35);
        properties21.clear();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test8271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8271");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setService("tmlog");
        java.lang.String str16 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
    }

    @Test
    public void test8272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8272");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.lang.String str19 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.setMaxActives(0);
        boolean boolean24 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties10.getService();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test8273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8273");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties14.clear();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        properties24.clear();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj38 = properties4.put((java.lang.Object) properties14, (java.lang.Object) properties32);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet55 = properties43.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        boolean boolean63 = atomikosProperties56.isEnableLogging();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setLogBaseDir("");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        java.util.Properties properties75 = new java.util.Properties(properties72);
        boolean boolean76 = properties43.remove((java.lang.Object) "", (java.lang.Object) properties75);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.lang.Object obj80 = properties79.clone();
        boolean boolean81 = properties43.contains(obj80);
        java.util.Collection<java.lang.Object> objCollection82 = properties43.values();
        java.lang.String str84 = properties43.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj85 = properties43.clone();
        boolean boolean86 = properties14.containsValue((java.lang.Object) properties43);
        java.util.Set<java.lang.Object> objSet87 = properties43.keySet();
        java.util.Properties properties88 = new java.util.Properties(properties43);
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties88.storeToXML(outputStream89, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{}");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objSet87);
    }

    @Test
    public void test8274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8274");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("{tmlog=}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test8275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8275");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.elements();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean14 = atomikosProperties11.isForceShutdownOnVmExit();
        atomikosProperties11.setMaxActives(0);
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        boolean boolean20 = properties10.equals((java.lang.Object) properties19);
        java.lang.String str21 = properties19.toString();
        java.lang.Object obj22 = properties19.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int24 = atomikosProperties23.getMaxActives();
        long long25 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties26 = atomikosProperties23.asProperties();
        boolean boolean27 = properties19.equals((java.lang.Object) properties26);
        java.util.Properties properties28 = new java.util.Properties(properties19);
        properties28.clear();
        boolean boolean30 = properties28.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}" + "'", str21, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test8276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8276");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setService("{}");
        atomikosProperties0.setCheckpointInterval(52L);
        atomikosProperties0.setCheckpointInterval((long) 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test8277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8277");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        int int26 = atomikosProperties22.getMaxActives();
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) 1);
        atomikosProperties22.setLogBaseDir("{}");
        atomikosProperties22.setDefaultJtaTimeout((long) (short) 10);
        long long33 = atomikosProperties22.getMaxTimeout();
        boolean boolean34 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        atomikosProperties22.setMaxActives((int) (short) 1);
        long long39 = atomikosProperties22.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
    }

    @Test
    public void test8278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8278");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test8279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8279");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval(500L);
        java.lang.String str6 = atomikosProperties0.getService();
        java.lang.String str7 = atomikosProperties0.getService();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str14 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test8280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8280");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
    }

    @Test
    public void test8281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8281");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Properties properties17 = new java.util.Properties(properties14);
        java.util.Properties properties18 = new java.util.Properties(properties14);
        java.util.Set<java.lang.Object> objSet19 = properties18.keySet();
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties(properties18);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        properties26.clear();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.String str34 = properties26.getProperty("hi!");
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration36 = properties35.propertyNames();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj44 = properties40.put((java.lang.Object) properties42, (java.lang.Object) (short) 1);
        java.util.Properties properties45 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.Object obj47 = properties35.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration46);
        java.lang.Object obj48 = properties26.remove((java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties26.elements();
        java.lang.Object obj50 = properties21.get((java.lang.Object) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int52 = atomikosProperties51.getMaxActives();
        long long53 = atomikosProperties51.getMaxTimeout();
        java.util.Properties properties54 = atomikosProperties51.asProperties();
        atomikosProperties51.setService("hi!");
        java.lang.String str57 = atomikosProperties51.getService();
        boolean boolean58 = properties21.equals((java.lang.Object) atomikosProperties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        long long62 = atomikosProperties59.getDefaultJtaTimeout();
        atomikosProperties59.setTransactionManagerUniqueName("");
        boolean boolean65 = atomikosProperties59.isEnableLogging();
        atomikosProperties59.setDefaultJtaTimeout((long) '4');
        java.lang.String str68 = atomikosProperties59.getTransactionManagerUniqueName();
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        java.lang.String str71 = atomikosProperties59.getLogBaseName();
        atomikosProperties59.setMaxActives(1);
        java.lang.Object obj74 = properties9.put((java.lang.Object) boolean58, (java.lang.Object) atomikosProperties59);
        long long75 = atomikosProperties59.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10L + "'", long62 == 10L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 500L + "'", long75 == 500L);
    }

    @Test
    public void test8282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8282");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        boolean boolean14 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties9.entrySet();
        java.util.Properties properties16 = new java.util.Properties(properties9);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties24 = new java.util.Properties(properties21);
        java.util.Properties properties25 = new java.util.Properties(properties21);
        java.util.Set<java.lang.Object> objSet26 = properties25.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = new java.util.Properties(properties40);
        java.util.Properties properties44 = new java.util.Properties(properties40);
        boolean boolean46 = properties31.remove((java.lang.Object) properties40, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties40.elements();
        java.util.Properties properties48 = new java.util.Properties(properties40);
        java.lang.Object obj49 = properties16.putIfAbsent((java.lang.Object) objSet26, (java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties16.elements();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        properties57.clear();
        java.lang.String str62 = properties57.getProperty("");
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties57.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties57.elements();
        java.util.Set<java.lang.Object> objSet73 = properties57.keySet();
        java.lang.Object obj74 = properties16.put((java.lang.Object) "{}", (java.lang.Object) properties57);
        java.io.InputStream inputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.load(inputStream75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test8283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8283");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.lang.Object obj44 = properties26.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{}");
        properties26.clear();
        int int46 = properties26.size();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties51.clear();
        java.lang.String str56 = properties51.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setMaxTimeout((long) (short) -1);
        long long64 = atomikosProperties57.getDefaultJtaTimeout();
        java.util.Properties properties65 = atomikosProperties57.asProperties();
        java.lang.Object obj66 = properties51.get((java.lang.Object) properties65);
        java.lang.String str67 = properties51.toString();
        properties51.clear();
        java.util.Enumeration<?> wildcardEnumeration69 = properties51.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean73 = atomikosProperties70.isForceShutdownOnVmExit();
        atomikosProperties70.setCheckpointInterval(500L);
        java.lang.String str76 = atomikosProperties70.getService();
        java.lang.String str77 = atomikosProperties70.getService();
        atomikosProperties70.setMaxTimeout((long) 0);
        java.util.Properties properties80 = atomikosProperties70.asProperties();
        java.util.Properties properties81 = atomikosProperties70.asProperties();
        boolean boolean82 = properties26.remove((java.lang.Object) wildcardEnumeration69, (java.lang.Object) properties81);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10L + "'", long64 == 10L);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{}" + "'", str67, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test8284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8284");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties12.entrySet();
        java.util.Collection<java.lang.Object> objCollection14 = properties12.values();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Properties properties22 = new java.util.Properties(properties19);
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        java.util.Properties properties25 = new java.util.Properties(properties23);
        int int26 = properties25.size();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        boolean boolean42 = properties31.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet43 = properties31.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        long long47 = atomikosProperties44.getDefaultJtaTimeout();
        java.lang.Object obj48 = properties31.get((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setLogBaseDir("{}");
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        int int57 = properties56.size();
        java.lang.Object obj58 = properties25.getOrDefault((java.lang.Object) atomikosProperties44, (java.lang.Object) properties56);
        long long59 = atomikosProperties44.getMaxTimeout();
        boolean boolean60 = properties12.containsKey((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setMaxActives((int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10L + "'", long47 == 10L);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test8285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8285");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
    }

    @Test
    public void test8286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8286");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setEnableLogging(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setTransactionManagerUniqueName("tmlog");
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        atomikosProperties11.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long21 = atomikosProperties11.getMaxTimeout();
        boolean boolean22 = properties9.contains((java.lang.Object) atomikosProperties11);
        long long23 = atomikosProperties11.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
    }

    @Test
    public void test8287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8287");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.Object obj13 = properties12.clone();
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream14, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals(obj13.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test8288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8288");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties14.clear();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        properties24.clear();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj38 = properties4.put((java.lang.Object) properties14, (java.lang.Object) properties32);
        java.util.Set<java.lang.Object> objSet39 = properties32.keySet();
        java.io.OutputStream outputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties32.storeToXML(outputStream40, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet39);
    }

    @Test
    public void test8289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8289");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("hi!");
        long long7 = atomikosProperties0.getCheckpointInterval();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.Class<?> wildcardClass10 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test8290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8290");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        atomikosProperties24.setLogBaseName("");
        atomikosProperties24.setMaxActives((-1));
        java.lang.Object obj30 = properties13.remove((java.lang.Object) atomikosProperties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        long long34 = atomikosProperties31.getDefaultJtaTimeout();
        java.lang.String str35 = atomikosProperties31.getTransactionManagerUniqueName();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.Class<?> wildcardClass39 = atomikosProperties31.getClass();
        boolean boolean40 = properties13.equals((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = properties13.clone();
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream42, "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=300000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
    }

    @Test
    public void test8291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8291");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        properties2.clear();
        java.util.Properties properties9 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        long long13 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setTransactionManagerUniqueName("hi!");
        atomikosProperties10.setLogBaseName("tmlog");
        atomikosProperties10.setCheckpointInterval(300000L);
        boolean boolean20 = properties2.containsKey((java.lang.Object) 300000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.String str29 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (-1));
        java.lang.Object obj32 = properties2.get((java.lang.Object) (-1));
        java.util.Properties properties33 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.io.OutputStream outputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.storeToXML(outputStream35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration34);
    }

    @Test
    public void test8292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8292");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.lang.Object obj26 = properties15.remove((java.lang.Object) properties22);
        java.lang.Object obj29 = properties22.setProperty("", "");
        properties22.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean32 = atomikosProperties31.isForceShutdownOnVmExit();
        java.lang.String str33 = atomikosProperties31.getLogBaseName();
        java.lang.String str34 = atomikosProperties31.getService();
        atomikosProperties31.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long37 = atomikosProperties31.getMaxTimeout();
        atomikosProperties31.setEnableLogging(false);
        java.lang.Object obj40 = properties12.put((java.lang.Object) properties22, (java.lang.Object) false);
        java.lang.Object obj41 = properties22.clone();
        java.lang.String str42 = properties22.toString();
        java.util.Enumeration<?> wildcardEnumeration43 = properties22.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration44 = properties22.propertyNames();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration43);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
    }

    @Test
    public void test8293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8293");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test8294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8294");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties8.isEnableLogging();
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties18.setSerialJtaTransactions(false);
        atomikosProperties18.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setTransactionManagerUniqueName("");
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        java.lang.String str33 = atomikosProperties25.getLogBaseName();
        java.util.Properties properties34 = atomikosProperties25.asProperties();
        java.lang.Object obj35 = properties16.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties36 = atomikosProperties25.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.lang.Object obj39 = properties6.putIfAbsent((java.lang.Object) objEnumeration37, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj40 = properties6.clone();
        java.util.Properties properties41 = new java.util.Properties(properties6);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test8295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8295");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test8296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8296");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxActives((int) '#');
        atomikosProperties23.setEnableLogging(true);
        int int30 = atomikosProperties23.getMaxActives();
        boolean boolean31 = properties4.containsValue((java.lang.Object) atomikosProperties23);
        boolean boolean32 = atomikosProperties23.isForceShutdownOnVmExit();
        long long33 = atomikosProperties23.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
    }

    @Test
    public void test8297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8297");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        boolean boolean13 = properties11.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties14 = new java.util.Properties(properties11);
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties20.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet32 = properties20.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties20.elements();
        java.lang.String str34 = properties20.toString();
        boolean boolean35 = properties20.isEmpty();
        boolean boolean36 = properties15.containsValue((java.lang.Object) boolean35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties41.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        long long49 = atomikosProperties46.getDefaultJtaTimeout();
        atomikosProperties46.setTransactionManagerUniqueName("");
        boolean boolean52 = atomikosProperties46.isEnableLogging();
        boolean boolean53 = properties41.containsKey((java.lang.Object) boolean52);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties41.containsKey((java.lang.Object) objEnumeration61);
        boolean boolean63 = properties15.containsValue((java.lang.Object) objEnumeration61);
        java.lang.Object obj64 = properties8.remove((java.lang.Object) properties15);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration66 = properties65.propertyNames();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        java.util.Properties properties75 = new java.util.Properties(properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties75.elements();
        java.lang.Object obj77 = properties65.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration76);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties78.setCheckpointInterval((long) (byte) 0);
        atomikosProperties78.setTransactionManagerUniqueName("");
        boolean boolean85 = atomikosProperties78.isEnableLogging();
        java.util.Properties properties86 = atomikosProperties78.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties86.keys();
        boolean boolean88 = properties65.contains((java.lang.Object) objEnumeration87);
        java.lang.Object obj89 = properties65.clone();
        boolean boolean90 = properties15.equals(obj89);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10L + "'", long49 == 10L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(wildcardEnumeration66);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test8298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8298");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxActives((int) '#');
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Object obj16 = properties7.remove((java.lang.Object) atomikosProperties8);
        boolean boolean17 = atomikosProperties8.isForceShutdownOnVmExit();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        long long20 = atomikosProperties8.getMaxTimeout();
        java.lang.String str21 = atomikosProperties8.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test8299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8299");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.keys();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties9.put((java.lang.Object) properties11, (java.lang.Object) (short) 1);
        boolean boolean14 = properties9.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        boolean boolean18 = properties9.containsKey((java.lang.Object) properties17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        boolean boolean34 = properties23.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet35 = properties23.stringPropertyNames();
        boolean boolean36 = properties17.containsKey((java.lang.Object) strSet35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        boolean boolean55 = properties17.containsKey((java.lang.Object) properties41);
        boolean boolean57 = properties41.contains((java.lang.Object) "hi!");
        properties41.clear();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        boolean boolean63 = properties61.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties64 = new java.util.Properties(properties61);
        java.lang.String str66 = properties64.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setDefaultJtaTimeout((long) (byte) 10);
        long long70 = atomikosProperties67.getDefaultJtaTimeout();
        atomikosProperties67.setTransactionManagerUniqueName("hi!");
        atomikosProperties67.setLogBaseName("tmlog");
        boolean boolean75 = atomikosProperties67.isSerialJtaTransactions();
        java.util.Properties properties76 = atomikosProperties67.asProperties();
        boolean boolean77 = properties64.equals((java.lang.Object) atomikosProperties67);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties64.entrySet();
        boolean boolean79 = properties64.isEmpty();
        java.lang.Object obj80 = properties41.remove((java.lang.Object) boolean79);
        boolean boolean81 = properties5.equals((java.lang.Object) boolean79);
        boolean boolean82 = properties5.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration83 = properties5.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10L + "'", long70 == 10L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration83);
    }

    @Test
    public void test8300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8300");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxActives((int) '#');
        atomikosProperties23.setEnableLogging(true);
        int int30 = atomikosProperties23.getMaxActives();
        boolean boolean31 = properties4.containsValue((java.lang.Object) atomikosProperties23);
        boolean boolean32 = atomikosProperties23.isForceShutdownOnVmExit();
        atomikosProperties23.setEnableLogging(true);
        java.util.Properties properties35 = atomikosProperties23.asProperties();
        atomikosProperties23.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties23.setLogBaseDir("{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=300000}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties35);
    }

    @Test
    public void test8301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8301");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        atomikosProperties8.setCheckpointInterval(100L);
        java.lang.String str19 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        boolean boolean24 = properties5.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int26 = atomikosProperties25.getMaxActives();
        long long27 = atomikosProperties25.getMaxTimeout();
        java.lang.String str28 = atomikosProperties25.getLogBaseDir();
        java.lang.String str29 = atomikosProperties25.getTransactionManagerUniqueName();
        atomikosProperties25.setMaxTimeout((long) (byte) 10);
        long long32 = atomikosProperties25.getCheckpointInterval();
        int int33 = atomikosProperties25.getMaxActives();
        long long34 = atomikosProperties25.getMaxTimeout();
        long long35 = atomikosProperties25.getCheckpointInterval();
        java.lang.Object obj36 = properties5.remove((java.lang.Object) atomikosProperties25);
        java.io.OutputStream outputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.save(outputStream37, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 500L + "'", long32 == 500L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test8302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8302");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        properties2.clear();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.String str31 = properties27.toString();
        boolean boolean32 = properties2.remove((java.lang.Object) (short) 10, (java.lang.Object) str31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties2.elements();
        java.util.Properties properties34 = new java.util.Properties(properties2);
        java.util.Collection<java.lang.Object> objCollection35 = properties2.values();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        boolean boolean40 = properties38.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj41 = properties38.clone();
        java.util.Enumeration<?> wildcardEnumeration42 = properties38.propertyNames();
        java.lang.Object obj43 = properties2.remove((java.lang.Object) wildcardEnumeration42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setDefaultJtaTimeout((long) (-1));
        java.lang.String str55 = atomikosProperties44.getService();
        boolean boolean56 = atomikosProperties44.isForceShutdownOnVmExit();
        int int57 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties60 = atomikosProperties44.asProperties();
        boolean boolean61 = properties2.containsKey((java.lang.Object) atomikosProperties44);
        java.lang.Object obj62 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setMaxActives((int) '#');
        atomikosProperties63.setForceShutdownOnVmExit(true);
        java.lang.String str70 = atomikosProperties63.getLogBaseDir();
        java.util.Properties properties71 = atomikosProperties63.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean73 = atomikosProperties72.isSerialJtaTransactions();
        boolean boolean74 = properties71.equals((java.lang.Object) atomikosProperties72);
        atomikosProperties72.setService("{}");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = properties2.replace(obj62, (java.lang.Object) atomikosProperties72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 50 + "'", int57 == 50);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test8303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8303");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties8 = new java.util.Properties(properties4);
        boolean boolean9 = properties4.isEmpty();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        boolean boolean25 = properties14.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet26 = properties14.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxActives((int) (byte) 0);
        atomikosProperties27.setEnableLogging(true);
        atomikosProperties27.setForceShutdownOnVmExit(false);
        java.lang.Object obj36 = properties14.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        long long40 = atomikosProperties37.getDefaultJtaTimeout();
        atomikosProperties37.setTransactionManagerUniqueName("");
        long long43 = atomikosProperties37.getDefaultJtaTimeout();
        boolean boolean44 = atomikosProperties37.isEnableLogging();
        atomikosProperties37.setService("{}");
        atomikosProperties37.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        boolean boolean64 = properties53.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj66 = properties53.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet67 = properties53.keySet();
        properties53.clear();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet77 = properties73.entrySet();
        boolean boolean78 = properties53.equals((java.lang.Object) properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties73.elements();
        boolean boolean80 = properties14.remove((java.lang.Object) "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", (java.lang.Object) objEnumeration79);
        java.util.Properties properties81 = new java.util.Properties(properties14);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        boolean boolean83 = properties4.isEmpty();
        java.lang.Object obj84 = properties4.clone();
        java.io.OutputStream outputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream85, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10L + "'", long40 == 10L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10L + "'", long43 == 10L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNotNull(objEntrySet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "{}");
    }

    @Test
    public void test8304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8304");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxTimeout((long) (-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test8305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8305");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test8306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8306");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj5 = properties2.clone();
        java.util.Enumeration<?> wildcardEnumeration6 = properties2.propertyNames();
        int int7 = properties2.size();
        boolean boolean8 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties9.setCheckpointInterval((long) (byte) 0);
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        java.lang.String str17 = atomikosProperties9.getLogBaseName();
        atomikosProperties9.setThreadedTwoPhaseCommit(false);
        atomikosProperties9.setSerialJtaTransactions(true);
        java.lang.String str22 = atomikosProperties9.getTransactionManagerUniqueName();
        long long23 = atomikosProperties9.getMaxTimeout();
        long long24 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setDefaultJtaTimeout((long) '4');
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        boolean boolean33 = properties31.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        java.lang.Object obj42 = properties31.remove((java.lang.Object) properties38);
        java.lang.Object obj45 = properties38.setProperty("", "");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        boolean boolean51 = properties49.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        java.lang.Object obj60 = properties49.remove((java.lang.Object) properties56);
        java.lang.Object obj63 = properties56.setProperty("", "");
        java.lang.String str65 = properties56.getProperty("tmlog");
        java.util.Properties properties66 = new java.util.Properties(properties56);
        boolean boolean67 = properties38.remove((java.lang.Object) "hi!", (java.lang.Object) properties66);
        int int68 = properties38.size();
        java.util.Properties properties69 = new java.util.Properties(properties38);
        java.lang.Object obj70 = properties2.getOrDefault((java.lang.Object) true, (java.lang.Object) properties38);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10L + "'", long24 == 10L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{=}");
    }

    @Test
    public void test8307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8307");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.keys();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) (byte) 0);
        java.lang.Object obj34 = properties4.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet35 = properties4.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection37 = properties36.values();
        java.io.PrintWriter printWriter38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.list(printWriter38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(objCollection37);
    }

    @Test
    public void test8308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8308");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.Object obj12 = properties0.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        java.lang.Object obj17 = properties0.remove((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setMaxActives(0);
        atomikosProperties13.setMaxTimeout((-1L));
        atomikosProperties13.setEnableLogging(true);
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test8309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8309");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.keys();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) (byte) 0);
        java.lang.Object obj34 = properties4.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) (byte) 0);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties39.keys();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        boolean boolean59 = properties54.isEmpty();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        boolean boolean63 = properties54.containsKey((java.lang.Object) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setMaxActives((int) (byte) 0);
        java.lang.Object obj69 = properties39.getOrDefault((java.lang.Object) boolean63, (java.lang.Object) (byte) 0);
        boolean boolean70 = properties4.equals((java.lang.Object) (byte) 0);
        properties4.clear();
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(outputStream72, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 0 + "'", obj69, (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test8310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8310");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Collection<java.lang.Object> objCollection6 = properties2.values();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties2.keys();
        java.lang.String str9 = properties2.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Collection<java.lang.Object> objCollection10 = properties2.values();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(objCollection10);
    }

    @Test
    public void test8311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8311");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setLogBaseName("hi!");
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test8312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8312");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives(52);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test8313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8313");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((-1L));
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objSet15);
    }

    @Test
    public void test8314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8314");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str10 = atomikosProperties0.getService();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        java.lang.String str21 = atomikosProperties13.getTransactionManagerUniqueName();
        java.util.Properties properties22 = atomikosProperties13.asProperties();
        atomikosProperties13.setCheckpointInterval((long) '4');
        long long25 = atomikosProperties13.getMaxTimeout();
        atomikosProperties13.setCheckpointInterval((long) 100);
        java.util.Properties properties28 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.io.PrintStream printStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.list(printStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(properties28);
    }

    @Test
    public void test8315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8315");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        atomikosProperties10.setLogBaseName("");
        java.lang.String str26 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setMaxActives(1);
        java.util.Properties properties29 = atomikosProperties10.asProperties();
        java.lang.Object obj32 = properties29.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        properties37.clear();
        int int41 = properties37.size();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Properties properties49 = new java.util.Properties(properties46);
        java.util.Properties properties50 = new java.util.Properties(properties46);
        boolean boolean52 = properties37.remove((java.lang.Object) properties46, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties46.elements();
        java.util.Properties properties54 = new java.util.Properties(properties46);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties57.clone();
        java.lang.Object obj61 = properties57.setProperty("tmlog", "");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties57.elements();
        java.util.Properties properties64 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        boolean boolean68 = atomikosProperties65.isEnableLogging();
        atomikosProperties65.setCheckpointInterval((long) 35);
        java.util.Properties properties71 = atomikosProperties65.asProperties();
        java.lang.Object obj72 = properties29.getOrDefault((java.lang.Object) properties64, (java.lang.Object) atomikosProperties65);
        int int73 = properties64.size();
        java.util.Set<java.lang.String> strSet74 = properties64.stringPropertyNames();
        java.lang.Object obj75 = properties64.clone();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
    }

    @Test
    public void test8316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8316");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) (short) 100);
        atomikosProperties0.setDefaultJtaTimeout((long) 9);
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties13.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setMaxTimeout((long) (short) -1);
        long long23 = atomikosProperties16.getDefaultJtaTimeout();
        boolean boolean24 = atomikosProperties16.isThreadedTwoPhaseCommit();
        atomikosProperties16.setForceShutdownOnVmExit(true);
        long long27 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties28 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) (byte) 0);
        atomikosProperties29.setEnableLogging(true);
        atomikosProperties29.setForceShutdownOnVmExit(false);
        boolean boolean38 = atomikosProperties29.isThreadedTwoPhaseCommit();
        atomikosProperties29.setForceShutdownOnVmExit(false);
        atomikosProperties29.setEnableLogging(false);
        java.util.Properties properties43 = atomikosProperties29.asProperties();
        atomikosProperties29.setEnableLogging(false);
        long long46 = atomikosProperties29.getMaxTimeout();
        java.lang.Object obj47 = properties13.putIfAbsent((java.lang.Object) properties28, (java.lang.Object) atomikosProperties29);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 300000L + "'", long46 == 300000L);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test8317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8317");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj11 = properties8.setProperty("tmlog", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties12.isEnableLogging();
        java.lang.String str19 = atomikosProperties12.getLogBaseDir();
        java.util.Properties properties20 = atomikosProperties12.asProperties();
        boolean boolean21 = atomikosProperties12.isEnableLogging();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        java.util.Properties properties23 = atomikosProperties12.asProperties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        java.lang.Object obj25 = properties8.remove((java.lang.Object) properties23);
        java.util.Set<java.lang.Object> objSet26 = properties23.keySet();
        java.io.PrintStream printStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.list(printStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objSet26);
    }

    @Test
    public void test8318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8318");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test8319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8319");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long13 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test8320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8320");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.util.Enumeration<?> wildcardEnumeration25 = properties24.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties24.entrySet();
        java.lang.Object obj29 = properties24.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str31 = properties24.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = properties24.contains(obj32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test8321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8321");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties12.entrySet();
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection16 = properties12.values();
        java.util.Properties properties17 = new java.util.Properties(properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = new java.util.Properties(properties22);
        java.util.Properties properties26 = new java.util.Properties(properties22);
        java.util.Properties properties27 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.util.Properties properties36 = atomikosProperties28.asProperties();
        java.lang.String str37 = atomikosProperties28.getLogBaseName();
        java.lang.Object obj38 = properties12.put((java.lang.Object) properties27, (java.lang.Object) atomikosProperties28);
        int int39 = properties12.size();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties44.entrySet();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties50.setCheckpointInterval((long) (byte) 0);
        atomikosProperties50.setEnableLogging(true);
        java.lang.Object obj57 = properties44.get((java.lang.Object) atomikosProperties50);
        java.util.Properties properties58 = atomikosProperties50.asProperties();
        java.lang.String str59 = atomikosProperties50.getLogBaseName();
        atomikosProperties50.setForceShutdownOnVmExit(false);
        boolean boolean62 = atomikosProperties50.isSerialJtaTransactions();
        atomikosProperties50.setDefaultJtaTimeout(100L);
        int int65 = atomikosProperties50.getMaxActives();
        java.lang.Object obj66 = properties12.get((java.lang.Object) atomikosProperties50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 11 + "'", int39 == 11);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 50 + "'", int65 == 50);
        org.junit.Assert.assertNull(obj66);
    }

    @Test
    public void test8322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8322");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.lang.Object obj20 = properties13.setProperty("hi!", "hi!");
        java.lang.Object obj23 = properties13.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        java.lang.String str32 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj35 = properties8.put((java.lang.Object) properties13, (java.lang.Object) atomikosProperties24);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        java.lang.String str38 = atomikosProperties24.getTransactionManagerUniqueName();
        atomikosProperties24.setMaxActives(32);
        boolean boolean41 = atomikosProperties24.isEnableLogging();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test8323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8323");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean22 = properties20.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.Object obj31 = properties20.remove((java.lang.Object) properties27);
        java.lang.Object obj34 = properties27.setProperty("", "");
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties39);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.Object obj55 = properties51.setProperty("hi!", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        java.lang.String str64 = atomikosProperties56.getTransactionManagerUniqueName();
        atomikosProperties56.setDefaultJtaTimeout((long) (-1));
        java.lang.Object obj67 = properties12.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties56);
        atomikosProperties56.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties56.setMaxTimeout(100L);
        atomikosProperties56.setCheckpointInterval((long) '4');
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test8324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8324");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        properties4.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        java.lang.String str21 = atomikosProperties13.getLogBaseName();
        java.util.Properties properties22 = atomikosProperties13.asProperties();
        java.lang.String str23 = atomikosProperties13.getLogBaseDir();
        java.util.Properties properties24 = atomikosProperties13.asProperties();
        atomikosProperties13.setMaxActives((int) (byte) 10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setMaxTimeout((long) (short) -1);
        long long34 = atomikosProperties27.getDefaultJtaTimeout();
        boolean boolean35 = atomikosProperties27.isThreadedTwoPhaseCommit();
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties38 = atomikosProperties27.asProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        java.lang.Object obj41 = properties4.putIfAbsent((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties27);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test8325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8325");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long14 = atomikosProperties0.getMaxTimeout();
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        long long17 = atomikosProperties0.getMaxTimeout();
        boolean boolean18 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test8326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8326");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = properties2.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties4.setCheckpointInterval((long) (byte) 0);
        atomikosProperties4.setEnableLogging(false);
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties16.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setCheckpointInterval((long) (byte) 0);
        atomikosProperties29.setTransactionManagerUniqueName("");
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        boolean boolean37 = atomikosProperties29.isForceShutdownOnVmExit();
        boolean boolean38 = properties16.containsValue((java.lang.Object) atomikosProperties29);
        boolean boolean39 = atomikosProperties29.isSerialJtaTransactions();
        atomikosProperties29.setDefaultJtaTimeout((long) 9);
        java.lang.Object obj42 = properties2.replace((java.lang.Object) properties11, (java.lang.Object) atomikosProperties29);
        java.lang.String str43 = atomikosProperties29.getService();
        long long44 = atomikosProperties29.getMaxTimeout();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
    }

    @Test
    public void test8327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8327");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setLogBaseDir("{}");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        int int42 = properties41.size();
        java.lang.Object obj43 = properties10.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties48.clear();
        int int52 = properties48.size();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        java.util.Properties properties60 = new java.util.Properties(properties57);
        java.util.Properties properties61 = new java.util.Properties(properties57);
        boolean boolean63 = properties48.remove((java.lang.Object) properties57, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties57.elements();
        java.util.Properties properties65 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties69 = atomikosProperties66.asProperties();
        int int70 = atomikosProperties66.getMaxActives();
        java.lang.Object obj72 = properties65.putIfAbsent((java.lang.Object) atomikosProperties66, (java.lang.Object) 1);
        atomikosProperties66.setLogBaseDir("{}");
        java.util.Properties properties75 = atomikosProperties66.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        boolean boolean84 = properties79.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties85.setCheckpointInterval((long) (byte) 0);
        atomikosProperties85.setTransactionManagerUniqueName("");
        java.util.Properties properties92 = atomikosProperties85.asProperties();
        java.lang.Object obj93 = properties79.remove((java.lang.Object) properties92);
        java.util.Collection<java.lang.Object> objCollection94 = properties92.values();
        boolean boolean95 = properties10.contains((java.lang.Object) objCollection94);
        java.lang.String str96 = properties10.toString();
        java.util.Properties properties97 = new java.util.Properties(properties10);
        java.util.Set<java.lang.String> strSet98 = properties10.stringPropertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(objCollection94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str96 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str96, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(strSet98);
    }

    @Test
    public void test8328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8328");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties16.setCheckpointInterval((long) (byte) 0);
        atomikosProperties16.setTransactionManagerUniqueName("");
        java.util.Properties properties23 = atomikosProperties16.asProperties();
        java.lang.String str24 = atomikosProperties16.getTransactionManagerUniqueName();
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection27 = properties26.values();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        properties32.clear();
        java.lang.String str37 = properties32.getProperty("");
        java.util.Properties properties38 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties39.setCheckpointInterval((long) (byte) 0);
        atomikosProperties39.setTransactionManagerUniqueName("");
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setMaxActives((int) '#');
        atomikosProperties47.setForceShutdownOnVmExit(true);
        java.lang.String str54 = atomikosProperties47.getLogBaseDir();
        java.lang.Object obj55 = properties46.remove((java.lang.Object) atomikosProperties47);
        java.util.Collection<java.lang.Object> objCollection56 = properties46.values();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        java.util.Properties properties64 = new java.util.Properties(properties61);
        int int65 = properties61.size();
        java.lang.Object obj67 = properties61.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int69 = atomikosProperties68.getMaxActives();
        long long70 = atomikosProperties68.getMaxTimeout();
        java.util.Properties properties71 = atomikosProperties68.asProperties();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.lang.Object obj78 = properties74.put((java.lang.Object) properties76, (java.lang.Object) (short) 1);
        java.util.Properties properties79 = new java.util.Properties(properties76);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties76.entrySet();
        java.lang.Object obj81 = properties71.remove((java.lang.Object) properties76);
        java.util.Enumeration<?> wildcardEnumeration82 = properties71.propertyNames();
        java.util.Properties properties83 = new java.util.Properties(properties71);
        boolean boolean84 = properties38.replace((java.lang.Object) objCollection56, (java.lang.Object) properties61, (java.lang.Object) properties83);
        java.lang.String str85 = properties61.toString();
        java.util.Set<java.lang.Object> objSet86 = properties61.keySet();
        java.lang.Object obj87 = properties14.put((java.lang.Object) properties26, (java.lang.Object) objSet86);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 300000L + "'", long70 == 300000L);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(wildcardEnumeration82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{}" + "'", str85, "{}");
        org.junit.Assert.assertNotNull(objSet86);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test8329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8329");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        boolean boolean12 = properties7.isEmpty();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean16 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties17.clone();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        java.lang.Object obj36 = properties22.remove((java.lang.Object) properties35);
        java.lang.Object obj37 = properties17.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties17.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean40 = atomikosProperties39.isForceShutdownOnVmExit();
        java.util.Properties properties41 = atomikosProperties39.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        properties46.clear();
        int int50 = properties46.size();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        java.util.Properties properties59 = new java.util.Properties(properties55);
        boolean boolean61 = properties46.remove((java.lang.Object) properties55, (java.lang.Object) 10.0f);
        boolean boolean62 = properties41.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setCheckpointInterval((long) (byte) 0);
        atomikosProperties64.setEnableLogging(true);
        java.lang.Object obj71 = properties41.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties72 = new java.util.Properties(properties41);
        boolean boolean73 = properties17.containsKey((java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((long) (byte) 10);
        long long77 = atomikosProperties74.getDefaultJtaTimeout();
        atomikosProperties74.setTransactionManagerUniqueName("hi!");
        atomikosProperties74.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties74.setService("");
        boolean boolean84 = properties4.remove((java.lang.Object) properties72, (java.lang.Object) "");
        java.io.InputStream inputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.load(inputStream85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test8330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8330");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties24.clone();
        java.lang.Object obj28 = properties24.setProperty("tmlog", "");
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        properties35.clear();
        int int39 = properties35.size();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = new java.util.Properties(properties44);
        java.util.Properties properties48 = new java.util.Properties(properties44);
        boolean boolean50 = properties35.remove((java.lang.Object) properties44, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties44.elements();
        java.util.Properties properties52 = new java.util.Properties(properties44);
        boolean boolean53 = properties24.containsKey((java.lang.Object) properties52);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties58.entrySet();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        properties68.clear();
        int int72 = properties68.size();
        java.util.Properties properties73 = new java.util.Properties(properties68);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Properties properties76 = new java.util.Properties(properties74);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.lang.Object obj80 = properties76.put((java.lang.Object) properties78, (java.lang.Object) (short) 1);
        properties78.clear();
        java.lang.String str83 = properties78.getProperty("");
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        java.util.Properties properties86 = new java.util.Properties(properties84);
        java.util.Properties properties87 = null;
        java.util.Properties properties88 = new java.util.Properties(properties87);
        java.lang.Object obj90 = properties86.put((java.lang.Object) properties88, (java.lang.Object) (short) 1);
        properties78.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties86);
        java.lang.Object obj92 = properties58.put((java.lang.Object) properties68, (java.lang.Object) properties86);
        java.util.Collection<java.lang.Object> objCollection93 = properties86.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet94 = properties86.entrySet();
        boolean boolean95 = properties86.isEmpty();
        boolean boolean96 = properties52.equals((java.lang.Object) properties86);
        java.util.Set<java.lang.String> strSet97 = properties52.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration98 = properties52.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(objCollection93);
        org.junit.Assert.assertNotNull(objEntrySet94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strSet97);
        org.junit.Assert.assertNotNull(objEnumeration98);
    }

    @Test
    public void test8331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8331");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties28.entrySet();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        java.lang.Object obj41 = properties28.get((java.lang.Object) atomikosProperties34);
        java.util.Properties properties42 = atomikosProperties34.asProperties();
        java.util.Set<java.lang.Object> objSet43 = properties42.keySet();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties48.clear();
        java.lang.String str53 = properties48.getProperty("");
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties48.keys();
        java.util.Set<java.lang.Object> objSet63 = properties48.keySet();
        java.lang.Object obj64 = properties19.putIfAbsent((java.lang.Object) properties42, (java.lang.Object) objSet63);
        java.util.Set<java.lang.Object> objSet65 = properties42.keySet();
        java.lang.Class<?> wildcardClass66 = objSet65.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test8332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8332");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties3.setCheckpointInterval((long) (byte) 0);
        atomikosProperties3.setTransactionManagerUniqueName("");
        boolean boolean10 = atomikosProperties3.isEnableLogging();
        java.util.Properties properties11 = atomikosProperties3.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        java.util.Properties properties29 = atomikosProperties20.asProperties();
        java.lang.Object obj30 = properties11.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties20);
        long long31 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj32 = properties0.remove((java.lang.Object) atomikosProperties20);
        java.util.Properties properties33 = new java.util.Properties(properties0);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        boolean boolean41 = properties36.isEmpty();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        boolean boolean45 = properties36.containsKey((java.lang.Object) properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties46.clone();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        boolean boolean56 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setCheckpointInterval((long) (byte) 0);
        atomikosProperties57.setTransactionManagerUniqueName("");
        java.util.Properties properties64 = atomikosProperties57.asProperties();
        java.lang.Object obj65 = properties51.remove((java.lang.Object) properties64);
        java.lang.Object obj66 = properties46.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties51.entrySet();
        java.util.Properties properties68 = new java.util.Properties(properties51);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        properties73.clear();
        int int77 = properties73.size();
        java.util.Properties properties78 = new java.util.Properties(properties73);
        java.lang.Object obj79 = properties68.remove((java.lang.Object) properties73);
        java.lang.String str80 = properties68.toString();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.lang.String str83 = properties33.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties33.keys();
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{}" + "'", str80, "{}");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(objEnumeration84);
    }

    @Test
    public void test8333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8333");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        long long9 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties15.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet27 = properties15.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setLogBaseDir("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = new java.util.Properties(properties44);
        boolean boolean48 = properties15.remove((java.lang.Object) "", (java.lang.Object) properties47);
        java.lang.String str50 = properties15.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setTransactionManagerUniqueName("");
        boolean boolean58 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setSerialJtaTransactions(false);
        java.lang.Object obj61 = properties15.remove((java.lang.Object) atomikosProperties51);
        properties15.clear();
        java.util.Properties properties63 = new java.util.Properties(properties15);
        java.lang.Object obj65 = properties10.put((java.lang.Object) properties63, (java.lang.Object) (byte) 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test8334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8334");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.lang.String str19 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        boolean boolean22 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.String str23 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setMaxTimeout(300000L);
        java.lang.String str26 = atomikosProperties10.getService();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test8335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8335");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        atomikosProperties8.setCheckpointInterval(100L);
        java.lang.String str19 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        boolean boolean24 = properties5.contains((java.lang.Object) true);
        java.util.Set<java.lang.Object> objSet25 = properties5.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.lang.String str34 = atomikosProperties26.getLogBaseName();
        atomikosProperties26.setCheckpointInterval(100L);
        atomikosProperties26.setLogBaseName("");
        atomikosProperties26.setCheckpointInterval((long) (byte) 1);
        boolean boolean41 = atomikosProperties26.isSerialJtaTransactions();
        java.util.Properties properties42 = atomikosProperties26.asProperties();
        boolean boolean43 = properties5.equals((java.lang.Object) atomikosProperties26);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test8336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8336");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxActives((int) '#');
        atomikosProperties10.setForceShutdownOnVmExit(true);
        java.lang.String str17 = atomikosProperties10.getLogBaseDir();
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setEnableLogging(true);
        boolean boolean26 = properties18.containsKey((java.lang.Object) true);
        boolean boolean27 = properties9.contains((java.lang.Object) properties18);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        properties32.clear();
        int int36 = properties32.size();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Properties properties44 = new java.util.Properties(properties41);
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean47 = properties32.remove((java.lang.Object) properties41, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties41.elements();
        java.util.Properties properties49 = new java.util.Properties(properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int51 = atomikosProperties50.getMaxActives();
        long long52 = atomikosProperties50.getMaxTimeout();
        java.util.Properties properties53 = atomikosProperties50.asProperties();
        int int54 = atomikosProperties50.getMaxActives();
        java.lang.Object obj56 = properties49.putIfAbsent((java.lang.Object) atomikosProperties50, (java.lang.Object) 1);
        atomikosProperties50.setLogBaseDir("{}");
        atomikosProperties50.setDefaultJtaTimeout((long) (short) 0);
        boolean boolean61 = properties9.containsKey((java.lang.Object) atomikosProperties50);
        java.lang.String str62 = atomikosProperties50.getTransactionManagerUniqueName();
        boolean boolean63 = atomikosProperties50.isForceShutdownOnVmExit();
        atomikosProperties50.setEnableLogging(false);
        java.lang.String str66 = atomikosProperties50.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test8337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8337");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        properties6.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties13.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = new java.util.Properties(properties13);
        boolean boolean26 = properties13.isEmpty();
        java.util.Properties properties27 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.isForceShutdownOnVmExit();
        java.lang.String str30 = atomikosProperties28.getLogBaseName();
        java.lang.String str31 = atomikosProperties28.getService();
        atomikosProperties28.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long34 = atomikosProperties28.getMaxTimeout();
        atomikosProperties28.setMaxTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.lang.String str40 = atomikosProperties37.getService();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj42 = properties13.put((java.lang.Object) 0, (java.lang.Object) properties41);
        boolean boolean43 = properties6.containsValue((java.lang.Object) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) 'a');
        boolean boolean54 = atomikosProperties44.isEnableLogging();
        long long55 = atomikosProperties44.getMaxTimeout();
        java.lang.Object obj56 = properties6.remove((java.lang.Object) long55);
        java.io.InputStream inputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.load(inputStream57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test8338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8338");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) (short) 100);
        atomikosProperties0.setDefaultJtaTimeout((long) 9);
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties20.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties32 = new java.util.Properties(properties20);
        int int33 = properties32.size();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        properties38.clear();
        java.lang.String str43 = properties38.getProperty("");
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj52 = properties32.remove((java.lang.Object) properties38);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties32.entrySet();
        java.util.Enumeration<?> wildcardEnumeration54 = properties32.propertyNames();
        java.lang.Object obj55 = properties15.get((java.lang.Object) wildcardEnumeration54);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test8339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8339");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean23 = atomikosProperties17.isEnableLogging();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        boolean boolean26 = properties25.isEmpty();
        java.lang.Object obj27 = properties25.clone();
        java.util.Properties properties28 = new java.util.Properties(properties25);
        java.lang.Object obj29 = properties28.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        boolean boolean33 = atomikosProperties30.isEnableLogging();
        boolean boolean34 = atomikosProperties30.isEnableLogging();
        java.util.Properties properties35 = atomikosProperties30.asProperties();
        boolean boolean36 = atomikosProperties30.isEnableLogging();
        java.lang.Object obj37 = properties15.putIfAbsent((java.lang.Object) properties28, (java.lang.Object) boolean36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties28.entrySet();
        java.io.OutputStream outputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.storeToXML(outputStream39, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals(obj27.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEntrySet38);
    }

    @Test
    public void test8340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8340");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        boolean boolean38 = atomikosProperties29.isThreadedTwoPhaseCommit();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties46 = new java.util.Properties(properties43);
        java.util.Properties properties47 = new java.util.Properties(properties43);
        java.util.Set<java.lang.Object> objSet48 = properties47.keySet();
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = new java.util.Properties(properties47);
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj52 = properties10.put((java.lang.Object) atomikosProperties29, (java.lang.Object) properties50);
        java.lang.String str53 = atomikosProperties29.getLogBaseDir();
        java.util.Properties properties54 = atomikosProperties29.asProperties();
        java.util.Set<java.lang.Object> objSet55 = properties54.keySet();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(objSet55);
    }

    @Test
    public void test8341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8341");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str16 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setMaxActives(97);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test8342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8342");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        boolean boolean18 = properties4.containsValue((java.lang.Object) 50);
        java.util.Properties properties19 = new java.util.Properties(properties4);
        boolean boolean20 = properties19.isEmpty();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        properties25.clear();
        int int29 = properties25.size();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        java.util.Properties properties37 = new java.util.Properties(properties34);
        java.util.Properties properties38 = new java.util.Properties(properties34);
        boolean boolean40 = properties25.remove((java.lang.Object) properties34, (java.lang.Object) 10.0f);
        boolean boolean41 = properties19.equals((java.lang.Object) boolean40);
        java.util.Properties properties42 = new java.util.Properties(properties19);
        java.util.Collection<java.lang.Object> objCollection43 = properties42.values();
        java.util.Set<java.lang.String> strSet44 = properties42.stringPropertyNames();
        java.io.InputStream inputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.load(inputStream45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(strSet44);
    }

    @Test
    public void test8343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8343");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = properties9.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test8344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8344");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        properties2.clear();
        java.util.Collection<java.lang.Object> objCollection22 = properties2.values();
        java.lang.Object obj25 = properties2.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test8345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8345");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties4.elements();
        properties4.clear();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getMaxActives();
        long long22 = atomikosProperties20.getMaxTimeout();
        java.lang.String str23 = atomikosProperties20.getLogBaseDir();
        atomikosProperties20.setCheckpointInterval(100L);
        boolean boolean26 = properties19.equals((java.lang.Object) atomikosProperties20);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        boolean boolean34 = properties29.isEmpty();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        boolean boolean38 = properties29.containsKey((java.lang.Object) properties37);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet55 = properties43.stringPropertyNames();
        boolean boolean56 = properties37.containsKey((java.lang.Object) strSet55);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        properties61.clear();
        java.lang.String str66 = properties61.getProperty("");
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        boolean boolean75 = properties37.containsKey((java.lang.Object) properties61);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        boolean boolean80 = atomikosProperties77.isEnableLogging();
        java.lang.Object obj81 = properties37.put((java.lang.Object) '4', (java.lang.Object) boolean80);
        java.util.Properties properties82 = new java.util.Properties(properties37);
        boolean boolean83 = properties37.isEmpty();
        java.lang.Object obj84 = properties19.get((java.lang.Object) properties37);
        boolean boolean85 = properties4.containsKey((java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties4.elements();
        java.lang.String str88 = properties4.getProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Enumeration<?> wildcardEnumeration89 = properties4.propertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(wildcardEnumeration89);
    }

    @Test
    public void test8346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8346");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        int int5 = properties4.size();
        java.io.InputStream inputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(inputStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 9 + "'", int5 == 9);
    }

    @Test
    public void test8347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8347");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxActives((int) '#');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        java.lang.Object obj26 = properties17.remove((java.lang.Object) atomikosProperties18);
        java.util.Collection<java.lang.Object> objCollection27 = properties17.values();
        boolean boolean28 = properties8.contains((java.lang.Object) properties17);
        java.util.Properties properties29 = new java.util.Properties(properties8);
        boolean boolean30 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties29.keySet();
        java.lang.String str32 = properties29.toString();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        boolean boolean45 = properties35.containsValue((java.lang.Object) atomikosProperties40);
        boolean boolean46 = properties29.equals((java.lang.Object) boolean45);
        java.io.InputStream inputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.loadFromXML(inputStream47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test8348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8348");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        long long27 = atomikosProperties24.getDefaultJtaTimeout();
        java.lang.String str28 = atomikosProperties24.getTransactionManagerUniqueName();
        boolean boolean29 = properties4.containsKey((java.lang.Object) atomikosProperties24);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setCheckpointInterval((long) (byte) 0);
        atomikosProperties38.setTransactionManagerUniqueName("");
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.lang.Object obj46 = properties32.remove((java.lang.Object) properties45);
        java.util.Properties properties47 = new java.util.Properties(properties32);
        java.util.Set<java.lang.Object> objSet48 = properties32.keySet();
        boolean boolean49 = properties4.equals((java.lang.Object) properties32);
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream50, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test8349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8349");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseDir("");
        long long17 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setCheckpointInterval((long) ' ');
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test8350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8350");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        boolean boolean12 = properties7.isEmpty();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean16 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties17.clone();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        java.lang.Object obj36 = properties22.remove((java.lang.Object) properties35);
        java.lang.Object obj37 = properties17.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties17.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean40 = atomikosProperties39.isForceShutdownOnVmExit();
        java.util.Properties properties41 = atomikosProperties39.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        properties46.clear();
        int int50 = properties46.size();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        java.util.Properties properties59 = new java.util.Properties(properties55);
        boolean boolean61 = properties46.remove((java.lang.Object) properties55, (java.lang.Object) 10.0f);
        boolean boolean62 = properties41.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setCheckpointInterval((long) (byte) 0);
        atomikosProperties64.setEnableLogging(true);
        java.lang.Object obj71 = properties41.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties72 = new java.util.Properties(properties41);
        boolean boolean73 = properties17.containsKey((java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((long) (byte) 10);
        long long77 = atomikosProperties74.getDefaultJtaTimeout();
        atomikosProperties74.setTransactionManagerUniqueName("hi!");
        atomikosProperties74.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties74.setService("");
        boolean boolean84 = properties4.remove((java.lang.Object) properties72, (java.lang.Object) "");
        java.io.OutputStream outputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream85, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test8351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8351");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        properties18.clear();
        boolean boolean20 = properties18.isEmpty();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = new java.util.Properties(properties25);
        java.util.Properties properties29 = new java.util.Properties(properties25);
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = new java.util.Properties(properties29);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        boolean boolean40 = properties35.isEmpty();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        boolean boolean44 = properties35.containsKey((java.lang.Object) properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties51.clear();
        int int55 = properties51.size();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int58 = atomikosProperties57.getMaxActives();
        long long59 = atomikosProperties57.getMaxTimeout();
        java.util.Properties properties60 = atomikosProperties57.asProperties();
        java.util.Properties properties61 = atomikosProperties57.asProperties();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.lang.Object obj68 = properties64.put((java.lang.Object) properties66, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties66.elements();
        java.lang.Object obj70 = properties51.replace((java.lang.Object) atomikosProperties57, (java.lang.Object) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        java.lang.String str75 = atomikosProperties72.getService();
        boolean boolean76 = atomikosProperties72.isSerialJtaTransactions();
        java.lang.Object obj77 = properties66.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties72);
        boolean boolean78 = properties45.equals((java.lang.Object) properties66);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        properties45.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean82 = atomikosProperties81.isSerialJtaTransactions();
        java.util.Properties properties83 = atomikosProperties81.asProperties();
        int int84 = properties83.size();
        java.util.Collection<java.lang.Object> objCollection85 = properties83.values();
        properties83.clear();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties83);
        java.util.Properties properties88 = new java.util.Properties(properties45);
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties88);
        java.lang.Class<?> wildcardClass90 = properties88.getClass();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 9 + "'", int84 == 9);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test8352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8352");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        java.lang.String str16 = properties12.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties12.elements();
        properties12.clear();
        java.io.Writer writer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.store(writer19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(objEnumeration17);
    }

    @Test
    public void test8353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8353");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxActives((int) 'a');
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test8354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8354");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Collection<java.lang.Object> objCollection20 = properties13.values();
        java.lang.String str22 = properties13.getProperty("");
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.save(outputStream23, "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test8355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8355");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        properties16.clear();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties(properties16);
        java.util.Collection<java.lang.Object> objCollection22 = properties16.values();
        java.lang.String str24 = properties16.getProperty("hi!");
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration26 = properties25.propertyNames();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Properties properties35 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.Object obj37 = properties25.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration36);
        java.lang.Object obj38 = properties16.remove((java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties16.elements();
        java.lang.Object obj40 = properties11.get((java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int42 = atomikosProperties41.getMaxActives();
        long long43 = atomikosProperties41.getMaxTimeout();
        java.util.Properties properties44 = atomikosProperties41.asProperties();
        atomikosProperties41.setService("hi!");
        java.lang.String str47 = atomikosProperties41.getService();
        boolean boolean48 = properties11.equals((java.lang.Object) atomikosProperties41);
        atomikosProperties41.setMaxActives(97);
        int int51 = atomikosProperties41.getMaxActives();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 97 + "'", int51 == 97);
    }

    @Test
    public void test8356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8356");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Class<?> wildcardClass14 = atomikosProperties0.getClass();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test8357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8357");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties24 = new java.util.Properties(properties2);
        java.util.Set<java.lang.String> strSet25 = properties2.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setMaxActives((int) (byte) 0);
        atomikosProperties26.setDefaultJtaTimeout((long) 10);
        atomikosProperties26.setDefaultJtaTimeout((long) (short) 10);
        java.util.Properties properties35 = atomikosProperties26.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxActives((int) '#');
        atomikosProperties36.setForceShutdownOnVmExit(true);
        java.lang.String str43 = atomikosProperties36.getLogBaseDir();
        java.util.Properties properties44 = atomikosProperties36.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setMaxActives((int) '#');
        atomikosProperties45.setEnableLogging(true);
        boolean boolean52 = properties44.containsKey((java.lang.Object) true);
        boolean boolean53 = properties35.contains((java.lang.Object) properties44);
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Properties properties55 = new java.util.Properties(properties44);
        java.util.Collection<java.lang.Object> objCollection56 = properties55.values();
        properties55.clear();
        java.io.OutputStream outputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.store(outputStream58, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objCollection56);
    }

    @Test
    public void test8358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8358");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Collection<java.lang.Object> objCollection20 = properties13.values();
        java.lang.String str22 = properties13.getProperty("");
        java.util.Properties properties23 = new java.util.Properties(properties13);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test8359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8359");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test8360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8360");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        boolean boolean14 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties9.entrySet();
        java.util.Properties properties16 = new java.util.Properties(properties9);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties24 = new java.util.Properties(properties21);
        java.util.Properties properties25 = new java.util.Properties(properties21);
        java.util.Set<java.lang.Object> objSet26 = properties25.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = new java.util.Properties(properties40);
        java.util.Properties properties44 = new java.util.Properties(properties40);
        boolean boolean46 = properties31.remove((java.lang.Object) properties40, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties40.elements();
        java.util.Properties properties48 = new java.util.Properties(properties40);
        java.lang.Object obj49 = properties16.putIfAbsent((java.lang.Object) objSet26, (java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties16.elements();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        properties57.clear();
        java.lang.String str62 = properties57.getProperty("");
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties57.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties57.elements();
        java.util.Set<java.lang.Object> objSet73 = properties57.keySet();
        java.lang.Object obj74 = properties16.put((java.lang.Object) "{}", (java.lang.Object) properties57);
        java.util.Properties properties75 = new java.util.Properties(properties16);
        java.util.Set<java.lang.String> strSet76 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean80 = atomikosProperties77.isForceShutdownOnVmExit();
        atomikosProperties77.setCheckpointInterval(500L);
        java.lang.String str83 = atomikosProperties77.getService();
        java.lang.String str84 = atomikosProperties77.getService();
        java.util.Properties properties85 = atomikosProperties77.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties85);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(properties85);
    }

    @Test
    public void test8361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8361");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.Object obj12 = properties0.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        java.lang.Object obj17 = properties0.remove((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setMaxActives(0);
        atomikosProperties13.setMaxActives((-1));
        atomikosProperties13.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean24 = atomikosProperties13.isThreadedTwoPhaseCommit();
        atomikosProperties13.setMaxTimeout(500L);
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test8362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8362");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        boolean boolean58 = properties47.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj60 = properties47.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet61 = properties47.keySet();
        boolean boolean62 = properties25.containsKey((java.lang.Object) properties47);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties25.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties25.entrySet();
        boolean boolean66 = properties9.equals((java.lang.Object) objEntrySet65);
        java.io.OutputStream outputStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(outputStream67, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test8363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8363");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        java.util.Properties properties21 = new java.util.Properties(properties9);
        java.util.Properties properties22 = new java.util.Properties(properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties9.entrySet();
        boolean boolean24 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        long long28 = atomikosProperties25.getDefaultJtaTimeout();
        atomikosProperties25.setTransactionManagerUniqueName("");
        boolean boolean31 = atomikosProperties25.isEnableLogging();
        java.lang.String str32 = atomikosProperties25.getLogBaseDir();
        java.util.Properties properties33 = atomikosProperties25.asProperties();
        boolean boolean34 = atomikosProperties25.isEnableLogging();
        java.lang.String str35 = atomikosProperties25.getLogBaseName();
        java.util.Properties properties36 = atomikosProperties25.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setCheckpointInterval((long) (byte) 0);
        atomikosProperties37.setTransactionManagerUniqueName("");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.lang.String str45 = atomikosProperties37.getTransactionManagerUniqueName();
        atomikosProperties37.setDefaultJtaTimeout((long) (-1));
        java.lang.String str48 = atomikosProperties37.getService();
        java.util.Properties properties49 = atomikosProperties37.asProperties();
        java.lang.Object obj50 = properties9.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) properties49);
        atomikosProperties25.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties25.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties25.setDefaultJtaTimeout(50L);
        int int57 = atomikosProperties25.getMaxActives();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 50 + "'", int57 == 50);
    }

    @Test
    public void test8364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8364");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        boolean boolean20 = properties15.isEmpty();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        boolean boolean24 = properties15.containsKey((java.lang.Object) properties23);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        boolean boolean40 = properties29.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet41 = properties29.stringPropertyNames();
        boolean boolean42 = properties23.containsKey((java.lang.Object) strSet41);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        properties47.clear();
        java.lang.String str52 = properties47.getProperty("");
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        boolean boolean61 = properties23.containsKey((java.lang.Object) properties47);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        properties67.clear();
        int int71 = properties67.size();
        java.lang.Object obj74 = properties67.setProperty("hi!", "hi!");
        java.lang.Object obj77 = properties67.setProperty("tmlog", "tmlog");
        java.lang.Object obj78 = properties47.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = properties47.entrySet();
        java.util.Set<java.lang.Object> objSet80 = properties47.keySet();
        boolean boolean81 = properties11.contains((java.lang.Object) properties47);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEntrySet79);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test8365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8365");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        atomikosProperties24.setLogBaseName("");
        atomikosProperties24.setMaxActives((-1));
        java.lang.Object obj30 = properties13.remove((java.lang.Object) atomikosProperties24);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties35.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj48 = properties35.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet49 = properties35.keySet();
        properties35.clear();
        java.lang.String str51 = properties35.toString();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        boolean boolean59 = properties54.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setTransactionManagerUniqueName("");
        java.util.Properties properties67 = atomikosProperties60.asProperties();
        java.lang.Object obj68 = properties54.remove((java.lang.Object) properties67);
        java.lang.Object obj69 = properties13.replace((java.lang.Object) properties35, (java.lang.Object) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties54.keys();
        java.lang.Object obj73 = properties54.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=32, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test8366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8366");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        atomikosProperties9.setLogBaseName("tmlog");
        atomikosProperties9.setCheckpointInterval(300000L);
        long long19 = atomikosProperties9.getMaxTimeout();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setCheckpointInterval((long) (short) 100);
        atomikosProperties9.setEnableLogging(true);
        boolean boolean26 = atomikosProperties9.isSerialJtaTransactions();
        java.util.Properties properties27 = atomikosProperties9.asProperties();
        boolean boolean28 = properties4.contains((java.lang.Object) atomikosProperties9);
        atomikosProperties9.setDefaultJtaTimeout(1L);
        java.util.Properties properties31 = atomikosProperties9.asProperties();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties31);
    }

    @Test
    public void test8367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8367");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setCheckpointInterval((long) 50);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test8368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8368");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(9);
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test8369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8369");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = properties13.toString();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        boolean boolean45 = properties35.containsValue((java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean51 = properties35.containsValue((java.lang.Object) atomikosProperties46);
        java.lang.Object obj54 = properties35.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.lang.Object obj55 = null;
        java.lang.Object obj56 = properties13.getOrDefault((java.lang.Object) 10, obj55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        long long60 = atomikosProperties57.getDefaultJtaTimeout();
        atomikosProperties57.setTransactionManagerUniqueName("");
        boolean boolean63 = atomikosProperties57.isEnableLogging();
        atomikosProperties57.setDefaultJtaTimeout((long) '4');
        long long66 = atomikosProperties57.getCheckpointInterval();
        long long67 = atomikosProperties57.getDefaultJtaTimeout();
        java.lang.Object obj68 = properties13.get((java.lang.Object) atomikosProperties57);
        atomikosProperties57.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties71 = atomikosProperties57.asProperties();
        java.util.Properties properties72 = new java.util.Properties(properties71);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 500L + "'", long66 == 500L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 52L + "'", long67 == 52L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(properties71);
    }

    @Test
    public void test8370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8370");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties4.containsKey((java.lang.Object) objEnumeration24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.lang.String str34 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties26.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        atomikosProperties40.setEnableLogging(true);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        boolean boolean49 = atomikosProperties40.isThreadedTwoPhaseCommit();
        atomikosProperties40.setForceShutdownOnVmExit(false);
        atomikosProperties40.setMaxActives((int) (short) -1);
        java.lang.Object obj54 = properties4.putIfAbsent((java.lang.Object) long39, (java.lang.Object) (short) -1);
        java.util.Properties properties55 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.keys();
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.io.PrintWriter printWriter59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties58.list(printWriter59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration56);
    }

    @Test
    public void test8371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8371");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Set<java.lang.String> strSet17 = properties15.stringPropertyNames();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        properties22.clear();
        int int26 = properties22.size();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        java.util.Properties properties34 = new java.util.Properties(properties31);
        java.util.Properties properties35 = new java.util.Properties(properties31);
        boolean boolean37 = properties22.remove((java.lang.Object) properties31, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties31.elements();
        java.util.Properties properties39 = new java.util.Properties(properties31);
        boolean boolean41 = properties31.contains((java.lang.Object) (byte) 100);
        boolean boolean42 = properties15.contains((java.lang.Object) boolean41);
        java.lang.String str44 = properties15.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.lang.Object obj45 = null;
        boolean boolean46 = properties15.equals(obj45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties47.setCheckpointInterval((long) (byte) 0);
        atomikosProperties47.setTransactionManagerUniqueName("");
        java.util.Properties properties54 = atomikosProperties47.asProperties();
        java.lang.String str55 = atomikosProperties47.getTransactionManagerUniqueName();
        atomikosProperties47.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties47.setCheckpointInterval((long) (byte) 0);
        atomikosProperties47.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean62 = atomikosProperties47.isThreadedTwoPhaseCommit();
        boolean boolean63 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.setForceShutdownOnVmExit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        boolean boolean69 = atomikosProperties66.isEnableLogging();
        boolean boolean70 = atomikosProperties66.isEnableLogging();
        java.util.Properties properties71 = atomikosProperties66.asProperties();
        atomikosProperties66.setEnableLogging(false);
        atomikosProperties66.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.lang.String str76 = atomikosProperties66.getService();
        java.lang.Object obj77 = properties15.replace((java.lang.Object) true, (java.lang.Object) atomikosProperties66);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties15.elements();
        java.util.Set<java.lang.Object> objSet79 = properties15.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}" + "'", str76, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNotNull(objSet79);
    }

    @Test
    public void test8372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8372");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj10 = properties6.put((java.lang.Object) properties8, (java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties8.entrySet();
        java.lang.Object obj13 = properties3.remove((java.lang.Object) properties8);
        java.util.Enumeration<?> wildcardEnumeration14 = properties8.propertyNames();
        java.util.Set<java.lang.Object> objSet15 = properties8.keySet();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        properties20.clear();
        java.lang.String str25 = properties20.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setMaxTimeout((long) (short) -1);
        long long33 = atomikosProperties26.getDefaultJtaTimeout();
        java.util.Properties properties34 = atomikosProperties26.asProperties();
        java.lang.Object obj35 = properties20.get((java.lang.Object) properties34);
        java.util.Properties properties36 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setCheckpointInterval((long) (byte) 0);
        atomikosProperties37.setTransactionManagerUniqueName("");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.lang.String str45 = atomikosProperties37.getTransactionManagerUniqueName();
        atomikosProperties37.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties48 = atomikosProperties37.asProperties();
        boolean boolean49 = properties48.isEmpty();
        boolean boolean50 = properties36.containsKey((java.lang.Object) boolean49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int52 = atomikosProperties51.getMaxActives();
        long long53 = atomikosProperties51.getMaxTimeout();
        java.util.Properties properties54 = atomikosProperties51.asProperties();
        int int55 = atomikosProperties51.getMaxActives();
        boolean boolean56 = atomikosProperties51.isThreadedTwoPhaseCommit();
        java.lang.String str57 = atomikosProperties51.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties58.setCheckpointInterval((long) (byte) 0);
        atomikosProperties58.setTransactionManagerUniqueName("");
        java.util.Properties properties65 = atomikosProperties58.asProperties();
        java.lang.String str66 = atomikosProperties58.getTransactionManagerUniqueName();
        atomikosProperties58.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties69 = atomikosProperties58.asProperties();
        java.util.Properties properties70 = atomikosProperties58.asProperties();
        java.lang.Object obj71 = properties36.getOrDefault((java.lang.Object) atomikosProperties51, (java.lang.Object) properties70);
        java.util.Set<java.lang.String> strSet72 = properties70.stringPropertyNames();
        properties70.clear();
        boolean boolean74 = properties8.containsKey((java.lang.Object) properties70);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{}");
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test8373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8373");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test8374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8374");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.elements();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        boolean boolean38 = properties27.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = new java.util.Properties(properties27);
        boolean boolean40 = properties27.isEmpty();
        boolean boolean41 = properties4.equals((java.lang.Object) boolean40);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Properties properties49 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        properties55.clear();
        int int59 = properties55.size();
        java.util.Properties properties60 = new java.util.Properties(properties55);
        java.lang.Object obj61 = properties4.put((java.lang.Object) properties49, (java.lang.Object) properties60);
        java.util.Enumeration<?> wildcardEnumeration62 = properties60.propertyNames();
        java.io.OutputStream outputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties60.storeToXML(outputStream63, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
    }

    @Test
    public void test8375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8375");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setService("{}");
        long long12 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 32L + "'", long12 == 32L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test8376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8376");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.elements();
        java.util.Set<java.lang.Object> objSet20 = properties4.keySet();
        java.lang.Object obj23 = properties4.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.isSerialJtaTransactions();
        java.util.Properties properties26 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties27.setCheckpointInterval((long) (byte) 0);
        atomikosProperties27.setTransactionManagerUniqueName("");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.lang.String str35 = atomikosProperties27.getLogBaseName();
        java.util.Properties properties36 = atomikosProperties27.asProperties();
        java.lang.Object obj37 = properties4.replace((java.lang.Object) properties26, (java.lang.Object) atomikosProperties27);
        java.io.OutputStream outputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.store(outputStream38, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test8377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8377");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.Object obj12 = properties0.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration11);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        boolean boolean28 = properties17.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet29 = properties17.stringPropertyNames();
        boolean boolean31 = properties17.containsValue((java.lang.Object) 50);
        java.util.Properties properties32 = new java.util.Properties(properties17);
        boolean boolean33 = properties32.isEmpty();
        java.util.Set<java.lang.String> strSet34 = properties32.stringPropertyNames();
        java.util.Properties properties35 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties36.setCheckpointInterval((long) (byte) 0);
        atomikosProperties36.setTransactionManagerUniqueName("");
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        java.util.Properties properties44 = atomikosProperties36.asProperties();
        java.lang.String str45 = atomikosProperties36.getService();
        atomikosProperties36.setMaxActives(1);
        boolean boolean48 = properties32.contains((java.lang.Object) atomikosProperties36);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties32);
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test8378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8378");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        int int26 = atomikosProperties22.getMaxActives();
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) 1);
        atomikosProperties22.setLogBaseDir("{}");
        atomikosProperties22.setDefaultJtaTimeout((long) (short) 0);
        atomikosProperties22.setSerialJtaTransactions(false);
        int int35 = atomikosProperties22.getMaxActives();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
    }

    @Test
    public void test8379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8379");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.lang.Object obj20 = properties13.setProperty("hi!", "hi!");
        java.lang.Object obj23 = properties13.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        java.lang.String str32 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj35 = properties8.put((java.lang.Object) properties13, (java.lang.Object) atomikosProperties24);
        boolean boolean36 = atomikosProperties24.isSerialJtaTransactions();
        int int37 = atomikosProperties24.getMaxActives();
        boolean boolean38 = atomikosProperties24.isForceShutdownOnVmExit();
        boolean boolean39 = atomikosProperties24.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 50 + "'", int37 == 50);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test8380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8380");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxTimeout((long) (short) 0);
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test8381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8381");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval(52L);
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        boolean boolean26 = atomikosProperties17.isEnableLogging();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test8382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8382");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(1L);
        int int10 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
    }

    @Test
    public void test8383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8383");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        java.util.Collection<java.lang.Object> objCollection36 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setCheckpointInterval((long) (byte) 0);
        atomikosProperties37.setTransactionManagerUniqueName("");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.lang.String str45 = atomikosProperties37.getLogBaseName();
        atomikosProperties37.setCheckpointInterval(100L);
        atomikosProperties37.setLogBaseName("");
        atomikosProperties37.setCheckpointInterval((long) (byte) 1);
        boolean boolean52 = properties4.containsKey((java.lang.Object) atomikosProperties37);
        boolean boolean53 = atomikosProperties37.isEnableLogging();
        java.util.Properties properties54 = atomikosProperties37.asProperties();
        long long55 = atomikosProperties37.getCheckpointInterval();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
    }

    @Test
    public void test8384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8384");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties8.isEnableLogging();
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        atomikosProperties8.setThreadedTwoPhaseCommit(false);
        atomikosProperties8.setSerialJtaTransactions(true);
        java.lang.String str21 = atomikosProperties8.getTransactionManagerUniqueName();
        long long22 = atomikosProperties8.getMaxTimeout();
        boolean boolean23 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setMaxTimeout(10000L);
        boolean boolean26 = atomikosProperties8.isEnableLogging();
        java.lang.String str27 = atomikosProperties8.getLogBaseName();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        boolean boolean43 = properties32.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet44 = properties32.stringPropertyNames();
        java.lang.Object obj45 = properties32.clone();
        java.util.Properties properties46 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties47.setCheckpointInterval((long) (byte) 0);
        long long52 = atomikosProperties47.getMaxTimeout();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties57.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        long long65 = atomikosProperties62.getDefaultJtaTimeout();
        atomikosProperties62.setTransactionManagerUniqueName("");
        boolean boolean68 = atomikosProperties62.isEnableLogging();
        boolean boolean69 = properties57.containsKey((java.lang.Object) boolean68);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Properties properties72 = new java.util.Properties(properties70);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.lang.Object obj76 = properties72.put((java.lang.Object) properties74, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties57.containsKey((java.lang.Object) objEnumeration77);
        java.lang.Object obj79 = properties46.put((java.lang.Object) long52, (java.lang.Object) properties57);
        java.util.Properties properties80 = new java.util.Properties(properties57);
        java.util.Set<java.lang.Object> objSet81 = properties80.keySet();
        java.lang.Object obj82 = properties7.putIfAbsent((java.lang.Object) atomikosProperties8, (java.lang.Object) properties80);
        java.util.Enumeration<java.lang.Object> objEnumeration83 = properties80.elements();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{}");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 10L + "'", long65 == 10L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objEnumeration83);
    }

    @Test
    public void test8385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8385");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        properties4.clear();
        properties4.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxActives((int) '#');
        boolean boolean15 = atomikosProperties10.isSerialJtaTransactions();
        atomikosProperties10.setCheckpointInterval((long) (-1));
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        atomikosProperties10.setEnableLogging(true);
        java.util.Properties properties23 = atomikosProperties10.asProperties();
        atomikosProperties10.setCheckpointInterval((long) 9);
        atomikosProperties10.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean28 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.Object obj29 = properties4.get((java.lang.Object) boolean28);
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(outputStream30, "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=300000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test8386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8386");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        long long21 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.Class<?> wildcardClass22 = atomikosProperties0.getClass();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10L + "'", long21 == 10L);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test8387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8387");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties12.entrySet();
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str23 = atomikosProperties16.getTransactionManagerUniqueName();
        java.util.Properties properties24 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxActives((int) '#');
        atomikosProperties25.setCheckpointInterval((long) 50);
        long long32 = atomikosProperties25.getCheckpointInterval();
        java.lang.Object obj33 = properties15.putIfAbsent((java.lang.Object) properties24, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties34 = new java.util.Properties(properties24);
        java.util.Properties properties35 = new java.util.Properties(properties34);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 50L + "'", long32 == 50L);
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test8388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8388");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        atomikosProperties7.setCheckpointInterval((long) 9);
        atomikosProperties7.setEnableLogging(false);
        java.util.Properties properties17 = atomikosProperties7.asProperties();
        java.io.InputStream inputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.load(inputStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test8389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8389");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) (byte) 0);
        atomikosProperties9.setEnableLogging(true);
        atomikosProperties9.setMaxActives((int) (byte) 1);
        boolean boolean18 = properties4.containsValue((java.lang.Object) atomikosProperties9);
        java.util.Properties properties19 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setEnableLogging(true);
        atomikosProperties20.setService("");
        atomikosProperties20.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties31 = atomikosProperties20.asProperties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration36 = properties35.propertyNames();
        java.lang.Class<?> wildcardClass37 = properties35.getClass();
        java.lang.Object obj38 = properties4.getOrDefault((java.lang.Object) properties32, (java.lang.Object) wildcardClass37);
        java.lang.String str39 = properties4.toString();
        java.io.OutputStream outputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream40, "{hi!=hi!, {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.util.Properties");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.util.Properties");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.util.Properties");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
    }

    @Test
    public void test8390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8390");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        int int22 = properties4.size();
        java.util.Properties properties23 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        properties29.clear();
        int int33 = properties29.size();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        java.util.Properties properties41 = new java.util.Properties(properties38);
        java.util.Properties properties42 = new java.util.Properties(properties38);
        boolean boolean44 = properties29.remove((java.lang.Object) properties38, (java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet45 = properties29.keySet();
        boolean boolean46 = properties23.contains((java.lang.Object) objSet45);
        java.util.Enumeration<?> wildcardEnumeration47 = properties23.propertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
    }

    @Test
    public void test8391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8391");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = properties8.toString();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        boolean boolean25 = properties14.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet26 = properties14.stringPropertyNames();
        java.lang.Object obj27 = properties14.clone();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setTransactionManagerUniqueName("hi!");
        atomikosProperties29.setLogBaseName("tmlog");
        atomikosProperties29.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj39 = properties8.get((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long47 = atomikosProperties40.getCheckpointInterval();
        java.lang.String str48 = atomikosProperties40.getService();
        java.lang.Object obj49 = properties8.get((java.lang.Object) atomikosProperties40);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str9, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 500L + "'", long47 == 500L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str48, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test8392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8392");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) '4');
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test8393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8393");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setForceShutdownOnVmExit(true);
        java.lang.String str21 = atomikosProperties13.getLogBaseName();
        atomikosProperties13.setCheckpointInterval(35L);
        atomikosProperties13.setTransactionManagerUniqueName("{tmlog={}}");
        atomikosProperties13.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
    }

    @Test
    public void test8394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8394");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("hi!");
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("");
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test8395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8395");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.lang.String str12 = properties4.getProperty("hi!");
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration14 = properties13.propertyNames();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.Object obj25 = properties13.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration24);
        java.lang.Object obj26 = properties4.remove((java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties4.elements();
        java.lang.Object obj28 = properties4.clone();
        java.lang.Object obj29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = properties4.remove(obj29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
    }

    @Test
    public void test8396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8396");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        int int8 = properties4.size();
        java.lang.Object obj10 = properties4.get((java.lang.Object) (short) 100);
        java.lang.Object obj13 = properties4.setProperty("{=}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj16 = properties4.setProperty("{{}=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.InputStream inputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test8397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8397");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        int int12 = properties10.size();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test8398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8398");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str14 = properties12.getProperty("{}");
        java.lang.Object obj15 = properties12.clone();
        java.util.Set<java.lang.Object> objSet16 = properties12.keySet();
        java.io.Writer writer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.store(writer17, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objSet16);
    }

    @Test
    public void test8399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8399");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) 50);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test8400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8400");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties40 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection41 = properties40.values();
        java.lang.Object obj42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = properties40.containsKey(obj42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(objCollection41);
    }

    @Test
    public void test8401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8401");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties24.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj37 = properties24.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet38 = properties24.keySet();
        properties24.clear();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties44.entrySet();
        boolean boolean49 = properties24.equals((java.lang.Object) properties44);
        java.lang.Object obj50 = properties24.clone();
        java.lang.Object obj51 = properties4.putIfAbsent((java.lang.Object) (-1.0d), (java.lang.Object) properties24);
        java.lang.Object obj52 = properties24.clone();
        java.io.InputStream inputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.loadFromXML(inputStream53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
    }

    @Test
    public void test8402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8402");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxActives((int) '#');
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Object obj16 = properties7.remove((java.lang.Object) atomikosProperties8);
        java.lang.String str17 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties8.setMaxActives((int) '#');
        java.lang.String str22 = atomikosProperties8.getLogBaseDir();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test8403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8403");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) ' ');
        atomikosProperties0.setDefaultJtaTimeout((long) 100);
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int12 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test8404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8404");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        int int14 = properties13.size();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test8405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8405");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        boolean boolean17 = properties4.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration18 = properties4.propertyNames();
        java.lang.String str20 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        boolean boolean21 = properties4.isEmpty();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        boolean boolean26 = properties24.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties27 = new java.util.Properties(properties24);
        java.lang.String str29 = properties27.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        long long33 = atomikosProperties30.getDefaultJtaTimeout();
        atomikosProperties30.setTransactionManagerUniqueName("hi!");
        atomikosProperties30.setLogBaseName("tmlog");
        boolean boolean38 = atomikosProperties30.isSerialJtaTransactions();
        java.util.Properties properties39 = atomikosProperties30.asProperties();
        boolean boolean40 = properties27.equals((java.lang.Object) atomikosProperties30);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties43.isEmpty();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        boolean boolean52 = properties43.containsKey((java.lang.Object) properties51);
        java.util.Set<java.lang.Object> objSet53 = properties51.keySet();
        boolean boolean54 = properties27.containsValue((java.lang.Object) objSet53);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        boolean boolean59 = properties57.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties60 = new java.util.Properties(properties57);
        java.lang.String str62 = properties60.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 10);
        long long66 = atomikosProperties63.getDefaultJtaTimeout();
        atomikosProperties63.setTransactionManagerUniqueName("hi!");
        atomikosProperties63.setLogBaseName("tmlog");
        boolean boolean71 = atomikosProperties63.isSerialJtaTransactions();
        java.util.Properties properties72 = atomikosProperties63.asProperties();
        boolean boolean73 = properties60.equals((java.lang.Object) atomikosProperties63);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties60.entrySet();
        boolean boolean75 = properties27.equals((java.lang.Object) properties60);
        boolean boolean76 = properties4.equals((java.lang.Object) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties4.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10L + "'", long66 == 10L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objEnumeration77);
    }

    @Test
    public void test8406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8406");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties4.setCheckpointInterval((long) (byte) 0);
        atomikosProperties4.setTransactionManagerUniqueName("");
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        atomikosProperties4.setCheckpointInterval((-1L));
        long long16 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setService("hi!");
        java.util.Properties properties19 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getMaxActives();
        long long22 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties23 = atomikosProperties20.asProperties();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        java.util.Properties properties31 = new java.util.Properties(properties28);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties28.entrySet();
        java.lang.Object obj33 = properties23.remove((java.lang.Object) properties28);
        java.util.Enumeration<?> wildcardEnumeration34 = properties23.propertyNames();
        java.util.Properties properties35 = new java.util.Properties(properties23);
        java.lang.Object obj36 = properties2.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = new java.util.Properties(properties35);
        java.lang.Object obj39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = properties38.contains(obj39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10L + "'", long16 == 10L);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test8407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8407");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        boolean boolean50 = properties34.contains((java.lang.Object) "hi!");
        properties34.clear();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        boolean boolean56 = properties54.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        java.lang.Object obj65 = properties54.remove((java.lang.Object) properties61);
        boolean boolean66 = properties61.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties61.entrySet();
        boolean boolean68 = properties34.equals((java.lang.Object) properties61);
        java.util.Properties properties69 = new java.util.Properties(properties34);
        java.util.Properties properties70 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties34.keys();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEnumeration71);
    }

    @Test
    public void test8408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8408");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(100);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        int int16 = properties15.size();
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(outputStream17, "{tmlog={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
    }

    @Test
    public void test8409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8409");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.lang.String str18 = properties4.toString();
        java.lang.String str19 = properties4.toString();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties24.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties24);
        boolean boolean37 = properties24.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration38 = properties24.propertyNames();
        java.lang.String str40 = properties24.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setMaxActives((int) '#');
        atomikosProperties49.setForceShutdownOnVmExit(true);
        java.lang.String str56 = atomikosProperties49.getLogBaseDir();
        java.lang.Object obj57 = properties48.remove((java.lang.Object) atomikosProperties49);
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties48);
        java.lang.Object obj61 = properties48.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test8410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8410");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("{4=true}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test8411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8411");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        boolean boolean20 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test8412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8412");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test8413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8413");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxActives((int) (byte) -1);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        java.util.Set<java.lang.Object> objSet25 = properties24.keySet();
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        boolean boolean42 = properties31.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet43 = properties31.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        boolean boolean51 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setLogBaseDir("");
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        boolean boolean64 = properties31.remove((java.lang.Object) "", (java.lang.Object) properties63);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Properties properties67 = new java.util.Properties(properties65);
        java.lang.Object obj68 = properties67.clone();
        boolean boolean69 = properties31.contains(obj68);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.lang.Object obj72 = properties24.get((java.lang.Object) 10L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties24.entrySet();
        java.util.Properties properties74 = new java.util.Properties(properties24);
        java.lang.Object obj75 = properties15.get((java.lang.Object) properties24);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test8414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8414");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj10 = properties6.put((java.lang.Object) properties8, (java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties8.entrySet();
        java.lang.Object obj13 = properties3.remove((java.lang.Object) properties8);
        java.util.Enumeration<?> wildcardEnumeration14 = properties3.propertyNames();
        java.util.Properties properties15 = new java.util.Properties(properties3);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        properties20.clear();
        int int24 = properties20.size();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Properties properties32 = new java.util.Properties(properties29);
        java.util.Properties properties33 = new java.util.Properties(properties29);
        boolean boolean35 = properties20.remove((java.lang.Object) properties29, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties29.elements();
        java.util.Properties properties37 = new java.util.Properties(properties29);
        java.lang.Object obj38 = properties37.clone();
        boolean boolean39 = properties15.contains((java.lang.Object) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        atomikosProperties40.setEnableLogging(true);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        java.util.Properties properties49 = atomikosProperties40.asProperties();
        boolean boolean50 = atomikosProperties40.isThreadedTwoPhaseCommit();
        atomikosProperties40.setEnableLogging(true);
        boolean boolean53 = properties15.containsValue((java.lang.Object) atomikosProperties40);
        java.util.Properties properties54 = new java.util.Properties(properties15);
        java.util.Set<java.lang.Object> objSet55 = properties54.keySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objSet55);
    }

    @Test
    public void test8415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8415");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        atomikosProperties38.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.lang.Object obj48 = properties10.getOrDefault((java.lang.Object) objEnumeration20, (java.lang.Object) properties45);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxActives((int) (byte) 0);
        boolean boolean61 = properties51.containsValue((java.lang.Object) atomikosProperties56);
        java.lang.String str62 = atomikosProperties56.getLogBaseDir();
        java.lang.Object obj63 = properties45.get((java.lang.Object) atomikosProperties56);
        long long64 = atomikosProperties56.getDefaultJtaTimeout();
        boolean boolean65 = atomikosProperties56.isEnableLogging();
        boolean boolean66 = atomikosProperties56.isSerialJtaTransactions();
        boolean boolean67 = atomikosProperties56.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10000L + "'", long64 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test8416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8416");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxActives((int) '#');
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Object obj16 = properties7.remove((java.lang.Object) atomikosProperties8);
        long long17 = atomikosProperties8.getDefaultJtaTimeout();
        java.util.Properties properties18 = atomikosProperties8.asProperties();
        boolean boolean19 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setSerialJtaTransactions(true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test8417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8417");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setCheckpointInterval(300000L);
        atomikosProperties0.setService("hi!");
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test8418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8418");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        atomikosProperties15.setService("tmlog");
        atomikosProperties15.setMaxActives((int) '4');
        boolean boolean40 = atomikosProperties15.isEnableLogging();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties15.isForceShutdownOnVmExit();
        atomikosProperties15.setEnableLogging(false);
        java.util.Properties properties46 = atomikosProperties15.asProperties();
        atomikosProperties15.setEnableLogging(false);
        long long49 = atomikosProperties15.getCheckpointInterval();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 500L + "'", long49 == 500L);
    }

    @Test
    public void test8419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8419");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        long long28 = atomikosProperties17.getCheckpointInterval();
        boolean boolean29 = atomikosProperties17.isEnableLogging();
        java.util.Properties properties30 = atomikosProperties17.asProperties();
        java.lang.Object obj33 = properties30.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties30.keys();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
    }

    @Test
    public void test8420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8420");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str11 = atomikosProperties0.getService();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        properties12.clear();
        java.util.Collection<java.lang.Object> objCollection14 = properties12.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int16 = atomikosProperties15.getMaxActives();
        long long17 = atomikosProperties15.getMaxTimeout();
        java.lang.String str18 = atomikosProperties15.getLogBaseDir();
        atomikosProperties15.setCheckpointInterval(100L);
        atomikosProperties15.setService("tmlog");
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        properties23.clear();
        boolean boolean25 = properties12.containsValue((java.lang.Object) properties23);
        java.io.Writer writer26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.store(writer26, "{{}={{}=1}, []={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test8421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8421");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setTransactionManagerUniqueName("{{}=tmlog}");
        int int23 = atomikosProperties12.getMaxActives();
        atomikosProperties12.setMaxTimeout(1L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
    }

    @Test
    public void test8422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8422");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        java.util.Properties properties17 = new java.util.Properties(properties4);
        java.util.Set<java.lang.String> strSet18 = properties4.stringPropertyNames();
        java.util.Properties properties19 = new java.util.Properties(properties4);
        boolean boolean20 = properties19.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test8423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8423");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout(10L);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxTimeout((long) 35);
        boolean boolean16 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        int int18 = properties17.size();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 9 + "'", int18 == 9);
    }

    @Test
    public void test8424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8424");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
    }

    @Test
    public void test8425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8425");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        boolean boolean8 = properties6.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        java.lang.Object obj17 = properties6.remove((java.lang.Object) properties13);
        boolean boolean18 = properties13.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties13.entrySet();
        int int20 = properties13.size();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean22 = properties3.equals((java.lang.Object) properties21);
        java.lang.Class<?> wildcardClass23 = properties3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test8426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8426");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getService();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties9.entrySet();
        java.io.Reader reader11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(reader11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEntrySet10);
    }

    @Test
    public void test8427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8427");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxActives((int) (byte) 0);
        atomikosProperties12.setEnableLogging(true);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean21 = atomikosProperties12.isThreadedTwoPhaseCommit();
        atomikosProperties12.setMaxTimeout(10L);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        atomikosProperties12.setMaxTimeout((long) 35);
        java.util.Properties properties28 = atomikosProperties12.asProperties();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties33.entrySet();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties39.setCheckpointInterval((long) (byte) 0);
        atomikosProperties39.setEnableLogging(true);
        java.lang.Object obj46 = properties33.get((java.lang.Object) atomikosProperties39);
        java.util.Properties properties47 = atomikosProperties39.asProperties();
        java.util.Properties properties48 = atomikosProperties39.asProperties();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        boolean boolean50 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        long long56 = atomikosProperties51.getMaxTimeout();
        atomikosProperties51.setSerialJtaTransactions(true);
        atomikosProperties51.setForceShutdownOnVmExit(false);
        atomikosProperties51.setForceShutdownOnVmExit(false);
        long long63 = atomikosProperties51.getCheckpointInterval();
        long long64 = atomikosProperties51.getDefaultJtaTimeout();
        boolean boolean65 = properties11.remove((java.lang.Object) properties28, (java.lang.Object) long64);
        java.io.Reader reader66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.load(reader66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10L + "'", long64 == 10L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test8428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8428");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = atomikosProperties21.getTransactionManagerUniqueName();
        long long33 = atomikosProperties21.getDefaultJtaTimeout();
        atomikosProperties21.setDefaultJtaTimeout((long) (short) 100);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
    }

    @Test
    public void test8429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8429");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setLogBaseName("{{}=tmlog}");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj15 = properties11.setProperty("{hi!=hi!, {}={}}", "tmlog");
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.storeToXML(outputStream16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test8430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8430");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        int int26 = atomikosProperties22.getMaxActives();
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) 1);
        atomikosProperties22.setLogBaseDir("{}");
        java.util.Properties properties31 = atomikosProperties22.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) '#');
        atomikosProperties40.setForceShutdownOnVmExit(true);
        java.lang.String str47 = atomikosProperties40.getLogBaseDir();
        java.lang.Object obj48 = properties39.remove((java.lang.Object) atomikosProperties40);
        java.util.Enumeration<?> wildcardEnumeration49 = properties39.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties39.entrySet();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxActives((int) (byte) 0);
        boolean boolean64 = properties54.containsValue((java.lang.Object) atomikosProperties59);
        java.lang.Object obj65 = properties31.getOrDefault((java.lang.Object) properties39, (java.lang.Object) atomikosProperties59);
        long long66 = atomikosProperties59.getMaxTimeout();
        java.util.Properties properties67 = atomikosProperties59.asProperties();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertNotNull(properties67);
    }

    @Test
    public void test8431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8431");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.lang.String str8 = properties4.toString();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        java.lang.String str18 = properties13.getProperty("");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties13.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setCheckpointInterval((long) (byte) 0);
        atomikosProperties29.setEnableLogging(true);
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setMaxActives((int) (short) 100);
        boolean boolean39 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) atomikosProperties29);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        boolean boolean42 = atomikosProperties29.isEnableLogging();
        long long43 = atomikosProperties29.getMaxTimeout();
        atomikosProperties29.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
    }

    @Test
    public void test8432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8432");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (byte) 0);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout(50L);
        java.lang.String str18 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
    }

    @Test
    public void test8433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8433");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxActives((int) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        boolean boolean19 = atomikosProperties10.isThreadedTwoPhaseCommit();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties41.isEmpty();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        boolean boolean50 = properties41.containsKey((java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxActives((int) (byte) 0);
        java.lang.Object obj56 = properties26.getOrDefault((java.lang.Object) boolean50, (java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet57 = properties26.stringPropertyNames();
        java.lang.Object obj58 = properties9.putIfAbsent((java.lang.Object) atomikosProperties10, (java.lang.Object) strSet57);
        boolean boolean59 = atomikosProperties10.isSerialJtaTransactions();
        atomikosProperties10.setDefaultJtaTimeout(300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 0 + "'", obj56, (byte) 0);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test8434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8434");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties12.entrySet();
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties14.entrySet();
        java.lang.String str16 = properties14.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        java.util.Set<java.lang.Object> objSet18 = properties14.keySet();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test8435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8435");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setCheckpointInterval(300000L);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean16 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test8436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8436");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.elements();
        java.util.Properties properties20 = new java.util.Properties(properties4);
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        atomikosProperties22.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties22.setMaxActives(1);
        boolean boolean32 = properties21.containsKey((java.lang.Object) atomikosProperties22);
        atomikosProperties22.setSerialJtaTransactions(false);
        java.lang.String str35 = atomikosProperties22.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test8437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8437");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        boolean boolean50 = properties34.contains((java.lang.Object) "hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties34.elements();
        properties34.clear();
        int int53 = properties34.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties54.setCheckpointInterval((long) (byte) 0);
        long long59 = atomikosProperties54.getMaxTimeout();
        atomikosProperties54.setSerialJtaTransactions(true);
        atomikosProperties54.setForceShutdownOnVmExit(false);
        java.lang.String str64 = atomikosProperties54.getLogBaseDir();
        atomikosProperties54.setForceShutdownOnVmExit(true);
        java.util.Properties properties67 = atomikosProperties54.asProperties();
        boolean boolean68 = properties34.contains((java.lang.Object) properties67);
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.storeToXML(outputStream69, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test8438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8438");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        boolean boolean10 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties4.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties16.entrySet();
        boolean boolean21 = properties4.contains((java.lang.Object) objEntrySet20);
        java.util.Properties properties22 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.keys();
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.store(outputStream24, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=32, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
    }

    @Test
    public void test8439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8439");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setCheckpointInterval((long) (byte) 0);
        atomikosProperties38.setEnableLogging(true);
        long long45 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj46 = properties4.remove((java.lang.Object) atomikosProperties38);
        properties4.clear();
        java.lang.Object obj48 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        java.util.Properties properties56 = atomikosProperties49.asProperties();
        java.lang.String str57 = atomikosProperties49.getLogBaseName();
        java.util.Properties properties58 = atomikosProperties49.asProperties();
        java.lang.String str59 = atomikosProperties49.getLogBaseDir();
        java.lang.String str60 = atomikosProperties49.getLogBaseDir();
        java.lang.String str61 = atomikosProperties49.getService();
        boolean boolean62 = properties4.equals((java.lang.Object) atomikosProperties49);
        java.lang.Object obj65 = properties4.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{=}");
        java.util.Collection<java.lang.Object> objCollection66 = properties4.values();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objCollection66);
    }

    @Test
    public void test8440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8440");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean26 = atomikosProperties23.isForceShutdownOnVmExit();
        atomikosProperties23.setMaxActives(0);
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) 0);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties37.entrySet();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        properties47.clear();
        int int51 = properties47.size();
        java.util.Properties properties52 = new java.util.Properties(properties47);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        properties57.clear();
        java.lang.String str62 = properties57.getProperty("");
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.lang.Object obj71 = properties37.put((java.lang.Object) properties47, (java.lang.Object) properties65);
        java.util.Collection<java.lang.Object> objCollection72 = properties65.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties65.entrySet();
        boolean boolean74 = properties65.isEmpty();
        java.lang.Object obj75 = properties22.replace((java.lang.Object) 0, (java.lang.Object) properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setDefaultJtaTimeout((long) (byte) 10);
        long long79 = atomikosProperties76.getDefaultJtaTimeout();
        atomikosProperties76.setTransactionManagerUniqueName("");
        long long82 = atomikosProperties76.getMaxTimeout();
        java.util.Properties properties83 = atomikosProperties76.asProperties();
        atomikosProperties76.setCheckpointInterval((long) (short) 10);
        boolean boolean86 = properties65.contains((java.lang.Object) (short) 10);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 10L + "'", long79 == 10L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 300000L + "'", long82 == 300000L);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test8441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8441");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        java.util.Set<java.lang.String> strSet16 = properties13.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test8442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8442");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test8443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8443");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) ' ');
        atomikosProperties0.setDefaultJtaTimeout((long) 100);
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long12 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
    }

    @Test
    public void test8444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8444");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getService();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxActives((int) '#');
        atomikosProperties10.setForceShutdownOnVmExit(true);
        java.lang.String str17 = atomikosProperties10.getLogBaseDir();
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.util.Set<java.lang.String> strSet19 = properties18.stringPropertyNames();
        boolean boolean20 = properties9.contains((java.lang.Object) properties18);
        java.util.Properties properties21 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("");
        boolean boolean28 = atomikosProperties22.isEnableLogging();
        java.lang.String str29 = atomikosProperties22.getLogBaseDir();
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        atomikosProperties22.setForceShutdownOnVmExit(true);
        atomikosProperties22.setMaxTimeout(50L);
        boolean boolean35 = properties21.equals((java.lang.Object) 50L);
        java.util.Set<java.lang.String> strSet36 = properties21.stringPropertyNames();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet36);
    }

    @Test
    public void test8445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8445");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties9.setCheckpointInterval((long) (byte) 0);
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.lang.String str34 = atomikosProperties26.getLogBaseName();
        java.util.Properties properties35 = atomikosProperties26.asProperties();
        java.lang.Object obj36 = properties17.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.Object obj38 = properties8.putIfAbsent(obj36, (java.lang.Object) atomikosProperties37);
        java.io.Writer writer39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(writer39, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test8446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8446");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        int int11 = atomikosProperties0.getMaxActives();
        int int12 = atomikosProperties0.getMaxActives();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test8447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8447");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean10 = atomikosProperties9.isSerialJtaTransactions();
        boolean boolean11 = properties8.equals((java.lang.Object) atomikosProperties9);
        boolean boolean12 = atomikosProperties9.isForceShutdownOnVmExit();
        atomikosProperties9.setCheckpointInterval((long) 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test8448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8448");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxActives((int) '#');
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Object obj16 = properties7.remove((java.lang.Object) atomikosProperties8);
        java.util.Collection<java.lang.Object> objCollection17 = properties7.values();
        boolean boolean18 = properties7.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        boolean boolean27 = atomikosProperties20.isEnableLogging();
        java.util.Properties properties28 = atomikosProperties20.asProperties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setCheckpointInterval((long) (byte) 0);
        atomikosProperties37.setTransactionManagerUniqueName("");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.lang.String str45 = atomikosProperties37.getLogBaseName();
        java.util.Properties properties46 = atomikosProperties37.asProperties();
        java.lang.Object obj47 = properties28.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties37);
        java.util.Properties properties48 = atomikosProperties37.asProperties();
        java.lang.String str50 = properties48.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setTransactionManagerUniqueName("");
        boolean boolean58 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setLogBaseDir("");
        java.lang.String str63 = atomikosProperties51.getTransactionManagerUniqueName();
        atomikosProperties51.setEnableLogging(true);
        java.util.Properties properties66 = atomikosProperties51.asProperties();
        boolean boolean67 = atomikosProperties51.isThreadedTwoPhaseCommit();
        atomikosProperties51.setSerialJtaTransactions(false);
        java.lang.Object obj70 = properties7.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", (java.lang.Object) atomikosProperties51);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test8449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8449");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties9.put((java.lang.Object) properties11, (java.lang.Object) (short) 1);
        java.lang.Object obj16 = properties11.setProperty("tmlog", "{}");
        java.util.Properties properties17 = new java.util.Properties(properties11);
        boolean boolean18 = properties4.containsValue((java.lang.Object) properties11);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties23.clear();
        int int27 = properties23.size();
        java.util.Properties properties28 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getMaxActives();
        long long31 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties32 = atomikosProperties29.asProperties();
        java.util.Properties properties33 = atomikosProperties29.asProperties();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        java.lang.Object obj42 = properties23.replace((java.lang.Object) atomikosProperties29, (java.lang.Object) properties38);
        atomikosProperties29.setLogBaseName("");
        java.lang.String str45 = atomikosProperties29.getTransactionManagerUniqueName();
        atomikosProperties29.setDefaultJtaTimeout((long) (short) 1);
        boolean boolean48 = atomikosProperties29.isThreadedTwoPhaseCommit();
        atomikosProperties29.setEnableLogging(false);
        boolean boolean51 = atomikosProperties29.isForceShutdownOnVmExit();
        java.util.Properties properties52 = atomikosProperties29.asProperties();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(properties52);
    }

    @Test
    public void test8450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8450");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test8451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8451");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        boolean boolean72 = properties64.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties64.keys();
        java.lang.Object obj76 = properties64.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{=}");
        java.util.Enumeration<?> wildcardEnumeration77 = properties64.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(wildcardEnumeration77);
    }

    @Test
    public void test8452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8452");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setForceShutdownOnVmExit(true);
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties19);
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        int int37 = properties33.size();
        java.lang.Object obj39 = properties33.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        long long42 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties40.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties48.entrySet();
        java.lang.Object obj53 = properties43.remove((java.lang.Object) properties48);
        java.util.Enumeration<?> wildcardEnumeration54 = properties43.propertyNames();
        java.util.Properties properties55 = new java.util.Properties(properties43);
        boolean boolean56 = properties10.replace((java.lang.Object) objCollection28, (java.lang.Object) properties33, (java.lang.Object) properties55);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties55.entrySet();
        boolean boolean58 = properties55.isEmpty();
        java.io.Reader reader59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.load(reader59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test8453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8453");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.Object obj8 = properties4.setProperty("{=}", "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test8454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8454");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setForceShutdownOnVmExit(true);
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties19);
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        int int37 = properties33.size();
        java.lang.Object obj39 = properties33.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        long long42 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties40.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties48.entrySet();
        java.lang.Object obj53 = properties43.remove((java.lang.Object) properties48);
        java.util.Enumeration<?> wildcardEnumeration54 = properties43.propertyNames();
        java.util.Properties properties55 = new java.util.Properties(properties43);
        boolean boolean56 = properties10.replace((java.lang.Object) objCollection28, (java.lang.Object) properties33, (java.lang.Object) properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties55.keys();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
    }

    @Test
    public void test8455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8455");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval(52L);
        atomikosProperties17.setLogBaseDir("hi!");
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.String str28 = properties26.getProperty("");
        java.util.Properties properties29 = new java.util.Properties(properties26);
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.storeToXML(outputStream30, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test8456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8456");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        int int37 = properties36.size();
        java.util.Properties properties38 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setMaxTimeout((long) (short) -1);
        long long46 = atomikosProperties39.getDefaultJtaTimeout();
        java.util.Properties properties47 = atomikosProperties39.asProperties();
        java.util.Properties properties48 = atomikosProperties39.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.keys();
        java.lang.Object obj50 = properties10.replace((java.lang.Object) properties36, (java.lang.Object) objEnumeration49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties10.elements();
        java.util.Properties properties52 = new java.util.Properties(properties10);
        java.io.InputStream inputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.loadFromXML(inputStream53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 9 + "'", int37 == 9);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
    }

    @Test
    public void test8457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8457");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        boolean boolean18 = properties4.containsValue((java.lang.Object) 50);
        java.util.Properties properties19 = new java.util.Properties(properties4);
        boolean boolean20 = properties19.isEmpty();
        java.util.Set<java.lang.String> strSet21 = properties19.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.util.Properties properties31 = atomikosProperties23.asProperties();
        java.lang.String str32 = atomikosProperties23.getService();
        atomikosProperties23.setMaxActives(1);
        boolean boolean35 = properties19.contains((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setMaxTimeout((long) (byte) 1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test8458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8458");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.keys();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) (byte) 0);
        java.lang.Object obj34 = properties4.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet35 = properties4.stringPropertyNames();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        int int38 = properties37.size();
        boolean boolean39 = properties4.contains((java.lang.Object) int38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        long long43 = atomikosProperties40.getDefaultJtaTimeout();
        atomikosProperties40.setTransactionManagerUniqueName("hi!");
        atomikosProperties40.setSerialJtaTransactions(true);
        java.util.Properties properties48 = atomikosProperties40.asProperties();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        boolean boolean56 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setCheckpointInterval((long) (byte) 0);
        atomikosProperties57.setTransactionManagerUniqueName("");
        java.util.Properties properties64 = atomikosProperties57.asProperties();
        java.lang.Object obj65 = properties51.remove((java.lang.Object) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties66.setCheckpointInterval((long) (byte) 0);
        atomikosProperties66.setTransactionManagerUniqueName("");
        java.lang.Object obj73 = properties64.remove((java.lang.Object) atomikosProperties66);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties64.keys();
        java.lang.Object obj75 = properties4.replace((java.lang.Object) atomikosProperties40, (java.lang.Object) objEnumeration74);
        java.util.Properties properties76 = new java.util.Properties(properties4);
        java.lang.String str78 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10L + "'", long43 == 10L);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test8459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8459");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        atomikosProperties8.setCheckpointInterval(100L);
        java.lang.String str19 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        boolean boolean24 = properties5.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int26 = atomikosProperties25.getMaxActives();
        long long27 = atomikosProperties25.getMaxTimeout();
        java.lang.String str28 = atomikosProperties25.getLogBaseDir();
        java.lang.String str29 = atomikosProperties25.getTransactionManagerUniqueName();
        atomikosProperties25.setMaxTimeout((long) (byte) 10);
        long long32 = atomikosProperties25.getCheckpointInterval();
        int int33 = atomikosProperties25.getMaxActives();
        long long34 = atomikosProperties25.getMaxTimeout();
        long long35 = atomikosProperties25.getCheckpointInterval();
        java.lang.Object obj36 = properties5.remove((java.lang.Object) atomikosProperties25);
        java.lang.String str37 = atomikosProperties25.getLogBaseName();
        java.util.Properties properties38 = atomikosProperties25.asProperties();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 500L + "'", long32 == 500L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNotNull(properties38);
    }

    @Test
    public void test8460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8460");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet19 = properties4.keySet();
        java.util.Properties properties20 = new java.util.Properties(properties4);
        java.lang.String str22 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test8461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8461");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test8462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8462");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Set<java.lang.Object> objSet19 = properties5.keySet();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean24 = properties22.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.lang.Object obj33 = properties22.remove((java.lang.Object) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties22.propertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setTransactionManagerUniqueName("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        long long44 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties41.isEnableLogging();
        java.lang.String str48 = atomikosProperties41.getLogBaseDir();
        java.util.Properties properties49 = atomikosProperties41.asProperties();
        java.lang.String str50 = atomikosProperties41.getService();
        atomikosProperties41.setMaxActives((int) (short) 1);
        atomikosProperties41.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj55 = properties5.put((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosProperties41);
        long long56 = atomikosProperties36.getDefaultJtaTimeout();
        java.lang.String str57 = atomikosProperties36.getService();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10L + "'", long44 == 10L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test8463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8463");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxActives((int) '#');
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Object obj16 = properties7.remove((java.lang.Object) atomikosProperties8);
        boolean boolean17 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.util.Properties properties18 = atomikosProperties8.asProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        atomikosProperties8.setLogBaseName("{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test8464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8464");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection7 = properties4.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        boolean boolean23 = properties12.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet24 = properties12.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        long long28 = atomikosProperties25.getDefaultJtaTimeout();
        java.lang.Object obj29 = properties12.get((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties12.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxActives((int) '#');
        atomikosProperties31.setEnableLogging(true);
        int int38 = atomikosProperties31.getMaxActives();
        boolean boolean39 = properties12.containsValue((java.lang.Object) atomikosProperties31);
        java.util.Properties properties40 = atomikosProperties31.asProperties();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties43.isEmpty();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        boolean boolean52 = properties43.containsKey((java.lang.Object) properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        boolean boolean61 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        java.lang.Object obj70 = properties56.remove((java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties71.setCheckpointInterval((long) (byte) 0);
        atomikosProperties71.setTransactionManagerUniqueName("");
        java.lang.Object obj78 = properties69.remove((java.lang.Object) atomikosProperties71);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties69.elements();
        java.lang.Object obj80 = properties53.get((java.lang.Object) properties69);
        java.lang.Object obj81 = properties4.putIfAbsent((java.lang.Object) properties40, (java.lang.Object) properties53);
        int int82 = properties4.size();
        java.lang.Object obj85 = properties4.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 35 + "'", int38 == 35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test8465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8465");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties4.setCheckpointInterval((long) (byte) 0);
        atomikosProperties4.setTransactionManagerUniqueName("");
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        atomikosProperties4.setCheckpointInterval((-1L));
        long long16 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setService("hi!");
        java.util.Properties properties19 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getMaxActives();
        long long22 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties23 = atomikosProperties20.asProperties();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        java.util.Properties properties31 = new java.util.Properties(properties28);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties28.entrySet();
        java.lang.Object obj33 = properties23.remove((java.lang.Object) properties28);
        java.util.Enumeration<?> wildcardEnumeration34 = properties23.propertyNames();
        java.util.Properties properties35 = new java.util.Properties(properties23);
        java.lang.Object obj36 = properties2.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.io.Reader reader38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.load(reader38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10L + "'", long16 == 10L);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test8466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8466");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean24 = properties22.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties25 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.keys();
        java.lang.Object obj27 = properties4.get((java.lang.Object) properties25);
        int int28 = properties4.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean30 = atomikosProperties29.isForceShutdownOnVmExit();
        java.util.Properties properties31 = atomikosProperties29.asProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        java.lang.Class<?> wildcardClass34 = atomikosProperties29.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setDefaultJtaTimeout((long) (byte) 10);
        long long38 = atomikosProperties35.getDefaultJtaTimeout();
        atomikosProperties35.setTransactionManagerUniqueName("hi!");
        atomikosProperties35.setLogBaseName("tmlog");
        atomikosProperties35.setCheckpointInterval(300000L);
        boolean boolean45 = atomikosProperties35.isSerialJtaTransactions();
        boolean boolean46 = properties4.remove((java.lang.Object) atomikosProperties29, (java.lang.Object) boolean45);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 1 + "'", obj27, (short) 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10L + "'", long38 == 10L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test8467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8467");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        long long19 = atomikosProperties13.getCheckpointInterval();
        atomikosProperties13.setSerialJtaTransactions(false);
        long long22 = atomikosProperties13.getDefaultJtaTimeout();
        boolean boolean23 = atomikosProperties13.isEnableLogging();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 500L + "'", long19 == 500L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test8468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8468");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        atomikosProperties8.setCheckpointInterval(100L);
        java.lang.String str19 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        boolean boolean24 = properties5.contains((java.lang.Object) true);
        boolean boolean25 = properties5.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test8469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8469");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.lang.String str28 = atomikosProperties25.getService();
        boolean boolean29 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.Object obj30 = properties19.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties25);
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean33 = atomikosProperties25.isEnableLogging();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test8470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8470");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<?> wildcardEnumeration12 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        java.lang.String str21 = atomikosProperties13.getLogBaseName();
        java.util.Properties properties22 = atomikosProperties13.asProperties();
        atomikosProperties13.setEnableLogging(true);
        boolean boolean25 = atomikosProperties13.isSerialJtaTransactions();
        java.lang.Object obj26 = properties4.get((java.lang.Object) boolean25);
        java.util.Properties properties27 = new java.util.Properties(properties4);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties30.isEmpty();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        boolean boolean39 = properties30.containsKey((java.lang.Object) properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties43.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        java.util.Properties properties56 = atomikosProperties49.asProperties();
        java.lang.Object obj57 = properties43.remove((java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties58.setCheckpointInterval((long) (byte) 0);
        atomikosProperties58.setTransactionManagerUniqueName("");
        java.lang.Object obj65 = properties56.remove((java.lang.Object) atomikosProperties58);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties56.elements();
        java.lang.Object obj67 = properties40.get((java.lang.Object) properties56);
        java.lang.Object obj68 = properties40.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties40.entrySet();
        java.lang.Object obj70 = properties4.remove((java.lang.Object) objEntrySet69);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test8471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8471");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.lang.String str72 = atomikosProperties34.getService();
        java.util.Properties properties73 = atomikosProperties34.asProperties();
        java.lang.String str74 = atomikosProperties34.getLogBaseName();
        java.util.Properties properties75 = atomikosProperties34.asProperties();
        java.util.Properties properties76 = atomikosProperties34.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(objEnumeration77);
    }

    @Test
    public void test8472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8472");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        boolean boolean26 = atomikosProperties17.isSerialJtaTransactions();
        java.util.Properties properties27 = atomikosProperties17.asProperties();
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        long long29 = atomikosProperties17.getMaxTimeout();
        int int30 = atomikosProperties17.getMaxActives();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
    }

    @Test
    public void test8473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8473");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        properties2.clear();
        java.util.Set<java.lang.String> strSet6 = properties2.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test8474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8474");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test8475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8475");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        boolean boolean22 = properties13.containsKey((java.lang.Object) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.lang.Object obj40 = properties26.remove((java.lang.Object) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.lang.Object obj48 = properties39.remove((java.lang.Object) atomikosProperties41);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties39.elements();
        java.lang.Object obj50 = properties23.get((java.lang.Object) properties39);
        java.lang.Object obj51 = properties23.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean53 = atomikosProperties52.isForceShutdownOnVmExit();
        java.util.Properties properties54 = atomikosProperties52.asProperties();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties59.clear();
        int int63 = properties59.size();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = new java.util.Properties(properties68);
        java.util.Properties properties72 = new java.util.Properties(properties68);
        boolean boolean74 = properties59.remove((java.lang.Object) properties68, (java.lang.Object) 10.0f);
        boolean boolean75 = properties54.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties77.setCheckpointInterval((long) (byte) 0);
        atomikosProperties77.setEnableLogging(true);
        java.lang.Object obj84 = properties54.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties85 = new java.util.Properties(properties54);
        java.lang.Object obj86 = properties10.getOrDefault((java.lang.Object) properties23, (java.lang.Object) properties85);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setDefaultJtaTimeout((long) (byte) 10);
        long long90 = atomikosProperties87.getDefaultJtaTimeout();
        atomikosProperties87.setTransactionManagerUniqueName("");
        long long93 = atomikosProperties87.getDefaultJtaTimeout();
        boolean boolean94 = atomikosProperties87.isEnableLogging();
        atomikosProperties87.setSerialJtaTransactions(false);
        boolean boolean97 = properties23.containsKey((java.lang.Object) atomikosProperties87);
        boolean boolean98 = atomikosProperties87.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + true + "'", obj84, true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 10L + "'", long90 == 10L);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 10L + "'", long93 == 10L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test8476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8476");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test8477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8477");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        java.util.Properties properties63 = atomikosProperties44.asProperties();
        java.util.Properties properties64 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setDefaultJtaTimeout((long) (byte) 10);
        long long68 = atomikosProperties65.getDefaultJtaTimeout();
        atomikosProperties65.setTransactionManagerUniqueName("hi!");
        atomikosProperties65.setLogBaseName("tmlog");
        boolean boolean73 = atomikosProperties65.isSerialJtaTransactions();
        java.util.Properties properties74 = atomikosProperties65.asProperties();
        long long75 = atomikosProperties65.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        atomikosProperties76.setMaxActives((int) (byte) 0);
        atomikosProperties76.setEnableLogging(true);
        atomikosProperties76.setMaxActives((int) (byte) 1);
        atomikosProperties76.setTransactionManagerUniqueName("hi!");
        java.lang.String str87 = atomikosProperties76.getLogBaseName();
        atomikosProperties76.setSerialJtaTransactions(false);
        java.util.Properties properties90 = atomikosProperties76.asProperties();
        java.lang.Object obj91 = properties64.replace((java.lang.Object) atomikosProperties65, (java.lang.Object) atomikosProperties76);
        java.util.Set<java.lang.Object> objSet92 = properties64.keySet();
        java.io.OutputStream outputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.store(outputStream93, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10L + "'", long68 == 10L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 300000L + "'", long75 == 300000L);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "tmlog" + "'", str87, "tmlog");
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(objSet92);
    }

    @Test
    public void test8478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8478");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        long long13 = atomikosProperties0.getCheckpointInterval();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test8479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8479");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.String str16 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setDefaultJtaTimeout((long) (-1));
        java.lang.String str19 = atomikosProperties8.getService();
        atomikosProperties8.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean22 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties23 = atomikosProperties8.asProperties();
        java.util.Properties properties24 = atomikosProperties8.asProperties();
        java.lang.Object obj25 = properties24.clone();
        java.lang.Object obj26 = properties6.remove((java.lang.Object) properties24);
        java.io.PrintStream printStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.list(printStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals(obj25.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test8480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8480");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj35 = properties9.clone();
        boolean boolean36 = properties9.isEmpty();
        java.lang.String str37 = properties9.toString();
        properties9.clear();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        boolean boolean43 = properties41.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        java.lang.Object obj52 = properties41.remove((java.lang.Object) properties48);
        java.lang.Object obj55 = properties48.setProperty("", "");
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        boolean boolean71 = properties60.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties72 = new java.util.Properties(properties60);
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setEnableLogging(false);
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        atomikosProperties75.setTransactionManagerUniqueName("tmlog");
        boolean boolean82 = atomikosProperties75.isEnableLogging();
        long long83 = atomikosProperties75.getCheckpointInterval();
        java.lang.Object obj84 = properties9.put((java.lang.Object) properties74, (java.lang.Object) atomikosProperties75);
        java.util.Enumeration<?> wildcardEnumeration85 = properties74.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties74.elements();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{=}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{=}" + "'", str37, "{=}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 500L + "'", long83 == 500L);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertNotNull(objEnumeration86);
    }

    @Test
    public void test8481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8481");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean46 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        java.lang.Class<?> wildcardClass57 = atomikosProperties49.getClass();
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties49);
        java.util.Properties properties59 = new java.util.Properties(properties4);
        java.io.PrintStream printStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.list(printStream60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test8482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8482");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setLogBaseDir("");
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test8483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8483");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.lang.String str22 = properties4.toString();
        java.lang.Object obj25 = properties4.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test8484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8484");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties28.entrySet();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        java.lang.Object obj41 = properties28.get((java.lang.Object) atomikosProperties34);
        java.util.Properties properties42 = atomikosProperties34.asProperties();
        java.util.Set<java.lang.Object> objSet43 = properties42.keySet();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties48.clear();
        java.lang.String str53 = properties48.getProperty("");
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties48.keys();
        java.util.Set<java.lang.Object> objSet63 = properties48.keySet();
        java.lang.Object obj64 = properties19.putIfAbsent((java.lang.Object) properties42, (java.lang.Object) objSet63);
        int int65 = properties42.size();
        java.util.Properties properties66 = new java.util.Properties(properties42);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 9 + "'", int65 == 9);
    }

    @Test
    public void test8485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8485");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setService("{}");
        long long12 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 32L + "'", long12 == 32L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test8486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8486");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties9.setCheckpointInterval((long) (byte) 0);
        atomikosProperties9.setTransactionManagerUniqueName("");
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        java.lang.String str17 = atomikosProperties9.getLogBaseName();
        atomikosProperties9.setCheckpointInterval(100L);
        atomikosProperties9.setLogBaseName("");
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj26 = null;
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) atomikosProperties9, obj26);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test8487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8487");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        long long10 = atomikosProperties8.getMaxTimeout();
        java.lang.String str11 = atomikosProperties8.getLogBaseDir();
        atomikosProperties8.setCheckpointInterval(100L);
        atomikosProperties8.setService("tmlog");
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties4.containsValue((java.lang.Object) objEnumeration17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties23.clear();
        int int27 = properties23.size();
        java.util.Properties properties28 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getMaxActives();
        long long31 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties32 = atomikosProperties29.asProperties();
        java.util.Properties properties33 = atomikosProperties29.asProperties();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        java.lang.Object obj42 = properties23.replace((java.lang.Object) atomikosProperties29, (java.lang.Object) properties38);
        java.util.Set<java.lang.String> strSet43 = properties23.stringPropertyNames();
        java.lang.Object obj46 = properties23.setProperty("{}", "tmlog");
        boolean boolean47 = properties23.isEmpty();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties50.isEmpty();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        boolean boolean59 = properties50.containsKey((java.lang.Object) properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Properties properties63 = new java.util.Properties(properties61);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.lang.Object obj67 = properties63.put((java.lang.Object) properties65, (java.lang.Object) (short) 1);
        boolean boolean68 = properties63.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties69.setCheckpointInterval((long) (byte) 0);
        atomikosProperties69.setTransactionManagerUniqueName("");
        java.util.Properties properties76 = atomikosProperties69.asProperties();
        java.lang.Object obj77 = properties63.remove((java.lang.Object) properties76);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties78.setCheckpointInterval((long) (byte) 0);
        atomikosProperties78.setTransactionManagerUniqueName("");
        java.lang.Object obj85 = properties76.remove((java.lang.Object) atomikosProperties78);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties76.elements();
        java.lang.Object obj87 = properties60.get((java.lang.Object) properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties60.keys();
        boolean boolean89 = properties60.isEmpty();
        java.lang.Object obj90 = properties60.clone();
        java.lang.Object obj91 = properties4.getOrDefault((java.lang.Object) boolean47, (java.lang.Object) properties60);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{}");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
    }

    @Test
    public void test8488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8488");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{{}=1}");
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test8489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8489");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (short) 10);
        long long13 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxTimeout((long) 2);
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10L + "'", long16 == 10L);
    }

    @Test
    public void test8490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8490");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Collection<java.lang.Object> objCollection12 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties4.propertyNames();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties18.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet30 = properties18.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        long long34 = atomikosProperties31.getDefaultJtaTimeout();
        java.lang.Object obj35 = properties18.get((java.lang.Object) atomikosProperties31);
        int int36 = properties18.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setCheckpointInterval((long) (byte) 0);
        atomikosProperties37.setTransactionManagerUniqueName("");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.lang.String str45 = atomikosProperties37.getTransactionManagerUniqueName();
        atomikosProperties37.setDefaultJtaTimeout((long) (-1));
        java.lang.String str48 = atomikosProperties37.getService();
        atomikosProperties37.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean51 = atomikosProperties37.isSerialJtaTransactions();
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj54 = properties18.get((java.lang.Object) atomikosProperties37);
        boolean boolean55 = properties4.containsKey((java.lang.Object) properties18);
        java.io.InputStream inputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test8491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8491");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.lang.Object obj20 = properties13.setProperty("hi!", "hi!");
        java.lang.Object obj23 = properties13.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        java.lang.String str32 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj35 = properties8.put((java.lang.Object) properties13, (java.lang.Object) atomikosProperties24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties8.entrySet();
        java.io.OutputStream outputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(outputStream37, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEntrySet36);
    }

    @Test
    public void test8492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8492");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("hi!");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.String str12 = properties11.toString();
        java.lang.String str13 = properties11.toString();
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.storeToXML(outputStream14, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}" + "'", str12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}" + "'", str13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test8493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8493");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        java.util.Properties properties49 = new java.util.Properties(properties34);
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.storeToXML(outputStream50, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test8494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8494");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        boolean boolean25 = atomikosProperties17.isForceShutdownOnVmExit();
        boolean boolean26 = properties4.containsValue((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties17.setSerialJtaTransactions(false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test8495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8495");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        atomikosProperties10.setLogBaseName("");
        java.lang.String str26 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties10.setEnableLogging(true);
        java.lang.String str31 = atomikosProperties10.getService();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setEnableLogging(false);
        int int36 = atomikosProperties10.getMaxActives();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
    }

    @Test
    public void test8496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8496");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties9.clear();
        java.lang.Object obj14 = properties9.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties15 = new java.util.Properties(properties9);
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.storeToXML(outputStream16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test8497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8497");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int13 = atomikosProperties12.getMaxActives();
        long long14 = atomikosProperties12.getMaxTimeout();
        java.util.Properties properties15 = atomikosProperties12.asProperties();
        java.util.Properties properties16 = atomikosProperties12.asProperties();
        java.lang.String str17 = atomikosProperties12.getTransactionManagerUniqueName();
        java.util.Properties properties18 = atomikosProperties12.asProperties();
        atomikosProperties12.setMaxTimeout((long) 32);
        long long21 = atomikosProperties12.getDefaultJtaTimeout();
        boolean boolean22 = properties11.containsKey((java.lang.Object) atomikosProperties12);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test8498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8498");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxActives((int) '#');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        java.lang.Object obj26 = properties17.remove((java.lang.Object) atomikosProperties18);
        java.util.Collection<java.lang.Object> objCollection27 = properties17.values();
        boolean boolean28 = properties8.contains((java.lang.Object) properties17);
        java.util.Properties properties29 = new java.util.Properties(properties8);
        boolean boolean30 = properties29.isEmpty();
        java.lang.Object obj33 = properties29.setProperty("{}", "");
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        java.lang.String str37 = properties29.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{[]={}}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{[]={}}" + "'", str37, "{[]={}}");
    }

    @Test
    public void test8499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8499");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        atomikosProperties13.setThreadedTwoPhaseCommit(false);
        atomikosProperties13.setMaxActives((int) (byte) 1);
        java.util.Properties properties25 = atomikosProperties13.asProperties();
        boolean boolean26 = properties12.contains((java.lang.Object) atomikosProperties13);
        java.util.Properties properties27 = new java.util.Properties(properties12);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test8500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8500");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj35 = properties9.clone();
        boolean boolean36 = properties9.isEmpty();
        java.lang.String str37 = properties9.toString();
        properties9.clear();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        boolean boolean43 = properties41.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        java.lang.Object obj52 = properties41.remove((java.lang.Object) properties48);
        java.lang.Object obj55 = properties48.setProperty("", "");
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        boolean boolean71 = properties60.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties72 = new java.util.Properties(properties60);
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setEnableLogging(false);
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        atomikosProperties75.setTransactionManagerUniqueName("tmlog");
        boolean boolean82 = atomikosProperties75.isEnableLogging();
        long long83 = atomikosProperties75.getCheckpointInterval();
        java.lang.Object obj84 = properties9.put((java.lang.Object) properties74, (java.lang.Object) atomikosProperties75);
        java.util.Properties properties85 = atomikosProperties75.asProperties();
        int int86 = atomikosProperties75.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{=}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{=}" + "'", str37, "{=}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 500L + "'", long83 == 500L);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 50 + "'", int86 == 50);
    }
}
